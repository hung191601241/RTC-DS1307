

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 05 07:31:07 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 2.20
    67                           ; Generated 12/02/2020 GMT
    68                           ; 
    69                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F877A Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  0087                     	;# 
   139  0088                     	;# 
   140  0089                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  0008                     	;# 
   289  0009                     	;# 
   290  000A                     	;# 
   291  000B                     	;# 
   292  000C                     	;# 
   293  000D                     	;# 
   294  000E                     	;# 
   295  000E                     	;# 
   296  000F                     	;# 
   297  0010                     	;# 
   298  0011                     	;# 
   299  0012                     	;# 
   300  0013                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001B                     	;# 
   311  001C                     	;# 
   312  001D                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  0081                     	;# 
   316  0085                     	;# 
   317  0086                     	;# 
   318  0087                     	;# 
   319  0088                     	;# 
   320  0089                     	;# 
   321  008C                     	;# 
   322  008D                     	;# 
   323  008E                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0093                     	;# 
   327  0094                     	;# 
   328  0098                     	;# 
   329  0099                     	;# 
   330  009C                     	;# 
   331  009D                     	;# 
   332  009E                     	;# 
   333  009F                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  018C                     	;# 
   339  018D                     	;# 
   340                           
   341                           	psect	idataBANK0
   342  11FF                     __pidataBANK0:
   343                           
   344                           ;initializer for _thang
   345  11FF  3401               	retlw	1
   346  1200  3400               	retlw	0
   347                           
   348                           ;initializer for _ngay
   349  1201  3401               	retlw	1
   350  1202  3400               	retlw	0
   351                           
   352                           ;initializer for _thu
   353  1203  3401               	retlw	1
   354  1204  3400               	retlw	0
   355                           
   356                           ;initializer for _MODE
   357  1205  3418               	retlw	24
   358  1206  3400               	retlw	0
   359                           
   360                           ;initializer for _AP
   361  1207  3401               	retlw	1
   362                           
   363                           ;initializer for _Mode
   364  1208  3401               	retlw	1
   365                           
   366                           	psect	stringtext
   367  0800                     __pstringtext:
   368  0800                     stringtab:
   369  0800                     __stringtab:
   370                           
   371                           ;	String table - string pointers are 2 bytes each
   372  0800  1BFF               	btfsc	btemp+1,7
   373  0801  280A               	ljmp	stringcode
   374  0802  1383               	bcf	3,7
   375  0803  187F               	btfsc	btemp+1,0
   376  0804  1783               	bsf	3,7
   377  0805  0800               	movf	0,w
   378  0806  0A84               	incf	4,f
   379  0807  1903               	skipnz
   380  0808  0AFF               	incf	btemp+1,f
   381  0809  0008               	return
   382  080A                     stringcode:
   383  080A  087F               	movf	btemp+1,w
   384  080B  397F               	andlw	127
   385  080C  008A               	movwf	10
   386  080D  0804               	movf	4,w
   387  080E  0A84               	incf	4,f
   388  080F  1903               	skipnz
   389  0810  0AFF               	incf	btemp+1,f
   390  0811  0082               	movwf	2
   391  0812                     __stringbase:
   392  0812                     __end_of__stringtab:
   393  0812                     _hexpowers:
   394  0812  3401               	retlw	1
   395  0813  3400               	retlw	0
   396  0814  3410               	retlw	16
   397  0815  3400               	retlw	0
   398  0816  3400               	retlw	0
   399  0817  3401               	retlw	1
   400  0818  3400               	retlw	0
   401  0819  3410               	retlw	16
   402  081A                     __end_of_hexpowers:
   403  0013                     _SSPBUF	set	19
   404  0014                     _SSPCONbits	set	20
   405  0031                     _RB1	set	49
   406  0030                     _RB0	set	48
   407  0034                     _RB4	set	52
   408  0033                     _RB3	set	51
   409  0032                     _RB2	set	50
   410  0040                     _RD0	set	64
   411  0091                     _SSPCON2bits	set	145
   412  0091                     _SSPCON2	set	145
   413  0093                     _SSPADD	set	147
   414  0094                     _SSPSTATbits	set	148
   415  0081                     _OPTION_REGbits	set	129
   416  0086                     _TRISB	set	134
   417  048C                     _ACKEN	set	1164
   418  048D                     _ACKDT	set	1165
   419  043C                     _TRISC4	set	1084
   420  043B                     _TRISC3	set	1083
   421  0440                     _TRISD0	set	1088
   422  081A                     STR_10:
   423  081A  3420               	retlw	32	;' '
   424  081B  3425               	retlw	37	;'%'
   425  081C  3430               	retlw	48	;'0'
   426  081D  3432               	retlw	50	;'2'
   427  081E  3478               	retlw	120	;'x'
   428  081F  343A               	retlw	58	;':'
   429  0820  3425               	retlw	37	;'%'
   430  0821  3430               	retlw	48	;'0'
   431  0822  3432               	retlw	50	;'2'
   432  0823  3478               	retlw	120	;'x'
   433  0824  343A               	retlw	58	;':'
   434  0825  3425               	retlw	37	;'%'
   435  0826  3430               	retlw	48	;'0'
   436  0827  3432               	retlw	50	;'2'
   437  0828  3478               	retlw	120	;'x'
   438  0829  3420               	retlw	32	;' '
   439  082A  3420               	retlw	32	;' '
   440  082B  3420               	retlw	32	;' '
   441  082C  3420               	retlw	32	;' '
   442  082D  3420               	retlw	32	;' '
   443  082E  3420               	retlw	32	;' '
   444  082F  3420               	retlw	32	;' '
   445  0830  3400               	retlw	0
   446  0831                     STR_8:
   447  0831  3420               	retlw	32	;' '
   448  0832  3425               	retlw	37	;'%'
   449  0833  3430               	retlw	48	;'0'
   450  0834  3432               	retlw	50	;'2'
   451  0835  3478               	retlw	120	;'x'
   452  0836  343A               	retlw	58	;':'
   453  0837  3425               	retlw	37	;'%'
   454  0838  3430               	retlw	48	;'0'
   455  0839  3432               	retlw	50	;'2'
   456  083A  3478               	retlw	120	;'x'
   457  083B  343A               	retlw	58	;':'
   458  083C  3425               	retlw	37	;'%'
   459  083D  3430               	retlw	48	;'0'
   460  083E  3432               	retlw	50	;'2'
   461  083F  3478               	retlw	120	;'x'
   462  0840  3420               	retlw	32	;' '
   463  0841  3441               	retlw	65	;'A'
   464  0842  344D               	retlw	77	;'M'
   465  0843  3420               	retlw	32	;' '
   466  0844  3420               	retlw	32	;' '
   467  0845  3420               	retlw	32	;' '
   468  0846  3420               	retlw	32	;' '
   469  0847  3400               	retlw	0
   470  0848                     STR_9:
   471  0848  3420               	retlw	32	;' '
   472  0849  3425               	retlw	37	;'%'
   473  084A  3430               	retlw	48	;'0'
   474  084B  3432               	retlw	50	;'2'
   475  084C  3478               	retlw	120	;'x'
   476  084D  343A               	retlw	58	;':'
   477  084E  3425               	retlw	37	;'%'
   478  084F  3430               	retlw	48	;'0'
   479  0850  3432               	retlw	50	;'2'
   480  0851  3478               	retlw	120	;'x'
   481  0852  343A               	retlw	58	;':'
   482  0853  3425               	retlw	37	;'%'
   483  0854  3430               	retlw	48	;'0'
   484  0855  3432               	retlw	50	;'2'
   485  0856  3478               	retlw	120	;'x'
   486  0857  3420               	retlw	32	;' '
   487  0858  3450               	retlw	80	;'P'
   488  0859  344D               	retlw	77	;'M'
   489  085A  3420               	retlw	32	;' '
   490  085B  3420               	retlw	32	;' '
   491  085C  3420               	retlw	32	;' '
   492  085D  3420               	retlw	32	;' '
   493  085E  3400               	retlw	0
   494  085F                     STR_24:
   495  085F  3420               	retlw	32	;' '
   496  0860  3420               	retlw	32	;' '
   497  0861  3443               	retlw	67	;'C'
   498  0862  3441               	retlw	65	;'A'
   499  0863  3449               	retlw	73	;'I'
   500  0864  3420               	retlw	32	;' '
   501  0865  3444               	retlw	68	;'D'
   502  0866  3441               	retlw	65	;'A'
   503  0867  3454               	retlw	84	;'T'
   504  0868  3420               	retlw	32	;' '
   505  0869  3454               	retlw	84	;'T'
   506  086A  3448               	retlw	72	;'H'
   507  086B  3441               	retlw	65	;'A'
   508  086C  344E               	retlw	78	;'N'
   509  086D  3447               	retlw	71	;'G'
   510  086E  3420               	retlw	32	;' '
   511  086F  3420               	retlw	32	;' '
   512  0870  3400               	retlw	0
   513  0871                     STR_11:
   514  0871  342C               	retlw	44	;','
   515  0872  3425               	retlw	37	;'%'
   516  0873  3430               	retlw	48	;'0'
   517  0874  3432               	retlw	50	;'2'
   518  0875  3478               	retlw	120	;'x'
   519  0876  342F               	retlw	47	;'/'
   520  0877  3425               	retlw	37	;'%'
   521  0878  3430               	retlw	48	;'0'
   522  0879  3432               	retlw	50	;'2'
   523  087A  3478               	retlw	120	;'x'
   524  087B  342F               	retlw	47	;'/'
   525  087C  3432               	retlw	50	;'2'
   526  087D  3430               	retlw	48	;'0'
   527  087E  3425               	retlw	37	;'%'
   528  087F  3430               	retlw	48	;'0'
   529  0880  3432               	retlw	50	;'2'
   530  0881  3478               	retlw	120	;'x'
   531  0882  3400               	retlw	0
   532  0883                     STR_52:
   533  0883  3430               	retlw	48	;'0'
   534  0884  3431               	retlw	49	;'1'
   535  0885  3432               	retlw	50	;'2'
   536  0886  3433               	retlw	51	;'3'
   537  0887  3434               	retlw	52	;'4'
   538  0888  3435               	retlw	53	;'5'
   539  0889  3436               	retlw	54	;'6'
   540  088A  3437               	retlw	55	;'7'
   541  088B  3438               	retlw	56	;'8'
   542  088C  3439               	retlw	57	;'9'
   543  088D  3461               	retlw	97	;'a'
   544  088E  3462               	retlw	98	;'b'
   545  088F  3463               	retlw	99	;'c'
   546  0890  3464               	retlw	100	;'d'
   547  0891  3465               	retlw	101	;'e'
   548  0892  3466               	retlw	102	;'f'
   549  0893  3400               	retlw	0
   550  0894                     STR_12:
   551  0894  3420               	retlw	32	;' '
   552  0895  3420               	retlw	32	;' '
   553  0896  3443               	retlw	67	;'C'
   554  0897  3441               	retlw	65	;'A'
   555  0898  3449               	retlw	73	;'I'
   556  0899  3420               	retlw	32	;' '
   557  089A  3444               	retlw	68	;'D'
   558  089B  3441               	retlw	65	;'A'
   559  089C  3454               	retlw	84	;'T'
   560  089D  3420               	retlw	32	;' '
   561  089E  3454               	retlw	84	;'T'
   562  089F  3448               	retlw	72	;'H'
   563  08A0  3455               	retlw	85	;'U'
   564  08A1  3420               	retlw	32	;' '
   565  08A2  3420               	retlw	32	;' '
   566  08A3  3420               	retlw	32	;' '
   567  08A4  3400               	retlw	0
   568  08A5                     STR_43:
   569  08A5  3420               	retlw	32	;' '
   570  08A6  3420               	retlw	32	;' '
   571  08A7  3450               	retlw	80	;'P'
   572  08A8  3452               	retlw	82	;'R'
   573  08A9  344F               	retlw	79	;'O'
   574  08AA  3447               	retlw	71	;'G'
   575  08AB  3452               	retlw	82	;'R'
   576  08AC  3445               	retlw	69	;'E'
   577  08AD  3453               	retlw	83	;'S'
   578  08AE  3453               	retlw	83	;'S'
   579  08AF  342E               	retlw	46	;'.'
   580  08B0  342E               	retlw	46	;'.'
   581  08B1  342E               	retlw	46	;'.'
   582  08B2  342E               	retlw	46	;'.'
   583  08B3  3420               	retlw	32	;' '
   584  08B4  3420               	retlw	32	;' '
   585  08B5  3400               	retlw	0
   586  08B6                     STR_42:
   587  08B6  3420               	retlw	32	;' '
   588  08B7  3420               	retlw	32	;' '
   589  08B8  3453               	retlw	83	;'S'
   590  08B9  3441               	retlw	65	;'A'
   591  08BA  3456               	retlw	86	;'V'
   592  08BB  3445               	retlw	69	;'E'
   593  08BC  3420               	retlw	32	;' '
   594  08BD  3453               	retlw	83	;'S'
   595  08BE  3445               	retlw	69	;'E'
   596  08BF  3454               	retlw	84	;'T'
   597  08C0  3454               	retlw	84	;'T'
   598  08C1  3449               	retlw	73	;'I'
   599  08C2  344E               	retlw	78	;'N'
   600  08C3  3447               	retlw	71	;'G'
   601  08C4  3420               	retlw	32	;' '
   602  08C5  3420               	retlw	32	;' '
   603  08C6  3400               	retlw	0
   604  08C7                     STR_36:
   605  08C7  3420               	retlw	32	;' '
   606  08C8  3420               	retlw	32	;' '
   607  08C9  3443               	retlw	67	;'C'
   608  08CA  3441               	retlw	65	;'A'
   609  08CB  3449               	retlw	73	;'I'
   610  08CC  3420               	retlw	32	;' '
   611  08CD  3444               	retlw	68	;'D'
   612  08CE  3441               	retlw	65	;'A'
   613  08CF  3454               	retlw	84	;'T'
   614  08D0  3420               	retlw	32	;' '
   615  08D1  3450               	retlw	80	;'P'
   616  08D2  3448               	retlw	72	;'H'
   617  08D3  3455               	retlw	85	;'U'
   618  08D4  3454               	retlw	84	;'T'
   619  08D5  3420               	retlw	32	;' '
   620  08D6  3420               	retlw	32	;' '
   621  08D7  3400               	retlw	0
   622  08D8                     STR_21:
   623  08D8  3420               	retlw	32	;' '
   624  08D9  3420               	retlw	32	;' '
   625  08DA  3443               	retlw	67	;'C'
   626  08DB  3441               	retlw	65	;'A'
   627  08DC  3449               	retlw	73	;'I'
   628  08DD  3420               	retlw	32	;' '
   629  08DE  3444               	retlw	68	;'D'
   630  08DF  3441               	retlw	65	;'A'
   631  08E0  3454               	retlw	84	;'T'
   632  08E1  3420               	retlw	32	;' '
   633  08E2  344E               	retlw	78	;'N'
   634  08E3  3447               	retlw	71	;'G'
   635  08E4  3441               	retlw	65	;'A'
   636  08E5  3459               	retlw	89	;'Y'
   637  08E6  3420               	retlw	32	;' '
   638  08E7  3420               	retlw	32	;' '
   639  08E8  3400               	retlw	0
   640  08E9                     STR_39:
   641  08E9  3420               	retlw	32	;' '
   642  08EA  3420               	retlw	32	;' '
   643  08EB  3443               	retlw	67	;'C'
   644  08EC  3441               	retlw	65	;'A'
   645  08ED  3449               	retlw	73	;'I'
   646  08EE  3420               	retlw	32	;' '
   647  08EF  3444               	retlw	68	;'D'
   648  08F0  3441               	retlw	65	;'A'
   649  08F1  3454               	retlw	84	;'T'
   650  08F2  3420               	retlw	32	;' '
   651  08F3  3447               	retlw	71	;'G'
   652  08F4  3449               	retlw	73	;'I'
   653  08F5  3441               	retlw	65	;'A'
   654  08F6  3459               	retlw	89	;'Y'
   655  08F7  3420               	retlw	32	;' '
   656  08F8  3420               	retlw	32	;' '
   657  08F9  3400               	retlw	0
   658  08FA                     STR_49:
   659  08FA  3443               	retlw	67	;'C'
   660  08FB  3441               	retlw	65	;'A'
   661  08FC  3449               	retlw	73	;'I'
   662  08FD  3420               	retlw	32	;' '
   663  08FE  3444               	retlw	68	;'D'
   664  08FF  3441               	retlw	65	;'A'
   665  0900  3454               	retlw	84	;'T'
   666  0901  3420               	retlw	32	;' '
   667  0902  3442               	retlw	66	;'B'
   668  0903  3441               	retlw	65	;'A'
   669  0904  344F               	retlw	79	;'O'
   670  0905  3420               	retlw	32	;' '
   671  0906  3454               	retlw	84	;'T'
   672  0907  3448               	retlw	72	;'H'
   673  0908  3455               	retlw	85	;'U'
   674  0909  3443               	retlw	67	;'C'
   675  090A  3400               	retlw	0
   676  090B                     STR_27:
   677  090B  3420               	retlw	32	;' '
   678  090C  3420               	retlw	32	;' '
   679  090D  3443               	retlw	67	;'C'
   680  090E  3441               	retlw	65	;'A'
   681  090F  3449               	retlw	73	;'I'
   682  0910  3420               	retlw	32	;' '
   683  0911  3444               	retlw	68	;'D'
   684  0912  3441               	retlw	65	;'A'
   685  0913  3454               	retlw	84	;'T'
   686  0914  3420               	retlw	32	;' '
   687  0915  344E               	retlw	78	;'N'
   688  0916  3441               	retlw	65	;'A'
   689  0917  344D               	retlw	77	;'M'
   690  0918  3420               	retlw	32	;' '
   691  0919  3420               	retlw	32	;' '
   692  091A  3400               	retlw	0
   693  091B                     STR_33:
   694  091B  3420               	retlw	32	;' '
   695  091C  3420               	retlw	32	;' '
   696  091D  3443               	retlw	67	;'C'
   697  091E  3441               	retlw	65	;'A'
   698  091F  3449               	retlw	73	;'I'
   699  0920  3420               	retlw	32	;' '
   700  0921  3444               	retlw	68	;'D'
   701  0922  3441               	retlw	65	;'A'
   702  0923  3454               	retlw	84	;'T'
   703  0924  3420               	retlw	32	;' '
   704  0925  3447               	retlw	71	;'G'
   705  0926  3449               	retlw	73	;'I'
   706  0927  344F               	retlw	79	;'O'
   707  0928  3420               	retlw	32	;' '
   708  0929  3420               	retlw	32	;' '
   709  092A  3400               	retlw	0
   710  092B                     STR_25:
   711  092B  3420               	retlw	32	;' '
   712  092C  3420               	retlw	32	;' '
   713  092D  3420               	retlw	32	;' '
   714  092E  3454               	retlw	84	;'T'
   715  092F  3448               	retlw	72	;'H'
   716  0930  3441               	retlw	65	;'A'
   717  0931  344E               	retlw	78	;'N'
   718  0932  3447               	retlw	71	;'G'
   719  0933  343A               	retlw	58	;':'
   720  0934  3420               	retlw	32	;' '
   721  0935  3400               	retlw	0
   722  0936                     STR_28:
   723  0936  3420               	retlw	32	;' '
   724  0937  3420               	retlw	32	;' '
   725  0938  3420               	retlw	32	;' '
   726  0939  344E               	retlw	78	;'N'
   727  093A  3441               	retlw	65	;'A'
   728  093B  344D               	retlw	77	;'M'
   729  093C  3443               	retlw	67	;'C'
   730  093D  3448               	retlw	72	;'H'
   731  093E  343A               	retlw	58	;':'
   732  093F  3420               	retlw	32	;' '
   733  0940  3400               	retlw	0
   734  0941                     STR_34:
   735  0941  3420               	retlw	32	;' '
   736  0942  3420               	retlw	32	;' '
   737  0943  3420               	retlw	32	;' '
   738  0944  3420               	retlw	32	;' '
   739  0945  3420               	retlw	32	;' '
   740  0946  3447               	retlw	71	;'G'
   741  0947  3449               	retlw	73	;'I'
   742  0948  344F               	retlw	79	;'O'
   743  0949  343A               	retlw	58	;':'
   744  094A  3420               	retlw	32	;' '
   745  094B  3400               	retlw	0
   746  094C                     STR_37:
   747  094C  3420               	retlw	32	;' '
   748  094D  3420               	retlw	32	;' '
   749  094E  3420               	retlw	32	;' '
   750  094F  3420               	retlw	32	;' '
   751  0950  3450               	retlw	80	;'P'
   752  0951  3448               	retlw	72	;'H'
   753  0952  3455               	retlw	85	;'U'
   754  0953  3454               	retlw	84	;'T'
   755  0954  343A               	retlw	58	;':'
   756  0955  3420               	retlw	32	;' '
   757  0956  3400               	retlw	0
   758  0957                     STR_31:
   759  0957  3420               	retlw	32	;' '
   760  0958  3420               	retlw	32	;' '
   761  0959  3420               	retlw	32	;' '
   762  095A  344E               	retlw	78	;'N'
   763  095B  3441               	retlw	65	;'A'
   764  095C  344D               	retlw	77	;'M'
   765  095D  3444               	retlw	68	;'D'
   766  095E  3456               	retlw	86	;'V'
   767  095F  343A               	retlw	58	;':'
   768  0960  3420               	retlw	32	;' '
   769  0961  3400               	retlw	0
   770  0962                     STR_22:
   771  0962  3420               	retlw	32	;' '
   772  0963  3420               	retlw	32	;' '
   773  0964  3420               	retlw	32	;' '
   774  0965  3420               	retlw	32	;' '
   775  0966  344E               	retlw	78	;'N'
   776  0967  3447               	retlw	71	;'G'
   777  0968  3441               	retlw	65	;'A'
   778  0969  3459               	retlw	89	;'Y'
   779  096A  343A               	retlw	58	;':'
   780  096B  3420               	retlw	32	;' '
   781  096C  3400               	retlw	0
   782  096D                     STR_40:
   783  096D  3420               	retlw	32	;' '
   784  096E  3420               	retlw	32	;' '
   785  096F  3420               	retlw	32	;' '
   786  0970  3420               	retlw	32	;' '
   787  0971  3447               	retlw	71	;'G'
   788  0972  3449               	retlw	73	;'I'
   789  0973  3441               	retlw	65	;'A'
   790  0974  3459               	retlw	89	;'Y'
   791  0975  343A               	retlw	58	;':'
   792  0976  3420               	retlw	32	;' '
   793  0977  3400               	retlw	0
   794  0978                     STR_19:
   795  0978  3446               	retlw	70	;'F'
   796  0979  3452               	retlw	82	;'R'
   797  097A  3449               	retlw	73	;'I'
   798  097B  3444               	retlw	68	;'D'
   799  097C  3441               	retlw	65	;'A'
   800  097D  3459               	retlw	89	;'Y'
   801  097E  3420               	retlw	32	;' '
   802  097F  3420               	retlw	32	;' '
   803  0980  3420               	retlw	32	;' '
   804  0981  3400               	retlw	0
   805  0982                     STR_15:
   806  0982  344D               	retlw	77	;'M'
   807  0983  344F               	retlw	79	;'O'
   808  0984  344E               	retlw	78	;'N'
   809  0985  3444               	retlw	68	;'D'
   810  0986  3441               	retlw	65	;'A'
   811  0987  3459               	retlw	89	;'Y'
   812  0988  3420               	retlw	32	;' '
   813  0989  3420               	retlw	32	;' '
   814  098A  3420               	retlw	32	;' '
   815  098B  3400               	retlw	0
   816  098C                     STR_14:
   817  098C  3453               	retlw	83	;'S'
   818  098D  3455               	retlw	85	;'U'
   819  098E  344E               	retlw	78	;'N'
   820  098F  3444               	retlw	68	;'D'
   821  0990  3441               	retlw	65	;'A'
   822  0991  3459               	retlw	89	;'Y'
   823  0992  3420               	retlw	32	;' '
   824  0993  3420               	retlw	32	;' '
   825  0994  3420               	retlw	32	;' '
   826  0995  3400               	retlw	0
   827  0996                     STR_16:
   828  0996  3454               	retlw	84	;'T'
   829  0997  3455               	retlw	85	;'U'
   830  0998  3445               	retlw	69	;'E'
   831  0999  3453               	retlw	83	;'S'
   832  099A  3444               	retlw	68	;'D'
   833  099B  3441               	retlw	65	;'A'
   834  099C  3459               	retlw	89	;'Y'
   835  099D  3420               	retlw	32	;' '
   836  099E  3420               	retlw	32	;' '
   837  099F  3400               	retlw	0
   838  09A0                     STR_20:
   839  09A0  3453               	retlw	83	;'S'
   840  09A1  3441               	retlw	65	;'A'
   841  09A2  3454               	retlw	84	;'T'
   842  09A3  3455               	retlw	85	;'U'
   843  09A4  3444               	retlw	68	;'D'
   844  09A5  3441               	retlw	65	;'A'
   845  09A6  3459               	retlw	89	;'Y'
   846  09A7  3420               	retlw	32	;' '
   847  09A8  3420               	retlw	32	;' '
   848  09A9  3400               	retlw	0
   849  09AA                     STR_18:
   850  09AA  3454               	retlw	84	;'T'
   851  09AB  3448               	retlw	72	;'H'
   852  09AC  3455               	retlw	85	;'U'
   853  09AD  3452               	retlw	82	;'R'
   854  09AE  3453               	retlw	83	;'S'
   855  09AF  3444               	retlw	68	;'D'
   856  09B0  3441               	retlw	65	;'A'
   857  09B1  3459               	retlw	89	;'Y'
   858  09B2  3420               	retlw	32	;' '
   859  09B3  3400               	retlw	0
   860  09B4                     STR_17:
   861  09B4  3457               	retlw	87	;'W'
   862  09B5  3445               	retlw	69	;'E'
   863  09B6  3444               	retlw	68	;'D'
   864  09B7  344E               	retlw	78	;'N'
   865  09B8  3445               	retlw	69	;'E'
   866  09B9  3453               	retlw	83	;'S'
   867  09BA  3444               	retlw	68	;'D'
   868  09BB  3441               	retlw	65	;'A'
   869  09BC  3459               	retlw	89	;'Y'
   870  09BD  3400               	retlw	0
   871  09BE                     STR_13:
   872  09BE  3420               	retlw	32	;' '
   873  09BF  3420               	retlw	32	;' '
   874  09C0  3454               	retlw	84	;'T'
   875  09C1  3448               	retlw	72	;'H'
   876  09C2  3455               	retlw	85	;'U'
   877  09C3  343A               	retlw	58	;':'
   878  09C4  3420               	retlw	32	;' '
   879  09C5  3400               	retlw	0
   880  09C6                     STR_4:
   881  09C6  3420               	retlw	32	;' '
   882  09C7  3457               	retlw	87	;'W'
   883  09C8  3445               	retlw	69	;'E'
   884  09C9  3444               	retlw	68	;'D'
   885  09CA  3400               	retlw	0
   886  09CB                     STR_3:
   887  09CB  3420               	retlw	32	;' '
   888  09CC  3454               	retlw	84	;'T'
   889  09CD  3455               	retlw	85	;'U'
   890  09CE  3445               	retlw	69	;'E'
   891  09CF  3400               	retlw	0
   892  09D0                     STR_6:
   893  09D0  3420               	retlw	32	;' '
   894  09D1  3446               	retlw	70	;'F'
   895  09D2  3452               	retlw	82	;'R'
   896  09D3  3449               	retlw	73	;'I'
   897  09D4  3400               	retlw	0
   898  09D5                     STR_2:
   899  09D5  3420               	retlw	32	;' '
   900  09D6  344D               	retlw	77	;'M'
   901  09D7  344F               	retlw	79	;'O'
   902  09D8  344E               	retlw	78	;'N'
   903  09D9  3400               	retlw	0
   904  09DA                     STR_1:
   905  09DA  3420               	retlw	32	;' '
   906  09DB  3453               	retlw	83	;'S'
   907  09DC  3455               	retlw	85	;'U'
   908  09DD  344E               	retlw	78	;'N'
   909  09DE  3400               	retlw	0
   910  09DF                     STR_5:
   911  09DF  3454               	retlw	84	;'T'
   912  09E0  3448               	retlw	72	;'H'
   913  09E1  3455               	retlw	85	;'U'
   914  09E2  3452               	retlw	82	;'R'
   915  09E3  3400               	retlw	0
   916  09E4                     STR_7:
   917  09E4  3420               	retlw	32	;' '
   918  09E5  3453               	retlw	83	;'S'
   919  09E6  3441               	retlw	65	;'A'
   920  09E7  3454               	retlw	84	;'T'
   921  09E8  3400               	retlw	0
   922  09E9                     STR_45:
   923  09E9  345F               	retlw	95	;'_'
   924  09EA  345F               	retlw	95	;'_'
   925  09EB  3400               	retlw	0
   926  082C                     
   927                           	psect	cinit
   928  07DE                     start_initialization:	
   929                           ; #config settings
   930                           
   931  07DE                     __initialization:
   932                           
   933                           ; Initialize objects allocated to BANK0
   934  07DE  1383               	bcf	3,7	;select IRP bank0
   935  07DF  306C               	movlw	low (__pdataBANK0+10)
   936  07E0  00FD               	movwf	btemp+-1
   937  07E1  3011               	movlw	high __pidataBANK0
   938  07E2  00FE               	movwf	btemp
   939  07E3  30FF               	movlw	low __pidataBANK0
   940  07E4  00FF               	movwf	btemp+1
   941  07E5  3062               	movlw	low __pdataBANK0
   942  07E6  0084               	movwf	4
   943  07E7  160A  118A  224F  120A  118A  	fcall	init_ram0
   944                           
   945                           ; Clear objects allocated to BANK1
   946  07EC  30A0               	movlw	low __pbssBANK1
   947  07ED  0084               	movwf	4
   948  07EE  30C0               	movlw	low (__pbssBANK1+32)
   949  07EF  160A  118A  21BF  120A  118A  	fcall	clear_ram0
   950                           
   951                           ; Clear objects allocated to BANK0
   952  07F4  3020               	movlw	low __pbssBANK0
   953  07F5  0084               	movwf	4
   954  07F6  3043               	movlw	low (__pbssBANK0+35)
   955  07F7  160A  118A  21BF  120A  118A  	fcall	clear_ram0
   956  07FC                     end_of_initialization:	
   957                           ;End of C runtime variable initialization code
   958                           
   959  07FC                     __end_of__initialization:
   960  07FC  0183               	clrf	3
   961  07FD  120A  158A  2F47   	ljmp	_main	;jump to C main() function
   962                           
   963                           	psect	bssBANK0
   964  0020                     __pbssBANK0:
   965  0020                     _tt:
   966  0020                     	ds	2
   967  0022                     _gi:
   968  0022                     	ds	2
   969  0024                     _ph:
   970  0024                     	ds	2
   971  0026                     _g:
   972  0026                     	ds	2
   973  0028                     _giaybt:
   974  0028                     	ds	2
   975  002A                     _phutbt:
   976  002A                     	ds	2
   977  002C                     _giobt:
   978  002C                     	ds	2
   979  002E                     _giay:
   980  002E                     	ds	2
   981  0030                     _phut:
   982  0030                     	ds	2
   983  0032                     _gio:
   984  0032                     	ds	2
   985  0034                     _namch:
   986  0034                     	ds	2
   987  0036                     _namdv:
   988  0036                     	ds	2
   989  0038                     _demmenu:
   990  0038                     	ds	2
   991  003A                     _i2c_addr:
   992  003A                     	ds	1
   993  003B                     _BackLight_State:
   994  003B                     	ds	1
   995  003C                     _RTCbits:
   996  003C                     	ds	7
   997                           
   998                           	psect	dataBANK0
   999  0062                     __pdataBANK0:
  1000  0062                     _thang:
  1001  0062                     	ds	2
  1002  0064                     _ngay:
  1003  0064                     	ds	2
  1004  0066                     _thu:
  1005  0066                     	ds	2
  1006  0068                     _MODE:
  1007  0068                     	ds	2
  1008  006A                     _AP:
  1009  006A                     	ds	1
  1010  006B                     _Mode:
  1011  006B                     	ds	1
  1012                           
  1013                           	psect	bssBANK1
  1014  00A0                     __pbssBANK1:
  1015  00A0                     _str2:
  1016  00A0                     	ds	16
  1017  00B0                     _str1:
  1018  00B0                     	ds	16
  1019                           
  1020                           	psect	inittext
  1021  124B                     init_fetch0:	
  1022                           ;	Called with low address in FSR and high address in W
  1023                           
  1024  124B  087E               	movf	btemp,w
  1025  124C  008A               	movwf	10
  1026  124D  087F               	movf	btemp+1,w
  1027  124E  0082               	movwf	2
  1028  124F                     init_ram0:	
  1029                           ;Called with:
  1030                           ;	high address of idata address in btemp 
  1031                           ;	low address of idata address in btemp+1 
  1032                           ;	low address of data in FSR
  1033                           ;	high address + 1 of data in btemp-1
  1034                           
  1035  124F  160A  118A  224B  160A  118A  	fcall	init_fetch0
  1036  1254  0080               	movwf	0
  1037  1255  0A84               	incf	4,f
  1038  1256  0804               	movf	4,w
  1039  1257  067D               	xorwf	btemp+-1,w
  1040  1258  1903               	btfsc	3,2
  1041  1259  3400               	retlw	0
  1042  125A  0AFF               	incf	btemp+1,f
  1043  125B  1903               	btfsc	3,2
  1044  125C  0AFE               	incf	btemp,f
  1045  125D  2A4F               	goto	init_ram0
  1046                           
  1047                           	psect	clrtext
  1048  11BF                     clear_ram0:	
  1049                           ;	Called with FSR containing the base address, and
  1050                           ;	W with the last address+1
  1051                           
  1052  11BF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1053  11C0                     clrloop0:
  1054  11C0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1055  11C1  0A84               	incf	4,f	;increment pointer
  1056  11C2  0604               	xorwf	4,w	;XOR with final address
  1057  11C3  1903               	btfsc	3,2	;have we reached the end yet?
  1058  11C4  3400               	retlw	0	;all done for this memory range, return
  1059  11C5  0604               	xorwf	4,w	;XOR again to restore value
  1060  11C6  29C0               	goto	clrloop0	;do the next byte
  1061                           
  1062                           	psect	cstackCOMMON
  1063  0070                     __pcstackCOMMON:
  1064  0070                     ?_isdigit:
  1065  0070                     ?_RTC_init:	
  1066                           ; 1 bit 
  1067                           
  1068  0070                     ?_LCD_init:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_TurnOn_Led:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_Select_Menu:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_SetMode:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_BCDtoDec:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_Setup_Alarm:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_I2C_init:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ??_I2C_init:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_I2C_start:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_I2C_write:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_I2C_stop:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_I2C_read:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_LCD_putc:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ??_isdigit:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_main:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_RTC_Set_DateTime:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_RTC_Read_DateTime:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_DecToBCD:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_Display_Time:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_SetThu:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_SetNgay:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_SetThang:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_SetNamchuc:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_SetNamdv:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_SetGio:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_SetPhut:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_SetGiay:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_i2c_wait:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ??_i2c_wait:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_i2c_start:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ??_i2c_start:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_i2c_stop:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ??_i2c_stop:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_i2c_write:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ??_i2c_write:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_i2c_LCD_write:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_LCD_command:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_I2C_wait:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ??_I2C_wait:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_I2C_Send_ACK:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_I2C_Send_NACK:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?___bmul:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?___wmul:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?___awdiv:	
  1198                           ; 2 bytes @ 0x0
  1199                           
  1200  0070                     ?___awmod:	
  1201                           ; 2 bytes @ 0x0
  1202                           
  1203  0070                     ?___lwdiv:	
  1204                           ; 2 bytes @ 0x0
  1205                           
  1206  0070                     ?___lwmod:	
  1207                           ; 2 bytes @ 0x0
  1208                           
  1209  0070                     i2c_write@a:	
  1210                           ; 2 bytes @ 0x0
  1211                           
  1212  0070                     ___bmul@multiplicand:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     _isdigit$1090:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ___wmul@multiplier:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ___awdiv@divisor:	
  1222                           ; 2 bytes @ 0x0
  1223                           
  1224  0070                     ___awmod@divisor:	
  1225                           ; 2 bytes @ 0x0
  1226                           
  1227  0070                     ___lwdiv@divisor:	
  1228                           ; 2 bytes @ 0x0
  1229                           
  1230  0070                     ___lwmod@divisor:	
  1231                           ; 2 bytes @ 0x0
  1232                           
  1233                           
  1234                           ; 2 bytes @ 0x0
  1235  0070                     	ds	1
  1236  0071                     ??_i2c_LCD_write:
  1237  0071                     ??___bmul:	
  1238                           ; 1 bytes @ 0x1
  1239                           
  1240  0071                     i2c_LCD_write@data:	
  1241                           ; 1 bytes @ 0x1
  1242                           
  1243  0071                     isdigit@c:	
  1244                           ; 1 bytes @ 0x1
  1245                           
  1246                           
  1247                           ; 1 bytes @ 0x1
  1248  0071                     	ds	1
  1249  0072                     ??_TurnOn_Led:
  1250  0072                     ??_I2C_start:	
  1251                           ; 1 bytes @ 0x2
  1252                           
  1253  0072                     ??_I2C_write:	
  1254                           ; 1 bytes @ 0x2
  1255                           
  1256  0072                     ??_I2C_stop:	
  1257                           ; 1 bytes @ 0x2
  1258                           
  1259  0072                     ??_I2C_read:	
  1260                           ; 1 bytes @ 0x2
  1261                           
  1262  0072                     ??_LCD_putc:	
  1263                           ; 1 bytes @ 0x2
  1264                           
  1265  0072                     ??_LCD_command:	
  1266                           ; 1 bytes @ 0x2
  1267                           
  1268  0072                     ??_I2C_Send_ACK:	
  1269                           ; 1 bytes @ 0x2
  1270                           
  1271  0072                     ??_I2C_Send_NACK:	
  1272                           ; 1 bytes @ 0x2
  1273                           
  1274  0072                     I2C_write@a:	
  1275                           ; 1 bytes @ 0x2
  1276                           
  1277  0072                     ___bmul@product:	
  1278                           ; 1 bytes @ 0x2
  1279                           
  1280  0072                     ___wmul@multiplicand:	
  1281                           ; 1 bytes @ 0x2
  1282                           
  1283  0072                     ___awdiv@dividend:	
  1284                           ; 2 bytes @ 0x2
  1285                           
  1286  0072                     ___awmod@dividend:	
  1287                           ; 2 bytes @ 0x2
  1288                           
  1289  0072                     ___lwdiv@dividend:	
  1290                           ; 2 bytes @ 0x2
  1291                           
  1292  0072                     ___lwmod@dividend:	
  1293                           ; 2 bytes @ 0x2
  1294                           
  1295                           
  1296                           ; 2 bytes @ 0x2
  1297  0072                     	ds	1
  1298  0073                     ??_RTC_init:
  1299  0073                     ??_RTC_Set_DateTime:	
  1300                           ; 1 bytes @ 0x3
  1301                           
  1302  0073                     RTC_Set_DateTime@rtc:	
  1303                           ; 1 bytes @ 0x3
  1304                           
  1305  0073                     I2C_read@ACK:	
  1306                           ; 1 bytes @ 0x3
  1307                           
  1308  0073                     ___bmul@multiplier:	
  1309                           ; 1 bytes @ 0x3
  1310                           
  1311                           
  1312                           ; 1 bytes @ 0x3
  1313  0073                     	ds	1
  1314  0074                     ??_BCDtoDec:
  1315  0074                     ??___wmul:	
  1316                           ; 1 bytes @ 0x4
  1317                           
  1318  0074                     ??___awdiv:	
  1319                           ; 1 bytes @ 0x4
  1320                           
  1321  0074                     ??___awmod:	
  1322                           ; 1 bytes @ 0x4
  1323                           
  1324  0074                     ??___lwdiv:	
  1325                           ; 1 bytes @ 0x4
  1326                           
  1327  0074                     ??___lwmod:	
  1328                           ; 1 bytes @ 0x4
  1329                           
  1330  0074                     LCD_command@command:	
  1331                           ; 1 bytes @ 0x4
  1332                           
  1333  0074                     LCD_putc@data:	
  1334                           ; 1 bytes @ 0x4
  1335                           
  1336  0074                     I2C_read@read:	
  1337                           ; 1 bytes @ 0x4
  1338                           
  1339  0074                     ___wmul@product:	
  1340                           ; 1 bytes @ 0x4
  1341                           
  1342                           
  1343                           ; 2 bytes @ 0x4
  1344  0074                     	ds	1
  1345  0075                     ??_RTC_Read_DateTime:
  1346  0075                     LCD_command@n:	
  1347                           ; 1 bytes @ 0x5
  1348                           
  1349  0075                     LCD_putc@n:	
  1350                           ; 1 bytes @ 0x5
  1351                           
  1352  0075                     ___awdiv@counter:	
  1353                           ; 1 bytes @ 0x5
  1354                           
  1355  0075                     ___awmod@counter:	
  1356                           ; 1 bytes @ 0x5
  1357                           
  1358  0075                     ___lwmod@counter:	
  1359                           ; 1 bytes @ 0x5
  1360                           
  1361  0075                     ___lwdiv@quotient:	
  1362                           ; 1 bytes @ 0x5
  1363                           
  1364                           
  1365                           ; 2 bytes @ 0x5
  1366  0075                     	ds	1
  1367  0076                     ??_LCD_init:
  1368  0076                     ?_LCD_gotoxy:	
  1369                           ; 1 bytes @ 0x6
  1370                           
  1371  0076                     ?_LCD_puts:	
  1372                           ; 1 bytes @ 0x6
  1373                           
  1374  0076                     RTC_Read_DateTime@rtc:	
  1375                           ; 1 bytes @ 0x6
  1376                           
  1377  0076                     LCD_gotoxy@y:	
  1378                           ; 1 bytes @ 0x6
  1379                           
  1380  0076                     ___awdiv@sign:	
  1381                           ; 1 bytes @ 0x6
  1382                           
  1383  0076                     ___awmod@sign:	
  1384                           ; 1 bytes @ 0x6
  1385                           
  1386  0076                     LCD_puts@str:	
  1387                           ; 1 bytes @ 0x6
  1388                           
  1389                           
  1390                           ; 2 bytes @ 0x6
  1391  0076                     	ds	1
  1392  0077                     ??_LCD_gotoxy:
  1393  0077                     BCDtoDec@chuc:	
  1394                           ; 1 bytes @ 0x7
  1395                           
  1396  0077                     LCD_init@I2C_Addr:	
  1397                           ; 1 bytes @ 0x7
  1398                           
  1399  0077                     ___lwdiv@counter:	
  1400                           ; 1 bytes @ 0x7
  1401                           
  1402  0077                     ___awdiv@quotient:	
  1403                           ; 1 bytes @ 0x7
  1404                           
  1405                           
  1406                           ; 2 bytes @ 0x7
  1407  0077                     	ds	1
  1408  0078                     ??_sprintf:
  1409  0078                     ??_LCD_puts:	
  1410                           ; 1 bytes @ 0x8
  1411                           
  1412  0078                     ?_LCD_int:	
  1413                           ; 1 bytes @ 0x8
  1414                           
  1415  0078                     BCDtoDec@dv:	
  1416                           ; 1 bytes @ 0x8
  1417                           
  1418  0078                     LCD_int@value:	
  1419                           ; 1 bytes @ 0x8
  1420                           
  1421                           
  1422                           ; 2 bytes @ 0x8
  1423  0078                     	ds	1
  1424  0079                     ??_DecToBCD:
  1425  0079                     BCDtoDec@a:	
  1426                           ; 1 bytes @ 0x9
  1427                           
  1428  0079                     LCD_gotoxy@x:	
  1429                           ; 1 bytes @ 0x9
  1430                           
  1431                           
  1432                           ; 1 bytes @ 0x9
  1433  0079                     	ds	1
  1434  007A                     ??_LCD_int:
  1435                           
  1436                           ; 1 bytes @ 0xA
  1437  007A                     	ds	1
  1438  007B                     LCD_puts@i:
  1439                           
  1440                           ; 2 bytes @ 0xB
  1441  007B                     	ds	2
  1442  007D                     ??_SetDate:
  1443  007D                     ??_Display_Alarm:	
  1444                           ; 1 bytes @ 0xD
  1445                           
  1446  007D                     SetTime@gi:	
  1447                           ; 1 bytes @ 0xD
  1448                           
  1449                           
  1450                           ; 1 bytes @ 0xD
  1451  007D                     	ds	1
  1452                           
  1453                           	psect	cstackBANK0
  1454  0043                     __pcstackBANK0:
  1455  0043                     ?_sprintf:
  1456  0043                     DecToBCD@chuc:	
  1457                           ; 2 bytes @ 0x0
  1458                           
  1459  0043                     LCD_int@a1:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0043                     sprintf@f:	
  1463                           ; 2 bytes @ 0x0
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x0
  1467  0043                     	ds	1
  1468  0044                     DecToBCD@dv:
  1469                           
  1470                           ; 1 bytes @ 0x1
  1471  0044                     	ds	1
  1472  0045                     DecToBCD@a:
  1473  0045                     LCD_int@i:	
  1474                           ; 1 bytes @ 0x2
  1475                           
  1476                           
  1477                           ; 2 bytes @ 0x2
  1478  0045                     	ds	1
  1479  0046                     ?_SetTime:
  1480  0046                     ?_SetDate:	
  1481                           ; 1 bytes @ 0x3
  1482                           
  1483  0046                     SetTime@ph:	
  1484                           ; 1 bytes @ 0x3
  1485                           
  1486  0046                     SetDate@ng:	
  1487                           ; 1 bytes @ 0x3
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x3
  1491  0046                     	ds	1
  1492  0047                     SetTime@gia:
  1493  0047                     SetDate@tha:	
  1494                           ; 1 bytes @ 0x4
  1495                           
  1496  0047                     LCD_int@a2:	
  1497                           ; 1 bytes @ 0x4
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x4
  1501  0047                     	ds	1
  1502  0048                     ??_SetTime:
  1503  0048                     SetDate@nm:	
  1504                           ; 1 bytes @ 0x5
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x5
  1508  0048                     	ds	1
  1509  0049                     SetDate@th:
  1510  0049                     LCD_int@dem:	
  1511                           ; 1 bytes @ 0x6
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x6
  1515  0049                     	ds	1
  1516  004A                     ??_SetMode:
  1517  004A                     ??_SetThu:	
  1518                           ; 1 bytes @ 0x7
  1519                           
  1520                           
  1521                           ; 1 bytes @ 0x7
  1522  004A                     	ds	1
  1523  004B                     ??_SetNgay:
  1524  004B                     ??_SetThang:	
  1525                           ; 1 bytes @ 0x8
  1526                           
  1527  004B                     ??_SetNamchuc:	
  1528                           ; 1 bytes @ 0x8
  1529                           
  1530  004B                     ??_SetNamdv:	
  1531                           ; 1 bytes @ 0x8
  1532                           
  1533  004B                     ??_SetGio:	
  1534                           ; 1 bytes @ 0x8
  1535                           
  1536  004B                     ??_SetPhut:	
  1537                           ; 1 bytes @ 0x8
  1538                           
  1539  004B                     ??_SetGiay:	
  1540                           ; 1 bytes @ 0x8
  1541                           
  1542  004B                     ?_Display_Alarm:	
  1543                           ; 1 bytes @ 0x8
  1544                           
  1545  004B                     sprintf@idx:	
  1546                           ; 1 bytes @ 0x8
  1547                           
  1548  004B                     Display_Alarm@Vitri:	
  1549                           ; 1 bytes @ 0x8
  1550                           
  1551                           
  1552                           ; 2 bytes @ 0x8
  1553  004B                     	ds	1
  1554  004C                     sprintf@ap:
  1555                           
  1556                           ; 1 bytes @ 0x9
  1557  004C                     	ds	1
  1558  004D                     ??_Setup_Alarm:
  1559  004D                     sprintf@flag:	
  1560                           ; 1 bytes @ 0xA
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0xA
  1564  004D                     	ds	1
  1565  004E                     sprintf@val:
  1566                           
  1567                           ; 2 bytes @ 0xB
  1568  004E                     	ds	2
  1569  0050                     sprintf@prec:
  1570  0050                     Setup_Alarm@dis:	
  1571                           ; 1 bytes @ 0xD
  1572                           
  1573                           
  1574                           ; 2 bytes @ 0xD
  1575  0050                     	ds	1
  1576  0051                     sprintf@width:
  1577                           
  1578                           ; 2 bytes @ 0xE
  1579  0051                     	ds	1
  1580  0052                     Setup_Alarm@BthucMode:
  1581                           
  1582                           ; 2 bytes @ 0xF
  1583  0052                     	ds	1
  1584  0053                     sprintf@sp:
  1585                           
  1586                           ; 1 bytes @ 0x10
  1587  0053                     	ds	1
  1588  0054                     sprintf@c:
  1589                           
  1590                           ; 1 bytes @ 0x11
  1591  0054                     	ds	1
  1592  0055                     ??_Display_Time:
  1593                           
  1594                           ; 1 bytes @ 0x12
  1595  0055                     	ds	6
  1596  005B                     ??_Select_Menu:
  1597                           
  1598                           ; 1 bytes @ 0x18
  1599  005B                     	ds	3
  1600  005E                     ??_main:
  1601                           
  1602                           ; 1 bytes @ 0x1B
  1603  005E                     	ds	2
  1604  0060                     main@DangBaoThuc:
  1605                           
  1606                           ; 2 bytes @ 0x1D
  1607  0060                     	ds	2
  1608                           
  1609                           	psect	maintext
  1610  0F47                     __pmaintext:	
  1611 ;;
  1612 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1613 ;;
  1614 ;; *************** function _main *****************
  1615 ;; Defined at:
  1616 ;;		line 87 in file "RTC.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  DangBaoThuc     2   29[BANK0 ] unsigned int 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : B00/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         0       0       0       0       0
  1631 ;;      Locals:         0       2       0       0       0
  1632 ;;      Temps:          0       2       0       0       0
  1633 ;;      Totals:         0       4       0       0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels required when called: 7
  1636 ;; This function calls:
  1637 ;;		_BCDtoDec
  1638 ;;		_LCD_init
  1639 ;;		_RTC_init
  1640 ;;		_Select_Menu
  1641 ;;		_SetMode
  1642 ;;		_Setup_Alarm
  1643 ;;		_TurnOn_Led
  1644 ;; This function is called by:
  1645 ;;		Startup code after reset
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _main
  1651  0F47                     _main:
  1652  0F47                     l3748:	
  1653                           ;incstack = 0
  1654                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1655                           
  1656                           
  1657                           ;RTC.c: 90:     unsigned int DangBaoThuc=0;
  1658  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0F49  01E0               	clrf	main@DangBaoThuc
  1661  0F4A  01E1               	clrf	main@DangBaoThuc+1
  1662  0F4B                     l3750:
  1663                           
  1664                           ;RTC.c: 93:     TRISB = 0xFF;
  1665  0F4B  30FF               	movlw	255
  1666  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  1668  0F4E  0086               	movwf	6	;volatile
  1669  0F4F                     l3752:
  1670                           
  1671                           ;RTC.c: 95:     OPTION_REGbits.nRBPU=0;
  1672  0F4F  1381               	bcf	1,7	;volatile
  1673  0F50                     l3754:
  1674                           
  1675                           ;RTC.c: 97:     TRISD0 = 0;
  1676  0F50  1008               	bcf	8,0	;volatile
  1677  0F51                     l3756:
  1678                           
  1679                           ;RTC.c: 99:     RD0 = 0;
  1680  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  1681  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  1682  0F53  1008               	bcf	8,0	;volatile
  1683  0F54                     l3758:
  1684                           
  1685                           ;RTC.c: 101:     RTC_init();
  1686  0F54  160A  118A  22D7  120A  158A  	fcall	_RTC_init
  1687  0F59                     l3760:
  1688                           
  1689                           ;RTC.c: 102:     LCD_init(0x4E);
  1690  0F59  304E               	movlw	78
  1691  0F5A  160A  118A  231E  120A  158A  	fcall	_LCD_init
  1692  0F5F                     l3762:
  1693                           
  1694                           ;RTC.c: 103:     TurnOn_Led();
  1695  0F5F  160A  118A  222C  120A  158A  	fcall	_TurnOn_Led
  1696  0F64                     l3764:
  1697                           
  1698                           ;RTC.c: 110:     {;RTC.c: 111:         Select_Menu();
  1699  0F64  120A  158A  269D  120A  158A  	fcall	_Select_Menu
  1700  0F69                     l3766:
  1701                           
  1702                           ;RTC.c: 112:         SetMode();
  1703  0F69  120A  118A  2623  120A  158A  	fcall	_SetMode
  1704  0F6E                     l3768:
  1705                           
  1706                           ;RTC.c: 115:         if((giobt==BCDtoDec(RTCbits.hour ) || giobt==BCDtoDec(RTCbits.hour 
      +                          & ~(3<<5))+12 ||giobt==BCDtoDec(RTCbits.hour & ~(3<<5)) )&& phutbt==BCDtoDec(RTCbits.min
      +                          ) && giaybt==BCDtoDec(RTCbits.sec) && demmenu==0)
  1707  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0F70  083E               	movf	_RTCbits+2,w
  1710  0F71  160A  118A  22B9  120A  158A  	fcall	_BCDtoDec
  1711  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0F77  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0F78  00DE               	movwf	??_main
  1714  0F79  01DF               	clrf	??_main+1
  1715  0F7A  082D               	movf	_giobt+1,w
  1716  0F7B  065F               	xorwf	??_main+1,w
  1717  0F7C  1D03               	skipz
  1718  0F7D  2F80               	goto	u3605
  1719  0F7E  082C               	movf	_giobt,w
  1720  0F7F  065E               	xorwf	??_main,w
  1721  0F80                     u3605:
  1722  0F80  1903               	skipnz
  1723  0F81  2F83               	goto	u3601
  1724  0F82  2F84               	goto	u3600
  1725  0F83                     u3601:
  1726  0F83  2FB2               	goto	l3774
  1727  0F84                     u3600:
  1728  0F84                     l3770:
  1729  0F84  083E               	movf	_RTCbits+2,w
  1730  0F85  399F               	andlw	159
  1731  0F86  160A  118A  22B9  120A  158A  	fcall	_BCDtoDec
  1732  0F8B  3E0C               	addlw	12
  1733  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0F8E  00DE               	movwf	??_main
  1736  0F8F  3000               	movlw	0
  1737  0F90  1803               	skipnc
  1738  0F91  3001               	movlw	1
  1739  0F92  00DF               	movwf	??_main+1
  1740  0F93  082D               	movf	_giobt+1,w
  1741  0F94  065F               	xorwf	??_main+1,w
  1742  0F95  1D03               	skipz
  1743  0F96  2F99               	goto	u3615
  1744  0F97  082C               	movf	_giobt,w
  1745  0F98  065E               	xorwf	??_main,w
  1746  0F99                     u3615:
  1747  0F99  1903               	skipnz
  1748  0F9A  2F9C               	goto	u3611
  1749  0F9B  2F9D               	goto	u3610
  1750  0F9C                     u3611:
  1751  0F9C  2FB2               	goto	l3774
  1752  0F9D                     u3610:
  1753  0F9D                     l3772:
  1754  0F9D  083E               	movf	_RTCbits+2,w
  1755  0F9E  399F               	andlw	159
  1756  0F9F  160A  118A  22B9  120A  158A  	fcall	_BCDtoDec
  1757  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0FA6  00DE               	movwf	??_main
  1760  0FA7  01DF               	clrf	??_main+1
  1761  0FA8  082D               	movf	_giobt+1,w
  1762  0FA9  065F               	xorwf	??_main+1,w
  1763  0FAA  1D03               	skipz
  1764  0FAB  2FAE               	goto	u3625
  1765  0FAC  082C               	movf	_giobt,w
  1766  0FAD  065E               	xorwf	??_main,w
  1767  0FAE                     u3625:
  1768  0FAE  1D03               	skipz
  1769  0FAF  2FB1               	goto	u3621
  1770  0FB0  2FB2               	goto	u3620
  1771  0FB1                     u3621:
  1772  0FB1  2FE5               	goto	l3784
  1773  0FB2                     u3620:
  1774  0FB2                     l3774:
  1775  0FB2  083D               	movf	_RTCbits+1,w
  1776  0FB3  160A  118A  22B9  120A  158A  	fcall	_BCDtoDec
  1777  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0FBA  00DE               	movwf	??_main
  1780  0FBB  01DF               	clrf	??_main+1
  1781  0FBC  082B               	movf	_phutbt+1,w
  1782  0FBD  065F               	xorwf	??_main+1,w
  1783  0FBE  1D03               	skipz
  1784  0FBF  2FC2               	goto	u3635
  1785  0FC0  082A               	movf	_phutbt,w
  1786  0FC1  065E               	xorwf	??_main,w
  1787  0FC2                     u3635:
  1788  0FC2  1D03               	skipz
  1789  0FC3  2FC5               	goto	u3631
  1790  0FC4  2FC6               	goto	u3630
  1791  0FC5                     u3631:
  1792  0FC5  2FE5               	goto	l3784
  1793  0FC6                     u3630:
  1794  0FC6                     l3776:
  1795  0FC6  083C               	movf	_RTCbits,w
  1796  0FC7  160A  118A  22B9  120A  158A  	fcall	_BCDtoDec
  1797  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0FCE  00DE               	movwf	??_main
  1800  0FCF  01DF               	clrf	??_main+1
  1801  0FD0  0829               	movf	_giaybt+1,w
  1802  0FD1  065F               	xorwf	??_main+1,w
  1803  0FD2  1D03               	skipz
  1804  0FD3  2FD6               	goto	u3645
  1805  0FD4  0828               	movf	_giaybt,w
  1806  0FD5  065E               	xorwf	??_main,w
  1807  0FD6                     u3645:
  1808  0FD6  1D03               	skipz
  1809  0FD7  2FD9               	goto	u3641
  1810  0FD8  2FDA               	goto	u3640
  1811  0FD9                     u3641:
  1812  0FD9  2FE5               	goto	l3784
  1813  0FDA                     u3640:
  1814  0FDA                     l3778:
  1815  0FDA  0838               	movf	_demmenu,w
  1816  0FDB  0439               	iorwf	_demmenu+1,w
  1817  0FDC  1D03               	btfss	3,2
  1818  0FDD  2FDF               	goto	u3651
  1819  0FDE  2FE0               	goto	u3650
  1820  0FDF                     u3651:
  1821  0FDF  2FE5               	goto	l3784
  1822  0FE0                     u3650:
  1823  0FE0                     l3780:
  1824                           
  1825                           ;RTC.c: 116:         {;RTC.c: 118:             RD0=1;
  1826  0FE0  1408               	bsf	8,0	;volatile
  1827  0FE1                     l3782:
  1828                           
  1829                           ;RTC.c: 120:             DangBaoThuc=1;
  1830  0FE1  3001               	movlw	1
  1831  0FE2  00E0               	movwf	main@DangBaoThuc
  1832  0FE3  3000               	movlw	0
  1833  0FE4  00E1               	movwf	main@DangBaoThuc+1
  1834  0FE5                     l3784:
  1835                           
  1836                           ;RTC.c: 124:         if(RB2==0)
  1837  0FE5  1906               	btfsc	6,2	;volatile
  1838  0FE6  2FE8               	goto	u3661
  1839  0FE7  2FE9               	goto	u3660
  1840  0FE8                     u3661:
  1841  0FE8  2F64               	goto	l3764
  1842  0FE9                     u3660:
  1843  0FE9                     l100:
  1844  0FE9  1D06               	btfss	6,2	;volatile
  1845  0FEA  2FEC               	goto	u3671
  1846  0FEB  2FED               	goto	u3670
  1847  0FEC                     u3671:
  1848  0FEC  2FE9               	goto	l100
  1849  0FED                     u3670:
  1850  0FED                     l3788:
  1851                           
  1852                           ;RTC.c: 128:             if(DangBaoThuc==1)
  1853  0FED  0360               	decf	main@DangBaoThuc,w
  1854  0FEE  0461               	iorwf	main@DangBaoThuc+1,w
  1855  0FEF  1D03               	btfss	3,2
  1856  0FF0  2FF2               	goto	u3681
  1857  0FF1  2FF3               	goto	u3680
  1858  0FF2                     u3681:
  1859  0FF2  2FF7               	goto	l3794
  1860  0FF3                     u3680:
  1861  0FF3                     l3790:
  1862                           
  1863                           ;RTC.c: 129:             {;RTC.c: 131:                 RD0=0;
  1864  0FF3  1008               	bcf	8,0	;volatile
  1865  0FF4                     l3792:
  1866                           
  1867                           ;RTC.c: 133:                 DangBaoThuc=0;
  1868  0FF4  01E0               	clrf	main@DangBaoThuc
  1869  0FF5  01E1               	clrf	main@DangBaoThuc+1
  1870                           
  1871                           ;RTC.c: 134:             }
  1872  0FF6  2F64               	goto	l3764
  1873  0FF7                     l3794:
  1874                           
  1875                           ;RTC.c: 138:                Setup_Alarm();
  1876  0FF7  120A  118A  2317  120A  158A  	fcall	_Setup_Alarm
  1877  0FFC  2F64               	goto	l3764
  1878  0FFD  120A  118A  2800   	ljmp	start
  1879  1000                     __end_of_main:
  1880                           
  1881                           	psect	text1
  1882  122C                     __ptext1:	
  1883 ;; *************** function _TurnOn_Led *****************
  1884 ;; Defined at:
  1885 ;;		line 257 in file "LCD_I2C.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0
  1901 ;;      Temps:          1       0       0       0       0
  1902 ;;      Totals:         1       0       0       0       0
  1903 ;;Total ram usage:        1 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 3
  1906 ;; This function calls:
  1907 ;;		_i2c_LCD_write
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _TurnOn_Led
  1915  122C                     _TurnOn_Led:
  1916  122C                     l3540:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _TurnOn_Led: [wreg+status,2+status,0+pclath+cstack]
  1919                           
  1920                           
  1921                           ;LCD_I2C.c: 259:   BackLight_State = 0x08;
  1922  122C  3008               	movlw	8
  1923  122D  00F2               	movwf	??_TurnOn_Led
  1924  122E  0872               	movf	??_TurnOn_Led,w
  1925  122F  1283               	bcf	3,5	;RP0=0, select bank0
  1926  1230  1303               	bcf	3,6	;RP1=0, select bank0
  1927  1231  00BB               	movwf	_BackLight_State
  1928  1232                     l3542:
  1929                           
  1930                           ;LCD_I2C.c: 260:   i2c_LCD_write(0);
  1931  1232  3000               	movlw	0
  1932  1233  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  1933  1238                     l511:
  1934  1238  0008               	return
  1935  1239                     __end_of_TurnOn_Led:
  1936                           
  1937                           	psect	text2
  1938  0317                     __ptext2:	
  1939 ;; *************** function _Setup_Alarm *****************
  1940 ;; Defined at:
  1941 ;;		line 542 in file "RTC.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  BthucMode       2   15[BANK0 ] int 
  1946 ;;  dis             2   13[BANK0 ] int 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       4       0       0       0
  1958 ;;      Temps:          0       3       0       0       0
  1959 ;;      Totals:         0       7       0       0       0
  1960 ;;Total ram usage:        7 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 6
  1963 ;; This function calls:
  1964 ;;		_Display_Alarm
  1965 ;;		_LCD_gotoxy
  1966 ;;		_LCD_puts
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _Setup_Alarm
  1974  0317                     _Setup_Alarm:
  1975  0317                     l3650:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _Setup_Alarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1978                           
  1979                           
  1980                           ;RTC.c: 544:     int BthucMode=1, dis=0;
  1981  0317  3001               	movlw	1
  1982  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1984  031A  00D2               	movwf	Setup_Alarm@BthucMode
  1985  031B  3000               	movlw	0
  1986  031C  00D3               	movwf	Setup_Alarm@BthucMode+1
  1987  031D                     l3652:
  1988  031D  01D0               	clrf	Setup_Alarm@dis
  1989  031E  01D1               	clrf	Setup_Alarm@dis+1
  1990  031F                     l3654:
  1991                           
  1992                           ;RTC.c: 545:     LCD_gotoxy(1,1);
  1993  031F  01F6               	clrf	LCD_gotoxy@y
  1994  0320  0AF6               	incf	LCD_gotoxy@y,f
  1995  0321  3001               	movlw	1
  1996  0322  160A  118A  236A  120A  118A  	fcall	_LCD_gotoxy
  1997  0327                     l3656:
  1998                           
  1999                           ;RTC.c: 546:     LCD_puts("CAI DAT BAO THUC");
  2000  0327  30FA               	movlw	low (STR_49| (0+32768))
  2001  0328  00F6               	movwf	LCD_puts@str
  2002  0329  3088               	movlw	high (STR_49| (0+32768))
  2003  032A  00F7               	movwf	LCD_puts@str+1
  2004  032B  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  2005  0330                     l3658:
  2006                           
  2007                           ;RTC.c: 548:     {;RTC.c: 549:         if(dis<5) Display_Alarm(0);
  2008  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0332  0851               	movf	Setup_Alarm@dis+1,w
  2011  0333  3A80               	xorlw	128
  2012  0334  00FF               	movwf	btemp+1
  2013  0335  3080               	movlw	128
  2014  0336  027F               	subwf	btemp+1,w
  2015  0337  1D03               	skipz
  2016  0338  2B3B               	goto	u3435
  2017  0339  3005               	movlw	5
  2018  033A  0250               	subwf	Setup_Alarm@dis,w
  2019  033B                     u3435:
  2020  033B  1803               	skipnc
  2021  033C  2B3E               	goto	u3431
  2022  033D  2B3F               	goto	u3430
  2023  033E                     u3431:
  2024  033E  2B4A               	goto	l3662
  2025  033F                     u3430:
  2026  033F                     l3660:
  2027  033F  3000               	movlw	0
  2028  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0342  00CB               	movwf	Display_Alarm@Vitri
  2031  0343  00CC               	movwf	Display_Alarm@Vitri+1
  2032  0344  120A  158A  2363  120A  118A  	fcall	_Display_Alarm
  2033  0349  2B55               	goto	l3664
  2034  034A                     l3662:
  2035  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2036  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2037  034C  0853               	movf	Setup_Alarm@BthucMode+1,w
  2038  034D  00CC               	movwf	Display_Alarm@Vitri+1
  2039  034E  0852               	movf	Setup_Alarm@BthucMode,w
  2040  034F  00CB               	movwf	Display_Alarm@Vitri
  2041  0350  120A  158A  2363  120A  118A  	fcall	_Display_Alarm
  2042  0355                     l3664:
  2043                           
  2044                           ;RTC.c: 551:         dis++;
  2045  0355  3001               	movlw	1
  2046  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0358  07D0               	addwf	Setup_Alarm@dis,f
  2049  0359  1803               	skipnc
  2050  035A  0AD1               	incf	Setup_Alarm@dis+1,f
  2051  035B  3000               	movlw	0
  2052  035C  07D1               	addwf	Setup_Alarm@dis+1,f
  2053  035D                     l3666:
  2054                           
  2055                           ;RTC.c: 552:         if(dis>9) dis=0;
  2056  035D  0851               	movf	Setup_Alarm@dis+1,w
  2057  035E  3A80               	xorlw	128
  2058  035F  00FF               	movwf	btemp+1
  2059  0360  3080               	movlw	128
  2060  0361  027F               	subwf	btemp+1,w
  2061  0362  1D03               	skipz
  2062  0363  2B66               	goto	u3445
  2063  0364  300A               	movlw	10
  2064  0365  0250               	subwf	Setup_Alarm@dis,w
  2065  0366                     u3445:
  2066  0366  1C03               	skipc
  2067  0367  2B69               	goto	u3441
  2068  0368  2B6A               	goto	u3440
  2069  0369                     u3441:
  2070  0369  2B6E               	goto	l3670
  2071  036A                     u3440:
  2072  036A                     l3668:
  2073  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2074  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2075  036C  01D0               	clrf	Setup_Alarm@dis
  2076  036D  01D1               	clrf	Setup_Alarm@dis+1
  2077  036E                     l3670:
  2078                           
  2079                           ;RTC.c: 555:         if(RB2==0)
  2080  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2081  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0370  1906               	btfsc	6,2	;volatile
  2083  0371  2B73               	goto	u3451
  2084  0372  2B74               	goto	u3450
  2085  0373                     u3451:
  2086  0373  2BBD               	goto	l373
  2087  0374                     u3450:
  2088  0374                     l374:
  2089  0374  1D06               	btfss	6,2	;volatile
  2090  0375  2B77               	goto	u3461
  2091  0376  2B78               	goto	u3460
  2092  0377                     u3461:
  2093  0377  2B74               	goto	l374
  2094  0378                     u3460:
  2095  0378                     l3674:
  2096                           
  2097                           ;RTC.c: 558:             BthucMode++;
  2098  0378  3001               	movlw	1
  2099  0379  07D2               	addwf	Setup_Alarm@BthucMode,f
  2100  037A  1803               	skipnc
  2101  037B  0AD3               	incf	Setup_Alarm@BthucMode+1,f
  2102  037C  3000               	movlw	0
  2103  037D  07D3               	addwf	Setup_Alarm@BthucMode+1,f
  2104  037E                     l3676:
  2105                           
  2106                           ;RTC.c: 559:             if(BthucMode>3)
  2107  037E  0853               	movf	Setup_Alarm@BthucMode+1,w
  2108  037F  3A80               	xorlw	128
  2109  0380  00FF               	movwf	btemp+1
  2110  0381  3080               	movlw	128
  2111  0382  027F               	subwf	btemp+1,w
  2112  0383  1D03               	skipz
  2113  0384  2B87               	goto	u3475
  2114  0385  3004               	movlw	4
  2115  0386  0252               	subwf	Setup_Alarm@BthucMode,w
  2116  0387                     u3475:
  2117  0387  1C03               	skipc
  2118  0388  2B8A               	goto	u3471
  2119  0389  2B8B               	goto	u3470
  2120  038A                     u3471:
  2121  038A  2BBD               	goto	l373
  2122  038B                     u3470:
  2123  038B                     l3678:
  2124                           
  2125                           ;RTC.c: 560:             {;RTC.c: 561:                 LCD_gotoxy(1,1);
  2126  038B  01F6               	clrf	LCD_gotoxy@y
  2127  038C  0AF6               	incf	LCD_gotoxy@y,f
  2128  038D  3001               	movlw	1
  2129  038E  160A  118A  236A  120A  118A  	fcall	_LCD_gotoxy
  2130  0393                     l3680:
  2131                           
  2132                           ;RTC.c: 562:                 LCD_puts("  SAVE SETTING  ");
  2133  0393  30B6               	movlw	low (STR_42| (0+32768))
  2134  0394  00F6               	movwf	LCD_puts@str
  2135  0395  3088               	movlw	high (STR_42| (0+32768))
  2136  0396  00F7               	movwf	LCD_puts@str+1
  2137  0397  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  2138  039C                     l3682:
  2139                           
  2140                           ;RTC.c: 563:                 LCD_gotoxy(2,1);
  2141  039C  01F6               	clrf	LCD_gotoxy@y
  2142  039D  0AF6               	incf	LCD_gotoxy@y,f
  2143  039E  3002               	movlw	2
  2144  039F  160A  118A  236A  120A  118A  	fcall	_LCD_gotoxy
  2145                           
  2146                           ;RTC.c: 564:                 LCD_puts("  PROGRESS....  ");
  2147  03A4  30A5               	movlw	low (STR_43| (0+32768))
  2148  03A5  00F6               	movwf	LCD_puts@str
  2149  03A6  3088               	movlw	high (STR_43| (0+32768))
  2150  03A7  00F7               	movwf	LCD_puts@str+1
  2151  03A8  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  2152  03AD                     l3684:
  2153                           
  2154                           ;RTC.c: 565:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
  2155  03AD  301A               	movlw	26
  2156  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2157  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2158  03B0  00CF               	movwf	??_Setup_Alarm+2
  2159  03B1  305E               	movlw	94
  2160  03B2  00CE               	movwf	??_Setup_Alarm+1
  2161  03B3  306D               	movlw	109
  2162  03B4  00CD               	movwf	??_Setup_Alarm
  2163  03B5                     u3697:
  2164  03B5  0BCD               	decfsz	??_Setup_Alarm,f
  2165  03B6  2BB5               	goto	u3697
  2166  03B7  0BCE               	decfsz	??_Setup_Alarm+1,f
  2167  03B8  2BB5               	goto	u3697
  2168  03B9  0BCF               	decfsz	??_Setup_Alarm+2,f
  2169  03BA  2BB5               	goto	u3697
  2170  03BB  2BBC               	nop2
  2171                           
  2172                           ;RTC.c: 567:                 break;
  2173  03BC  2C72               	goto	l426
  2174  03BD                     l373:	
  2175                           ;RTC.c: 569:         }
  2176                           
  2177                           
  2178                           ;RTC.c: 571:         if(RB3==0)
  2179  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2180  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2181  03BF  1986               	btfsc	6,3	;volatile
  2182  03C0  2BC2               	goto	u3481
  2183  03C1  2BC3               	goto	u3480
  2184  03C2                     u3481:
  2185  03C2  2C13               	goto	l379
  2186  03C3                     u3480:
  2187  03C3                     l380:
  2188  03C3  1D86               	btfss	6,3	;volatile
  2189  03C4  2BC6               	goto	u3491
  2190  03C5  2BC7               	goto	u3490
  2191  03C6                     u3491:
  2192  03C6  2BC3               	goto	l380
  2193  03C7                     u3490:
  2194  03C7                     l3688:
  2195                           
  2196                           ;RTC.c: 574:             dis=0;
  2197  03C7  01D0               	clrf	Setup_Alarm@dis
  2198  03C8  01D1               	clrf	Setup_Alarm@dis+1
  2199                           
  2200                           ;RTC.c: 575:             switch(BthucMode)
  2201  03C9  2C03               	goto	l3710
  2202  03CA                     l3690:
  2203  03CA  3017               	movlw	23
  2204  03CB  062C               	xorwf	_giobt,w
  2205  03CC  042D               	iorwf	_giobt+1,w
  2206  03CD  1903               	btfsc	3,2
  2207  03CE  2BD0               	goto	u3501
  2208  03CF  2BD1               	goto	u3500
  2209  03D0                     u3501:
  2210  03D0  2BDA               	goto	l3694
  2211  03D1                     u3500:
  2212  03D1                     l3692:
  2213  03D1  082C               	movf	_giobt,w
  2214  03D2  3E01               	addlw	1
  2215  03D3  00AC               	movwf	_giobt
  2216  03D4  082D               	movf	_giobt+1,w
  2217  03D5  1803               	skipnc
  2218  03D6  3E01               	addlw	1
  2219  03D7  3E00               	addlw	0
  2220  03D8  00AD               	movwf	_giobt+1
  2221  03D9  2C13               	goto	l379
  2222  03DA                     l3694:
  2223  03DA  01AC               	clrf	_giobt
  2224  03DB  01AD               	clrf	_giobt+1
  2225  03DC  2C13               	goto	l379
  2226  03DD                     l3696:
  2227  03DD  303B               	movlw	59
  2228  03DE  062A               	xorwf	_phutbt,w
  2229  03DF  042B               	iorwf	_phutbt+1,w
  2230  03E0  1903               	btfsc	3,2
  2231  03E1  2BE3               	goto	u3511
  2232  03E2  2BE4               	goto	u3510
  2233  03E3                     u3511:
  2234  03E3  2BED               	goto	l3700
  2235  03E4                     u3510:
  2236  03E4                     l3698:
  2237  03E4  082A               	movf	_phutbt,w
  2238  03E5  3E01               	addlw	1
  2239  03E6  00AA               	movwf	_phutbt
  2240  03E7  082B               	movf	_phutbt+1,w
  2241  03E8  1803               	skipnc
  2242  03E9  3E01               	addlw	1
  2243  03EA  3E00               	addlw	0
  2244  03EB  00AB               	movwf	_phutbt+1
  2245  03EC  2C13               	goto	l379
  2246  03ED                     l3700:
  2247  03ED  01AA               	clrf	_phutbt
  2248  03EE  01AB               	clrf	_phutbt+1
  2249  03EF  2C13               	goto	l379
  2250  03F0                     l3702:
  2251  03F0  303B               	movlw	59
  2252  03F1  0628               	xorwf	_giaybt,w
  2253  03F2  0429               	iorwf	_giaybt+1,w
  2254  03F3  1903               	btfsc	3,2
  2255  03F4  2BF6               	goto	u3521
  2256  03F5  2BF7               	goto	u3520
  2257  03F6                     u3521:
  2258  03F6  2C00               	goto	l3706
  2259  03F7                     u3520:
  2260  03F7                     l3704:
  2261  03F7  0828               	movf	_giaybt,w
  2262  03F8  3E01               	addlw	1
  2263  03F9  00A8               	movwf	_giaybt
  2264  03FA  0829               	movf	_giaybt+1,w
  2265  03FB  1803               	skipnc
  2266  03FC  3E01               	addlw	1
  2267  03FD  3E00               	addlw	0
  2268  03FE  00A9               	movwf	_giaybt+1
  2269  03FF  2C13               	goto	l379
  2270  0400                     l3706:
  2271  0400  01A8               	clrf	_giaybt
  2272  0401  01A9               	clrf	_giaybt+1
  2273  0402  2C13               	goto	l379
  2274  0403                     l3710:
  2275                           
  2276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2277                           ; Switch size 1, requested type "simple"
  2278                           ; Number of cases is 1, Range of values is 0 to 0
  2279                           ; switch strategies available:
  2280                           ; Name         Instructions Cycles
  2281                           ; simple_byte            4     3 (average)
  2282                           ; direct_byte           11     8 (fixed)
  2283                           ; jumptable            260     6 (fixed)
  2284                           ;	Chosen strategy is simple_byte
  2285  0403  0853               	movf	Setup_Alarm@BthucMode+1,w
  2286  0404  3A00               	xorlw	0	; case 0
  2287  0405  1903               	skipnz
  2288  0406  2C08               	goto	l3960
  2289  0407  2C13               	goto	l379
  2290  0408                     l3960:
  2291                           
  2292                           ; Switch size 1, requested type "simple"
  2293                           ; Number of cases is 3, Range of values is 1 to 3
  2294                           ; switch strategies available:
  2295                           ; Name         Instructions Cycles
  2296                           ; simple_byte           10     6 (average)
  2297                           ; direct_byte           20    11 (fixed)
  2298                           ; jumptable            263     9 (fixed)
  2299                           ;	Chosen strategy is simple_byte
  2300  0408  0852               	movf	Setup_Alarm@BthucMode,w
  2301  0409  3A01               	xorlw	1	; case 1
  2302  040A  1903               	skipnz
  2303  040B  2BCA               	goto	l3690
  2304  040C  3A03               	xorlw	3	; case 2
  2305  040D  1903               	skipnz
  2306  040E  2BDD               	goto	l3696
  2307  040F  3A01               	xorlw	1	; case 3
  2308  0410  1903               	skipnz
  2309  0411  2BF0               	goto	l3702
  2310  0412  2C13               	goto	l379
  2311  0413                     l379:	
  2312                           ;RTC.c: 581:         }
  2313                           
  2314                           
  2315                           ;RTC.c: 583:         if(RB4==0)
  2316  0413  1A06               	btfsc	6,4	;volatile
  2317  0414  2C16               	goto	u3531
  2318  0415  2C17               	goto	u3530
  2319  0416                     u3531:
  2320  0416  2C6A               	goto	l400
  2321  0417                     u3530:
  2322  0417                     l401:
  2323  0417  1E06               	btfss	6,4	;volatile
  2324  0418  2C1A               	goto	u3541
  2325  0419  2C1B               	goto	u3540
  2326  041A                     u3541:
  2327  041A  2C17               	goto	l401
  2328  041B                     u3540:
  2329  041B                     l3714:
  2330                           
  2331                           ;RTC.c: 586:             dis=0;
  2332  041B  01D0               	clrf	Setup_Alarm@dis
  2333  041C  01D1               	clrf	Setup_Alarm@dis+1
  2334                           
  2335                           ;RTC.c: 587:             switch(BthucMode)
  2336  041D  2C5A               	goto	l3736
  2337  041E                     l3716:
  2338  041E  082C               	movf	_giobt,w
  2339  041F  042D               	iorwf	_giobt+1,w
  2340  0420  1903               	btfsc	3,2
  2341  0421  2C23               	goto	u3551
  2342  0422  2C24               	goto	u3550
  2343  0423                     u3551:
  2344  0423  2C2D               	goto	l3720
  2345  0424                     u3550:
  2346  0424                     l3718:
  2347  0424  082C               	movf	_giobt,w
  2348  0425  3EFF               	addlw	255
  2349  0426  00AC               	movwf	_giobt
  2350  0427  082D               	movf	_giobt+1,w
  2351  0428  1803               	skipnc
  2352  0429  3E01               	addlw	1
  2353  042A  3EFF               	addlw	255
  2354  042B  00AD               	movwf	_giobt+1
  2355  042C  2C6A               	goto	l400
  2356  042D                     l3720:
  2357  042D  3017               	movlw	23
  2358  042E  00AC               	movwf	_giobt
  2359  042F  3000               	movlw	0
  2360  0430  00AD               	movwf	_giobt+1
  2361  0431  2C6A               	goto	l400
  2362  0432                     l3722:
  2363  0432  082A               	movf	_phutbt,w
  2364  0433  042B               	iorwf	_phutbt+1,w
  2365  0434  1903               	btfsc	3,2
  2366  0435  2C37               	goto	u3561
  2367  0436  2C38               	goto	u3560
  2368  0437                     u3561:
  2369  0437  2C41               	goto	l3726
  2370  0438                     u3560:
  2371  0438                     l3724:
  2372  0438  082A               	movf	_phutbt,w
  2373  0439  3EFF               	addlw	255
  2374  043A  00AA               	movwf	_phutbt
  2375  043B  082B               	movf	_phutbt+1,w
  2376  043C  1803               	skipnc
  2377  043D  3E01               	addlw	1
  2378  043E  3EFF               	addlw	255
  2379  043F  00AB               	movwf	_phutbt+1
  2380  0440  2C6A               	goto	l400
  2381  0441                     l3726:
  2382  0441  303B               	movlw	59
  2383  0442  00AA               	movwf	_phutbt
  2384  0443  3000               	movlw	0
  2385  0444  00AB               	movwf	_phutbt+1
  2386  0445  2C6A               	goto	l400
  2387  0446                     l3728:
  2388  0446  0828               	movf	_giaybt,w
  2389  0447  0429               	iorwf	_giaybt+1,w
  2390  0448  1903               	btfsc	3,2
  2391  0449  2C4B               	goto	u3571
  2392  044A  2C4C               	goto	u3570
  2393  044B                     u3571:
  2394  044B  2C55               	goto	l3732
  2395  044C                     u3570:
  2396  044C                     l3730:
  2397  044C  0828               	movf	_giaybt,w
  2398  044D  3EFF               	addlw	255
  2399  044E  00A8               	movwf	_giaybt
  2400  044F  0829               	movf	_giaybt+1,w
  2401  0450  1803               	skipnc
  2402  0451  3E01               	addlw	1
  2403  0452  3EFF               	addlw	255
  2404  0453  00A9               	movwf	_giaybt+1
  2405  0454  2C6A               	goto	l400
  2406  0455                     l3732:
  2407  0455  303B               	movlw	59
  2408  0456  00A8               	movwf	_giaybt
  2409  0457  3000               	movlw	0
  2410  0458  00A9               	movwf	_giaybt+1
  2411  0459  2C6A               	goto	l400
  2412  045A                     l3736:
  2413                           
  2414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2415                           ; Switch size 1, requested type "simple"
  2416                           ; Number of cases is 1, Range of values is 0 to 0
  2417                           ; switch strategies available:
  2418                           ; Name         Instructions Cycles
  2419                           ; simple_byte            4     3 (average)
  2420                           ; direct_byte           11     8 (fixed)
  2421                           ; jumptable            260     6 (fixed)
  2422                           ;	Chosen strategy is simple_byte
  2423  045A  0853               	movf	Setup_Alarm@BthucMode+1,w
  2424  045B  3A00               	xorlw	0	; case 0
  2425  045C  1903               	skipnz
  2426  045D  2C5F               	goto	l3962
  2427  045E  2C6A               	goto	l400
  2428  045F                     l3962:
  2429                           
  2430                           ; Switch size 1, requested type "simple"
  2431                           ; Number of cases is 3, Range of values is 1 to 3
  2432                           ; switch strategies available:
  2433                           ; Name         Instructions Cycles
  2434                           ; simple_byte           10     6 (average)
  2435                           ; direct_byte           20    11 (fixed)
  2436                           ; jumptable            263     9 (fixed)
  2437                           ;	Chosen strategy is simple_byte
  2438  045F  0852               	movf	Setup_Alarm@BthucMode,w
  2439  0460  3A01               	xorlw	1	; case 1
  2440  0461  1903               	skipnz
  2441  0462  2C1E               	goto	l3716
  2442  0463  3A03               	xorlw	3	; case 2
  2443  0464  1903               	skipnz
  2444  0465  2C32               	goto	l3722
  2445  0466  3A01               	xorlw	1	; case 3
  2446  0467  1903               	skipnz
  2447  0468  2C46               	goto	l3728
  2448  0469  2C6A               	goto	l400
  2449  046A                     l400:	
  2450                           ;RTC.c: 593:         }
  2451                           
  2452                           
  2453                           ;RTC.c: 596:         if(RB0==0)
  2454  046A  1806               	btfsc	6,0	;volatile
  2455  046B  2C6D               	goto	u3581
  2456  046C  2C6E               	goto	u3580
  2457  046D                     u3581:
  2458  046D  2B30               	goto	l3658
  2459  046E                     u3580:
  2460  046E                     l422:
  2461  046E  1C06               	btfss	6,0	;volatile
  2462  046F  2C71               	goto	u3591
  2463  0470  2C72               	goto	u3590
  2464  0471                     u3591:
  2465  0471  2C6E               	goto	l422
  2466  0472                     u3590:
  2467  0472                     l426:
  2468  0472  0008               	return
  2469  0473                     __end_of_Setup_Alarm:
  2470                           
  2471                           	psect	text3
  2472  0B63                     __ptext3:	
  2473 ;; *************** function _Display_Alarm *****************
  2474 ;; Defined at:
  2475 ;;		line 524 in file "RTC.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  Vitri           2    8[BANK0 ] int 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2489 ;;      Params:         0       2       0       0       0
  2490 ;;      Locals:         0       0       0       0       0
  2491 ;;      Temps:          1       0       0       0       0
  2492 ;;      Totals:         1       2       0       0       0
  2493 ;;Total ram usage:        3 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 5
  2496 ;; This function calls:
  2497 ;;		_LCD_gotoxy
  2498 ;;		_LCD_int
  2499 ;;		_LCD_putc
  2500 ;;		_LCD_puts
  2501 ;; This function is called by:
  2502 ;;		_Setup_Alarm
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _Display_Alarm
  2508  0B63                     _Display_Alarm:
  2509  0B63                     l3492:	
  2510                           ;incstack = 0
  2511                           ; Regs used in _Display_Alarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2512                           
  2513                           
  2514                           ;RTC.c: 524: void Display_Alarm(int Vitri);RTC.c: 525: {;RTC.c: 526:     LCD_gotoxy(2,1)
      +                          ;
  2515  0B63  01F6               	clrf	LCD_gotoxy@y
  2516  0B64  0AF6               	incf	LCD_gotoxy@y,f
  2517  0B65  3002               	movlw	2
  2518  0B66  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  2519  0B6B                     l3494:
  2520                           
  2521                           ;RTC.c: 527:     LCD_puts("    ");
  2522  0B6B  302C               	movlw	low ((STR_10+18)| (0+32768))
  2523  0B6C  00F6               	movwf	LCD_puts@str
  2524  0B6D  3088               	movlw	high ((STR_10+18)| (0+32768))
  2525  0B6E  00F7               	movwf	LCD_puts@str+1
  2526  0B6F  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  2527  0B74                     l3496:
  2528                           
  2529                           ;RTC.c: 528:     if(Vitri==1) {LCD_puts("__");}
  2530  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0B76  034B               	decf	Display_Alarm@Vitri,w
  2533  0B77  044C               	iorwf	Display_Alarm@Vitri+1,w
  2534  0B78  1D03               	btfss	3,2
  2535  0B79  2B7B               	goto	u3171
  2536  0B7A  2B7C               	goto	u3170
  2537  0B7B                     u3171:
  2538  0B7B  2B86               	goto	l3500
  2539  0B7C                     u3170:
  2540  0B7C                     l3498:
  2541  0B7C  30E9               	movlw	low (STR_45| (0+32768))
  2542  0B7D  00F6               	movwf	LCD_puts@str
  2543  0B7E  3089               	movlw	high (STR_45| (0+32768))
  2544  0B7F  00F7               	movwf	LCD_puts@str+1
  2545  0B80  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  2546  0B85  2B9B               	goto	l3504
  2547  0B86                     l3500:
  2548  0B86  3005               	movlw	5
  2549  0B87  00FD               	movwf	??_Display_Alarm
  2550  0B88  087D               	movf	??_Display_Alarm,w
  2551  0B89  00F6               	movwf	LCD_gotoxy@y
  2552  0B8A  3002               	movlw	2
  2553  0B8B  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  2554  0B90                     l3502:
  2555  0B90  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0B91  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0B92  082D               	movf	_giobt+1,w
  2558  0B93  00F9               	movwf	LCD_int@value+1
  2559  0B94  082C               	movf	_giobt,w
  2560  0B95  00F8               	movwf	LCD_int@value
  2561  0B96  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  2562  0B9B                     l3504:
  2563                           
  2564                           ;RTC.c: 530:     LCD_putc(':');
  2565  0B9B  303A               	movlw	58
  2566  0B9C  160A  118A  267A  120A  158A  	fcall	_LCD_putc
  2567  0BA1                     l3506:
  2568                           
  2569                           ;RTC.c: 532:     if(Vitri==2) {LCD_puts("__");}
  2570  0BA1  3002               	movlw	2
  2571  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0BA4  064B               	xorwf	Display_Alarm@Vitri,w
  2574  0BA5  044C               	iorwf	Display_Alarm@Vitri+1,w
  2575  0BA6  1D03               	btfss	3,2
  2576  0BA7  2BA9               	goto	u3181
  2577  0BA8  2BAA               	goto	u3180
  2578  0BA9                     u3181:
  2579  0BA9  2BB4               	goto	l3510
  2580  0BAA                     u3180:
  2581  0BAA                     l3508:
  2582  0BAA  30E9               	movlw	low (STR_45| (0+32768))
  2583  0BAB  00F6               	movwf	LCD_puts@str
  2584  0BAC  3089               	movlw	high (STR_45| (0+32768))
  2585  0BAD  00F7               	movwf	LCD_puts@str+1
  2586  0BAE  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  2587  0BB3  2BC9               	goto	l3514
  2588  0BB4                     l3510:
  2589  0BB4  3008               	movlw	8
  2590  0BB5  00FD               	movwf	??_Display_Alarm
  2591  0BB6  087D               	movf	??_Display_Alarm,w
  2592  0BB7  00F6               	movwf	LCD_gotoxy@y
  2593  0BB8  3002               	movlw	2
  2594  0BB9  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  2595  0BBE                     l3512:
  2596  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0BC0  082B               	movf	_phutbt+1,w
  2599  0BC1  00F9               	movwf	LCD_int@value+1
  2600  0BC2  082A               	movf	_phutbt,w
  2601  0BC3  00F8               	movwf	LCD_int@value
  2602  0BC4  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  2603  0BC9                     l3514:
  2604                           
  2605                           ;RTC.c: 534:     LCD_putc(':');
  2606  0BC9  303A               	movlw	58
  2607  0BCA  160A  118A  267A  120A  158A  	fcall	_LCD_putc
  2608  0BCF                     l3516:
  2609                           
  2610                           ;RTC.c: 536:     if(Vitri==3) {LCD_puts("__");}
  2611  0BCF  3003               	movlw	3
  2612  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0BD2  064B               	xorwf	Display_Alarm@Vitri,w
  2615  0BD3  044C               	iorwf	Display_Alarm@Vitri+1,w
  2616  0BD4  1D03               	btfss	3,2
  2617  0BD5  2BD7               	goto	u3191
  2618  0BD6  2BD8               	goto	u3190
  2619  0BD7                     u3191:
  2620  0BD7  2BE2               	goto	l3520
  2621  0BD8                     u3190:
  2622  0BD8                     l3518:
  2623  0BD8  30E9               	movlw	low (STR_45| (0+32768))
  2624  0BD9  00F6               	movwf	LCD_puts@str
  2625  0BDA  3089               	movlw	high (STR_45| (0+32768))
  2626  0BDB  00F7               	movwf	LCD_puts@str+1
  2627  0BDC  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  2628  0BE1  2BF7               	goto	l3524
  2629  0BE2                     l3520:
  2630  0BE2  300B               	movlw	11
  2631  0BE3  00FD               	movwf	??_Display_Alarm
  2632  0BE4  087D               	movf	??_Display_Alarm,w
  2633  0BE5  00F6               	movwf	LCD_gotoxy@y
  2634  0BE6  3002               	movlw	2
  2635  0BE7  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  2636  0BEC                     l3522:
  2637  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0BEE  0829               	movf	_giaybt+1,w
  2640  0BEF  00F9               	movwf	LCD_int@value+1
  2641  0BF0  0828               	movf	_giaybt,w
  2642  0BF1  00F8               	movwf	LCD_int@value
  2643  0BF2  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  2644  0BF7                     l3524:
  2645                           
  2646                           ;RTC.c: 538:     LCD_puts("    ");
  2647  0BF7  302C               	movlw	low ((STR_10+18)| (0+32768))
  2648  0BF8  00F6               	movwf	LCD_puts@str
  2649  0BF9  3088               	movlw	high ((STR_10+18)| (0+32768))
  2650  0BFA  00F7               	movwf	LCD_puts@str+1
  2651  0BFB  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  2652  0C00                     l366:
  2653  0C00  0008               	return
  2654  0C01                     __end_of_Display_Alarm:
  2655                           
  2656                           	psect	text4
  2657  0623                     __ptext4:	
  2658 ;; *************** function _SetMode *****************
  2659 ;; Defined at:
  2660 ;;		line 463 in file "RTC.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2674 ;;      Params:         0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0
  2676 ;;      Temps:          0       2       0       0       0
  2677 ;;      Totals:         0       2       0       0       0
  2678 ;;Total ram usage:        2 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 4
  2681 ;; This function calls:
  2682 ;;		_BCDtoDec
  2683 ;;		_DecToBCD
  2684 ;;		_SetTime
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _SetMode
  2692  0623                     _SetMode:
  2693  0623                     l3588:	
  2694                           ;incstack = 0
  2695                           ; Regs used in _SetMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2696                           
  2697                           
  2698                           ;RTC.c: 466:     if(RB1==0 && tt==0)
  2699  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0625  1886               	btfsc	6,1	;volatile
  2702  0626  2E28               	goto	u3231
  2703  0627  2E29               	goto	u3230
  2704  0628                     u3231:
  2705  0628  2F13               	goto	l3614
  2706  0629                     u3230:
  2707  0629                     l3590:
  2708  0629  0820               	movf	_tt,w
  2709  062A  0421               	iorwf	_tt+1,w
  2710  062B  1D03               	btfss	3,2
  2711  062C  2E2E               	goto	u3241
  2712  062D  2E2F               	goto	u3240
  2713  062E                     u3241:
  2714  062E  2F13               	goto	l3614
  2715  062F                     u3240:
  2716  062F                     l342:
  2717  062F  1C86               	btfss	6,1	;volatile
  2718  0630  2E32               	goto	u3251
  2719  0631  2E33               	goto	u3250
  2720  0632                     u3251:
  2721  0632  2E2F               	goto	l342
  2722  0633                     u3250:
  2723  0633                     l3594:
  2724                           
  2725                           ;RTC.c: 469:         tt=1;
  2726  0633  3001               	movlw	1
  2727  0634  00A0               	movwf	_tt
  2728  0635  3000               	movlw	0
  2729  0636  00A1               	movwf	_tt+1
  2730  0637                     l3596:
  2731                           
  2732                           ;RTC.c: 472:         if(BCDtoDec(RTCbits.hour)>0 && BCDtoDec(RTCbits.hour)<12)
  2733  0637  083E               	movf	_RTCbits+2,w
  2734  0638  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2735  063D  3A00               	xorlw	0
  2736  063E  1903               	skipnz
  2737  063F  2E41               	goto	u3261
  2738  0640  2E42               	goto	u3260
  2739  0641                     u3261:
  2740  0641  2E62               	goto	l345
  2741  0642                     u3260:
  2742  0642                     l3598:
  2743  0642  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0643  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0644  083E               	movf	_RTCbits+2,w
  2746  0645  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2747  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2748  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2749  064C  00CA               	movwf	??_SetMode
  2750  064D  300C               	movlw	12
  2751  064E  024A               	subwf	??_SetMode,w
  2752  064F  1803               	skipnc
  2753  0650  2E52               	goto	u3271
  2754  0651  2E53               	goto	u3270
  2755  0652                     u3271:
  2756  0652  2E62               	goto	l345
  2757  0653                     u3270:
  2758  0653                     l3600:
  2759                           
  2760                           ;RTC.c: 474:             g=BCDtoDec(RTCbits.hour|(Mode<<6));
  2761  0653  083E               	movf	_RTCbits+2,w
  2762  0654  3840               	iorlw	64
  2763  0655  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2764  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2765  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2766  065C  00CA               	movwf	??_SetMode
  2767  065D  01CB               	clrf	??_SetMode+1
  2768  065E  084A               	movf	??_SetMode,w
  2769  065F  00A6               	movwf	_g
  2770  0660  084B               	movf	??_SetMode+1,w
  2771  0661  00A7               	movwf	_g+1
  2772  0662                     l345:
  2773                           
  2774                           ;RTC.c: 476:         if(BCDtoDec(RTCbits.hour)>12 && BCDtoDec(RTCbits.hour)<=23)
  2775  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0664  083E               	movf	_RTCbits+2,w
  2778  0665  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2779  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2780  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2781  066C  00CA               	movwf	??_SetMode
  2782  066D  300D               	movlw	13
  2783  066E  024A               	subwf	??_SetMode,w
  2784  066F  1C03               	skipc
  2785  0670  2E72               	goto	u3281
  2786  0671  2E73               	goto	u3280
  2787  0672                     u3281:
  2788  0672  2E9C               	goto	l346
  2789  0673                     u3280:
  2790  0673                     l3602:
  2791  0673  083E               	movf	_RTCbits+2,w
  2792  0674  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2793  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2794  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2795  067B  00CA               	movwf	??_SetMode
  2796  067C  3018               	movlw	24
  2797  067D  024A               	subwf	??_SetMode,w
  2798  067E  1803               	skipnc
  2799  067F  2E81               	goto	u3291
  2800  0680  2E82               	goto	u3290
  2801  0681                     u3291:
  2802  0681  2E9C               	goto	l346
  2803  0682                     u3290:
  2804  0682                     l3604:
  2805                           
  2806                           ;RTC.c: 478:             g=BCDtoDec(DecToBCD(BCDtoDec(RTCbits.hour)-12)|(3<<5));
  2807  0682  083E               	movf	_RTCbits+2,w
  2808  0683  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2809  0688  3EF4               	addlw	244
  2810  0689  160A  118A  2410  120A  118A  	fcall	_DecToBCD
  2811  068E  3860               	iorlw	96
  2812  068F  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2813  0694  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0695  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0696  00CA               	movwf	??_SetMode
  2816  0697  01CB               	clrf	??_SetMode+1
  2817  0698  084A               	movf	??_SetMode,w
  2818  0699  00A6               	movwf	_g
  2819  069A  084B               	movf	??_SetMode+1,w
  2820  069B  00A7               	movwf	_g+1
  2821  069C                     l346:
  2822                           
  2823                           ;RTC.c: 480:         if(BCDtoDec(RTCbits.hour)==0)
  2824  069C  083E               	movf	_RTCbits+2,w
  2825  069D  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2826  06A2  3A00               	xorlw	0
  2827  06A3  1D03               	skipz
  2828  06A4  2EA6               	goto	u3301
  2829  06A5  2EA7               	goto	u3300
  2830  06A6                     u3301:
  2831  06A6  2EC3               	goto	l347
  2832  06A7                     u3300:
  2833  06A7                     l3606:
  2834                           
  2835                           ;RTC.c: 481:             g=BCDtoDec(DecToBCD(BCDtoDec(RTCbits.hour)+12)|(Mode<<6));
  2836  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  2837  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  2838  06A9  083E               	movf	_RTCbits+2,w
  2839  06AA  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2840  06AF  3E0C               	addlw	12
  2841  06B0  160A  118A  2410  120A  118A  	fcall	_DecToBCD
  2842  06B5  3840               	iorlw	64
  2843  06B6  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2844  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  2845  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  2846  06BD  00CA               	movwf	??_SetMode
  2847  06BE  01CB               	clrf	??_SetMode+1
  2848  06BF  084A               	movf	??_SetMode,w
  2849  06C0  00A6               	movwf	_g
  2850  06C1  084B               	movf	??_SetMode+1,w
  2851  06C2  00A7               	movwf	_g+1
  2852  06C3                     l347:
  2853                           
  2854                           ;RTC.c: 483:         if(BCDtoDec(RTCbits.hour)==12)
  2855  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2856  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2857  06C5  083E               	movf	_RTCbits+2,w
  2858  06C6  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2859  06CB  3A0C               	xorlw	12
  2860  06CC  1D03               	skipz
  2861  06CD  2ECF               	goto	u3311
  2862  06CE  2ED0               	goto	u3310
  2863  06CF                     u3311:
  2864  06CF  2EE1               	goto	l348
  2865  06D0                     u3310:
  2866  06D0                     l3608:
  2867                           
  2868                           ;RTC.c: 485:             g=BCDtoDec(RTCbits.hour|(3<<5));
  2869  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  2870  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  2871  06D2  083E               	movf	_RTCbits+2,w
  2872  06D3  3860               	iorlw	96
  2873  06D4  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2874  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2875  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2876  06DB  00CA               	movwf	??_SetMode
  2877  06DC  01CB               	clrf	??_SetMode+1
  2878  06DD  084A               	movf	??_SetMode,w
  2879  06DE  00A6               	movwf	_g
  2880  06DF  084B               	movf	??_SetMode+1,w
  2881  06E0  00A7               	movwf	_g+1
  2882  06E1                     l348:
  2883                           
  2884                           ;RTC.c: 487:         ph=BCDtoDec(RTCbits.min);
  2885  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2886  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2887  06E3  083D               	movf	_RTCbits+1,w
  2888  06E4  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2889  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  2890  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  2891  06EB  00CA               	movwf	??_SetMode
  2892  06EC  01CB               	clrf	??_SetMode+1
  2893  06ED  084A               	movf	??_SetMode,w
  2894  06EE  00A4               	movwf	_ph
  2895  06EF  084B               	movf	??_SetMode+1,w
  2896  06F0  00A5               	movwf	_ph+1
  2897                           
  2898                           ;RTC.c: 488:         gi=BCDtoDec(RTCbits.sec);
  2899  06F1  083C               	movf	_RTCbits,w
  2900  06F2  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2901  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2902  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2903  06F9  00CA               	movwf	??_SetMode
  2904  06FA  01CB               	clrf	??_SetMode+1
  2905  06FB  084A               	movf	??_SetMode,w
  2906  06FC  00A2               	movwf	_gi
  2907  06FD  084B               	movf	??_SetMode+1,w
  2908  06FE  00A3               	movwf	_gi+1
  2909  06FF                     l3610:
  2910                           
  2911                           ;RTC.c: 489:         SetTime(g, ph, gi);
  2912  06FF  0824               	movf	_ph,w
  2913  0700  00CA               	movwf	??_SetMode
  2914  0701  084A               	movf	??_SetMode,w
  2915  0702  00C6               	movwf	SetTime@ph
  2916  0703  0822               	movf	_gi,w
  2917  0704  00CB               	movwf	??_SetMode+1
  2918  0705  084B               	movf	??_SetMode+1,w
  2919  0706  00C7               	movwf	SetTime@gia
  2920  0707  0826               	movf	_g,w
  2921  0708  160A  118A  2542  120A  118A  	fcall	_SetTime
  2922  070D                     l3612:
  2923                           
  2924                           ;RTC.c: 490:         MODE = 12;
  2925  070D  300C               	movlw	12
  2926  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2927  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0710  00E8               	movwf	_MODE
  2929  0711  3000               	movlw	0
  2930  0712  00E9               	movwf	_MODE+1
  2931  0713                     l3614:
  2932                           
  2933                           ;RTC.c: 494:     if(RB1==0 && tt==1)
  2934  0713  1886               	btfsc	6,1	;volatile
  2935  0714  2F16               	goto	u3321
  2936  0715  2F17               	goto	u3320
  2937  0716                     u3321:
  2938  0716  2FDD               	goto	l357
  2939  0717                     u3320:
  2940  0717                     l3616:
  2941  0717  0320               	decf	_tt,w
  2942  0718  0421               	iorwf	_tt+1,w
  2943  0719  1D03               	btfss	3,2
  2944  071A  2F1C               	goto	u3331
  2945  071B  2F1D               	goto	u3330
  2946  071C                     u3331:
  2947  071C  2FDD               	goto	l357
  2948  071D                     u3330:
  2949  071D                     l350:
  2950  071D  1C86               	btfss	6,1	;volatile
  2951  071E  2F20               	goto	u3341
  2952  071F  2F21               	goto	u3340
  2953  0720                     u3341:
  2954  0720  2F1D               	goto	l350
  2955  0721                     u3340:
  2956  0721                     l3620:
  2957                           
  2958                           ;RTC.c: 497:         tt=0;
  2959  0721  01A0               	clrf	_tt
  2960  0722  01A1               	clrf	_tt+1
  2961  0723                     l3622:
  2962                           
  2963                           ;RTC.c: 500:         if((RTCbits.hour & (1<<5))==0 && BCDtoDec(RTCbits.hour& ~(3<<5))<12
      +                          )
  2964  0723  1ABE               	btfsc	_RTCbits+2,5
  2965  0724  2F26               	goto	u3351
  2966  0725  2F27               	goto	u3350
  2967  0726                     u3351:
  2968  0726  2F46               	goto	l3628
  2969  0727                     u3350:
  2970  0727                     l3624:
  2971  0727  083E               	movf	_RTCbits+2,w
  2972  0728  399F               	andlw	159
  2973  0729  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2974  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2975  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0730  00CA               	movwf	??_SetMode
  2977  0731  300C               	movlw	12
  2978  0732  024A               	subwf	??_SetMode,w
  2979  0733  1803               	skipnc
  2980  0734  2F36               	goto	u3361
  2981  0735  2F37               	goto	u3360
  2982  0736                     u3361:
  2983  0736  2F46               	goto	l3628
  2984  0737                     u3360:
  2985  0737                     l3626:
  2986                           
  2987                           ;RTC.c: 502:             g=BCDtoDec(RTCbits.hour&~(Mode<<6));
  2988  0737  083E               	movf	_RTCbits+2,w
  2989  0738  39BF               	andlw	191
  2990  0739  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  2991  073E  1283               	bcf	3,5	;RP0=0, select bank0
  2992  073F  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0740  00CA               	movwf	??_SetMode
  2994  0741  01CB               	clrf	??_SetMode+1
  2995  0742  084A               	movf	??_SetMode,w
  2996  0743  00A6               	movwf	_g
  2997  0744  084B               	movf	??_SetMode+1,w
  2998  0745  00A7               	movwf	_g+1
  2999  0746                     l3628:
  3000                           
  3001                           ;RTC.c: 504:         if((RTCbits.hour & (1<<5))==0 && BCDtoDec(RTCbits.hour& ~(3<<5))==1
      +                          2)
  3002  0746  1ABE               	btfsc	_RTCbits+2,5
  3003  0747  2F49               	goto	u3371
  3004  0748  2F4A               	goto	u3370
  3005  0749                     u3371:
  3006  0749  2F67               	goto	l3634
  3007  074A                     u3370:
  3008  074A                     l3630:
  3009  074A  083E               	movf	_RTCbits+2,w
  3010  074B  399F               	andlw	159
  3011  074C  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  3012  0751  3A0C               	xorlw	12
  3013  0752  1D03               	skipz
  3014  0753  2F55               	goto	u3381
  3015  0754  2F56               	goto	u3380
  3016  0755                     u3381:
  3017  0755  2F67               	goto	l3634
  3018  0756                     u3380:
  3019  0756                     l3632:
  3020                           
  3021                           ;RTC.c: 505:             g=BCDtoDec(RTCbits.hour&~(Mode<<6))-12;
  3022  0756  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0757  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0758  083E               	movf	_RTCbits+2,w
  3025  0759  39BF               	andlw	191
  3026  075A  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  3027  075F  3EF4               	addlw	244
  3028  0760  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0761  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0762  00A6               	movwf	_g
  3031  0763  30FF               	movlw	255
  3032  0764  1803               	skipnc
  3033  0765  3000               	movlw	0
  3034  0766  00A7               	movwf	_g+1
  3035  0767                     l3634:
  3036                           
  3037                           ;RTC.c: 507:         if((RTCbits.hour & (1<<5))!=0 && BCDtoDec(RTCbits.hour& ~(3<<5))<12
      +                          )
  3038  0767  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0768  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0769  1EBE               	btfss	_RTCbits+2,5
  3041  076A  2F6C               	goto	u3391
  3042  076B  2F6D               	goto	u3390
  3043  076C                     u3391:
  3044  076C  2F8C               	goto	l3640
  3045  076D                     u3390:
  3046  076D                     l3636:
  3047  076D  083E               	movf	_RTCbits+2,w
  3048  076E  399F               	andlw	159
  3049  076F  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  3050  0774  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0775  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0776  00CA               	movwf	??_SetMode
  3053  0777  300C               	movlw	12
  3054  0778  024A               	subwf	??_SetMode,w
  3055  0779  1803               	skipnc
  3056  077A  2F7C               	goto	u3401
  3057  077B  2F7D               	goto	u3400
  3058  077C                     u3401:
  3059  077C  2F8C               	goto	l3640
  3060  077D                     u3400:
  3061  077D                     l3638:
  3062                           
  3063                           ;RTC.c: 509:             g=BCDtoDec(RTCbits.hour&~(3<<5))+12;
  3064  077D  083E               	movf	_RTCbits+2,w
  3065  077E  399F               	andlw	159
  3066  077F  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  3067  0784  3E0C               	addlw	12
  3068  0785  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0786  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0787  00A6               	movwf	_g
  3071  0788  3000               	movlw	0
  3072  0789  1803               	skipnc
  3073  078A  3001               	movlw	1
  3074  078B  00A7               	movwf	_g+1
  3075  078C                     l3640:
  3076                           
  3077                           ;RTC.c: 511:         if((RTCbits.hour & (1<<5))!=0 && BCDtoDec(RTCbits.hour& ~(3<<5))==1
      +                          2)
  3078  078C  1EBE               	btfss	_RTCbits+2,5
  3079  078D  2F8F               	goto	u3411
  3080  078E  2F90               	goto	u3410
  3081  078F                     u3411:
  3082  078F  2FAD               	goto	l356
  3083  0790                     u3410:
  3084  0790                     l3642:
  3085  0790  083E               	movf	_RTCbits+2,w
  3086  0791  399F               	andlw	159
  3087  0792  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  3088  0797  3A0C               	xorlw	12
  3089  0798  1D03               	skipz
  3090  0799  2F9B               	goto	u3421
  3091  079A  2F9C               	goto	u3420
  3092  079B                     u3421:
  3093  079B  2FAD               	goto	l356
  3094  079C                     u3420:
  3095  079C                     l3644:
  3096                           
  3097                           ;RTC.c: 513:             g=BCDtoDec(RTCbits.hour&~(3<<5));
  3098  079C  1283               	bcf	3,5	;RP0=0, select bank0
  3099  079D  1303               	bcf	3,6	;RP1=0, select bank0
  3100  079E  083E               	movf	_RTCbits+2,w
  3101  079F  399F               	andlw	159
  3102  07A0  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  3103  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  3104  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  3105  07A7  00CA               	movwf	??_SetMode
  3106  07A8  01CB               	clrf	??_SetMode+1
  3107  07A9  084A               	movf	??_SetMode,w
  3108  07AA  00A6               	movwf	_g
  3109  07AB  084B               	movf	??_SetMode+1,w
  3110  07AC  00A7               	movwf	_g+1
  3111  07AD                     l356:
  3112                           
  3113                           ;RTC.c: 514:         ph=BCDtoDec(RTCbits.min);
  3114  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  3115  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  3116  07AF  083D               	movf	_RTCbits+1,w
  3117  07B0  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  3118  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3119  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3120  07B7  00CA               	movwf	??_SetMode
  3121  07B8  01CB               	clrf	??_SetMode+1
  3122  07B9  084A               	movf	??_SetMode,w
  3123  07BA  00A4               	movwf	_ph
  3124  07BB  084B               	movf	??_SetMode+1,w
  3125  07BC  00A5               	movwf	_ph+1
  3126                           
  3127                           ;RTC.c: 515:         gi=BCDtoDec(RTCbits.sec);
  3128  07BD  083C               	movf	_RTCbits,w
  3129  07BE  160A  118A  22B9  120A  118A  	fcall	_BCDtoDec
  3130  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3131  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3132  07C5  00CA               	movwf	??_SetMode
  3133  07C6  01CB               	clrf	??_SetMode+1
  3134  07C7  084A               	movf	??_SetMode,w
  3135  07C8  00A2               	movwf	_gi
  3136  07C9  084B               	movf	??_SetMode+1,w
  3137  07CA  00A3               	movwf	_gi+1
  3138  07CB                     l3646:
  3139                           
  3140                           ;RTC.c: 516:         MODE = 24;
  3141  07CB  3018               	movlw	24
  3142  07CC  00E8               	movwf	_MODE
  3143  07CD  3000               	movlw	0
  3144  07CE  00E9               	movwf	_MODE+1
  3145  07CF                     l3648:
  3146                           
  3147                           ;RTC.c: 517:         SetTime(g, ph, gi);
  3148  07CF  0824               	movf	_ph,w
  3149  07D0  00CA               	movwf	??_SetMode
  3150  07D1  084A               	movf	??_SetMode,w
  3151  07D2  00C6               	movwf	SetTime@ph
  3152  07D3  0822               	movf	_gi,w
  3153  07D4  00CB               	movwf	??_SetMode+1
  3154  07D5  084B               	movf	??_SetMode+1,w
  3155  07D6  00C7               	movwf	SetTime@gia
  3156  07D7  0826               	movf	_g,w
  3157  07D8  160A  118A  2542  120A  118A  	fcall	_SetTime
  3158  07DD                     l357:
  3159  07DD  0008               	return
  3160  07DE                     __end_of_SetMode:
  3161                           
  3162                           	psect	text5
  3163  12B9                     __ptext5:	
  3164 ;; *************** function _BCDtoDec *****************
  3165 ;; Defined at:
  3166 ;;		line 228 in file "RTC.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  a               1    wreg     unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  a               1    9[COMMON] unsigned char 
  3171 ;;  dv              1    8[COMMON] unsigned char 
  3172 ;;  chuc            1    7[COMMON] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      unsigned char 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, pclath, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         3       0       0       0       0
  3184 ;;      Temps:          3       0       0       0       0
  3185 ;;      Totals:         6       0       0       0       0
  3186 ;;Total ram usage:        6 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 1
  3189 ;; This function calls:
  3190 ;;		___bmul
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;;		_SetMode
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _BCDtoDec
  3199  12B9                     _BCDtoDec:
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _BCDtoDec: [wreg+status,2+status,0+pclath+cstack]
  3203                           ;BCDtoDec@a stored from wreg
  3204  12B9  00F9               	movwf	BCDtoDec@a
  3205  12BA                     l3114:
  3206                           
  3207                           ;RTC.c: 228: unsigned char BCDtoDec(unsigned char a);RTC.c: 229: {;RTC.c: 230:     unsig
      +                          ned char chuc, dv;;RTC.c: 231:     chuc = (a>>4)*10;
  3208  12BA  300A               	movlw	10
  3209  12BB  00F4               	movwf	??_BCDtoDec
  3210  12BC  0874               	movf	??_BCDtoDec,w
  3211  12BD  00F0               	movwf	___bmul@multiplicand
  3212  12BE  0879               	movf	BCDtoDec@a,w
  3213  12BF  00F5               	movwf	??_BCDtoDec+1
  3214  12C0  3004               	movlw	4
  3215  12C1                     u2655:
  3216  12C1  1003               	clrc
  3217  12C2  0CF5               	rrf	??_BCDtoDec+1,f
  3218  12C3  3EFF               	addlw	-1
  3219  12C4  1D03               	skipz
  3220  12C5  2AC1               	goto	u2655
  3221  12C6  0875               	movf	??_BCDtoDec+1,w
  3222  12C7  160A  118A  2287  160A  118A  	fcall	___bmul
  3223  12CC  00F6               	movwf	??_BCDtoDec+2
  3224  12CD  0876               	movf	??_BCDtoDec+2,w
  3225  12CE  00F7               	movwf	BCDtoDec@chuc
  3226  12CF                     l3116:
  3227                           
  3228                           ;RTC.c: 232:     dv = a&0x0F;
  3229  12CF  0879               	movf	BCDtoDec@a,w
  3230  12D0  390F               	andlw	15
  3231  12D1  00F4               	movwf	??_BCDtoDec
  3232  12D2  0874               	movf	??_BCDtoDec,w
  3233  12D3  00F8               	movwf	BCDtoDec@dv
  3234  12D4                     l3118:
  3235                           
  3236                           ;RTC.c: 233:     return (chuc+dv);
  3237  12D4  0878               	movf	BCDtoDec@dv,w
  3238  12D5  0777               	addwf	BCDtoDec@chuc,w
  3239  12D6                     l122:
  3240  12D6  0008               	return
  3241  12D7                     __end_of_BCDtoDec:
  3242                           
  3243                           	psect	text6
  3244  0E9D                     __ptext6:	
  3245 ;; *************** function _Select_Menu *****************
  3246 ;; Defined at:
  3247 ;;		line 431 in file "RTC.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0
  3263 ;;      Temps:          0       3       0       0       0
  3264 ;;      Totals:         0       3       0       0       0
  3265 ;;Total ram usage:        3 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 6
  3268 ;; This function calls:
  3269 ;;		_Display_Time
  3270 ;;		_LCD_gotoxy
  3271 ;;		_LCD_puts
  3272 ;;		_SetGiay
  3273 ;;		_SetGio
  3274 ;;		_SetNamchuc
  3275 ;;		_SetNamdv
  3276 ;;		_SetNgay
  3277 ;;		_SetPhut
  3278 ;;		_SetThang
  3279 ;;		_SetThu
  3280 ;; This function is called by:
  3281 ;;		_main
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function _Select_Menu
  3287  0E9D                     _Select_Menu:
  3288  0E9D                     l3544:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _Select_Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3291                           
  3292                           
  3293                           ;RTC.c: 433:     if(RB0 == 0)
  3294  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0E9F  1806               	btfsc	6,0	;volatile
  3297  0EA0  2EA2               	goto	u3201
  3298  0EA1  2EA3               	goto	u3200
  3299  0EA2                     u3201:
  3300  0EA2  2F24               	goto	l3582
  3301  0EA3                     u3200:
  3302  0EA3                     l315:
  3303  0EA3  1C06               	btfss	6,0	;volatile
  3304  0EA4  2EA6               	goto	u3211
  3305  0EA5  2EA7               	goto	u3210
  3306  0EA6                     u3211:
  3307  0EA6  2EA3               	goto	l315
  3308  0EA7                     u3210:
  3309  0EA7                     l3548:
  3310                           
  3311                           ;RTC.c: 436:         demmenu = demmenu + 1;
  3312  0EA7  0838               	movf	_demmenu,w
  3313  0EA8  3E01               	addlw	1
  3314  0EA9  00B8               	movwf	_demmenu
  3315  0EAA  0839               	movf	_demmenu+1,w
  3316  0EAB  1803               	skipnc
  3317  0EAC  3E01               	addlw	1
  3318  0EAD  3E00               	addlw	0
  3319  0EAE  00B9               	movwf	_demmenu+1
  3320  0EAF                     l3550:
  3321                           
  3322                           ;RTC.c: 437:         if(demmenu > 8)
  3323  0EAF  3000               	movlw	0
  3324  0EB0  0239               	subwf	_demmenu+1,w
  3325  0EB1  3009               	movlw	9
  3326  0EB2  1903               	skipnz
  3327  0EB3  0238               	subwf	_demmenu,w
  3328  0EB4  1C03               	skipc
  3329  0EB5  2EB7               	goto	u3221
  3330  0EB6  2EB8               	goto	u3220
  3331  0EB7                     u3221:
  3332  0EB7  2F24               	goto	l3582
  3333  0EB8                     u3220:
  3334  0EB8                     l3552:
  3335                           
  3336                           ;RTC.c: 438:         {;RTC.c: 439:             LCD_gotoxy(1,1);
  3337  0EB8  01F6               	clrf	LCD_gotoxy@y
  3338  0EB9  0AF6               	incf	LCD_gotoxy@y,f
  3339  0EBA  3001               	movlw	1
  3340  0EBB  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  3341  0EC0                     l3554:
  3342                           
  3343                           ;RTC.c: 440:             LCD_puts("  SAVE SETTING  ");
  3344  0EC0  30B6               	movlw	low (STR_42| (0+32768))
  3345  0EC1  00F6               	movwf	LCD_puts@str
  3346  0EC2  3088               	movlw	high (STR_42| (0+32768))
  3347  0EC3  00F7               	movwf	LCD_puts@str+1
  3348  0EC4  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  3349  0EC9                     l3556:
  3350                           
  3351                           ;RTC.c: 441:             LCD_gotoxy(2,1);
  3352  0EC9  01F6               	clrf	LCD_gotoxy@y
  3353  0ECA  0AF6               	incf	LCD_gotoxy@y,f
  3354  0ECB  3002               	movlw	2
  3355  0ECC  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  3356                           
  3357                           ;RTC.c: 442:             LCD_puts("  PROGRESS....  ");
  3358  0ED1  30A5               	movlw	low (STR_43| (0+32768))
  3359  0ED2  00F6               	movwf	LCD_puts@str
  3360  0ED3  3088               	movlw	high (STR_43| (0+32768))
  3361  0ED4  00F7               	movwf	LCD_puts@str+1
  3362  0ED5  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  3363  0EDA                     l3558:
  3364                           
  3365                           ;RTC.c: 443:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  3366  0EDA  301A               	movlw	26
  3367  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0EDD  00DD               	movwf	??_Select_Menu+2
  3370  0EDE  305E               	movlw	94
  3371  0EDF  00DC               	movwf	??_Select_Menu+1
  3372  0EE0  306D               	movlw	109
  3373  0EE1  00DB               	movwf	??_Select_Menu
  3374  0EE2                     u3707:
  3375  0EE2  0BDB               	decfsz	??_Select_Menu,f
  3376  0EE3  2EE2               	goto	u3707
  3377  0EE4  0BDC               	decfsz	??_Select_Menu+1,f
  3378  0EE5  2EE2               	goto	u3707
  3379  0EE6  0BDD               	decfsz	??_Select_Menu+2,f
  3380  0EE7  2EE2               	goto	u3707
  3381  0EE8  2EE9               	nop2
  3382  0EE9                     l3560:
  3383                           
  3384                           ;RTC.c: 444:             demmenu=0;
  3385  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0EEB  01B8               	clrf	_demmenu
  3388  0EEC  01B9               	clrf	_demmenu+1
  3389  0EED  2F24               	goto	l3582
  3390  0EEE                     l3562:
  3391  0EEE  120A  118A  21E5  120A  158A  	fcall	_Display_Time
  3392  0EF3  2F46               	goto	l330
  3393  0EF4                     l3564:
  3394  0EF4  120A  118A  2006  120A  158A  	fcall	_SetThu
  3395  0EF9  2F46               	goto	l330
  3396  0EFA                     l3566:
  3397  0EFA  120A  158A  254D  120A  158A  	fcall	_SetNgay
  3398  0EFF  2F46               	goto	l330
  3399  0F00                     l3568:
  3400  0F00  120A  158A  25F5  120A  158A  	fcall	_SetThang
  3401  0F05  2F46               	goto	l330
  3402  0F06                     l3570:
  3403  0F06  120A  158A  2401  120A  158A  	fcall	_SetNamchuc
  3404  0F0B  2F46               	goto	l330
  3405  0F0C                     l3572:
  3406  0F0C  120A  158A  24A7  120A  158A  	fcall	_SetNamdv
  3407  0F11  2F46               	goto	l330
  3408  0F12                     l3574:
  3409  0F12  120A  158A  2237  120A  158A  	fcall	_SetGio
  3410  0F17  2F46               	goto	l330
  3411  0F18                     l3576:
  3412  0F18  120A  158A  22CD  120A  158A  	fcall	_SetPhut
  3413  0F1D  2F46               	goto	l330
  3414  0F1E                     l3578:
  3415  0F1E  160A  118A  276A  120A  158A  	fcall	_SetGiay
  3416  0F23  2F46               	goto	l330
  3417  0F24                     l3582:
  3418                           
  3419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3420                           ; Switch size 1, requested type "simple"
  3421                           ; Number of cases is 1, Range of values is 0 to 0
  3422                           ; switch strategies available:
  3423                           ; Name         Instructions Cycles
  3424                           ; simple_byte            4     3 (average)
  3425                           ; direct_byte           11     8 (fixed)
  3426                           ; jumptable            260     6 (fixed)
  3427                           ;	Chosen strategy is simple_byte
  3428  0F24  0839               	movf	_demmenu+1,w
  3429  0F25  3A00               	xorlw	0	; case 0
  3430  0F26  1903               	skipnz
  3431  0F27  2F29               	goto	l3964
  3432  0F28  2F46               	goto	l330
  3433  0F29                     l3964:
  3434                           
  3435                           ; Switch size 1, requested type "simple"
  3436                           ; Number of cases is 9, Range of values is 0 to 8
  3437                           ; switch strategies available:
  3438                           ; Name         Instructions Cycles
  3439                           ; simple_byte           28    15 (average)
  3440                           ; direct_byte           35     8 (fixed)
  3441                           ; jumptable            260     6 (fixed)
  3442                           ;	Chosen strategy is simple_byte
  3443  0F29  0838               	movf	_demmenu,w
  3444  0F2A  3A00               	xorlw	0	; case 0
  3445  0F2B  1903               	skipnz
  3446  0F2C  2EEE               	goto	l3562
  3447  0F2D  3A01               	xorlw	1	; case 1
  3448  0F2E  1903               	skipnz
  3449  0F2F  2EF4               	goto	l3564
  3450  0F30  3A03               	xorlw	3	; case 2
  3451  0F31  1903               	skipnz
  3452  0F32  2EFA               	goto	l3566
  3453  0F33  3A01               	xorlw	1	; case 3
  3454  0F34  1903               	skipnz
  3455  0F35  2F00               	goto	l3568
  3456  0F36  3A07               	xorlw	7	; case 4
  3457  0F37  1903               	skipnz
  3458  0F38  2F06               	goto	l3570
  3459  0F39  3A01               	xorlw	1	; case 5
  3460  0F3A  1903               	skipnz
  3461  0F3B  2F0C               	goto	l3572
  3462  0F3C  3A03               	xorlw	3	; case 6
  3463  0F3D  1903               	skipnz
  3464  0F3E  2F12               	goto	l3574
  3465  0F3F  3A01               	xorlw	1	; case 7
  3466  0F40  1903               	skipnz
  3467  0F41  2F18               	goto	l3576
  3468  0F42  3A0F               	xorlw	15	; case 8
  3469  0F43  1903               	skipnz
  3470  0F44  2F1E               	goto	l3578
  3471  0F45  2F46               	goto	l330
  3472  0F46                     l330:
  3473  0F46  0008               	return
  3474  0F47                     __end_of_Select_Menu:
  3475                           
  3476                           	psect	text7
  3477  0006                     __ptext7:	
  3478 ;; *************** function _SetThu *****************
  3479 ;; Defined at:
  3480 ;;		line 303 in file "RTC.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3494 ;;      Params:         0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0
  3496 ;;      Temps:          0       4       0       0       0
  3497 ;;      Totals:         0       4       0       0       0
  3498 ;;Total ram usage:        4 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 5
  3501 ;; This function calls:
  3502 ;;		_LCD_gotoxy
  3503 ;;		_LCD_puts
  3504 ;;		_SetDate
  3505 ;;		___bmul
  3506 ;; This function is called by:
  3507 ;;		_Select_Menu
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _SetThu
  3513  0006                     _SetThu:
  3514  0006                     l3174:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _SetThu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3517                           
  3518                           
  3519                           ;RTC.c: 305:     if (RB3 == 0) {while(RB3==0); thu = (thu==7?1:(thu+1));}
  3520  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0008  1986               	btfsc	6,3	;volatile
  3523  0009  280B               	goto	u2691
  3524  000A  280C               	goto	u2690
  3525  000B                     u2691:
  3526  000B  2824               	goto	l3184
  3527  000C                     u2690:
  3528  000C                     l154:
  3529  000C  1D86               	btfss	6,3	;volatile
  3530  000D  280F               	goto	u2701
  3531  000E  2810               	goto	u2700
  3532  000F                     u2701:
  3533  000F  280C               	goto	l154
  3534  0010                     u2700:
  3535  0010                     l3178:
  3536  0010  3007               	movlw	7
  3537  0011  0666               	xorwf	_thu,w
  3538  0012  0467               	iorwf	_thu+1,w
  3539  0013  1903               	btfsc	3,2
  3540  0014  2816               	goto	u2711
  3541  0015  2817               	goto	u2710
  3542  0016                     u2711:
  3543  0016  2820               	goto	l3182
  3544  0017                     u2710:
  3545  0017                     l3180:
  3546  0017  0866               	movf	_thu,w
  3547  0018  3E01               	addlw	1
  3548  0019  00E6               	movwf	_thu
  3549  001A  0867               	movf	_thu+1,w
  3550  001B  1803               	skipnc
  3551  001C  3E01               	addlw	1
  3552  001D  3E00               	addlw	0
  3553  001E  00E7               	movwf	_thu+1
  3554  001F  2824               	goto	l3184
  3555  0020                     l3182:
  3556  0020  3001               	movlw	1
  3557  0021  00E6               	movwf	_thu
  3558  0022  3000               	movlw	0
  3559  0023  00E7               	movwf	_thu+1
  3560  0024                     l3184:
  3561                           
  3562                           ;RTC.c: 306:     if (RB4 == 0) {while(RB4==0); thu = (thu==1?7:(thu-1));}
  3563  0024  1A06               	btfsc	6,4	;volatile
  3564  0025  2827               	goto	u2721
  3565  0026  2828               	goto	u2720
  3566  0027                     u2721:
  3567  0027  283F               	goto	l3194
  3568  0028                     u2720:
  3569  0028                     l162:
  3570  0028  1E06               	btfss	6,4	;volatile
  3571  0029  282B               	goto	u2731
  3572  002A  282C               	goto	u2730
  3573  002B                     u2731:
  3574  002B  2828               	goto	l162
  3575  002C                     u2730:
  3576  002C                     l3188:
  3577  002C  0366               	decf	_thu,w
  3578  002D  0467               	iorwf	_thu+1,w
  3579  002E  1903               	btfsc	3,2
  3580  002F  2831               	goto	u2741
  3581  0030  2832               	goto	u2740
  3582  0031                     u2741:
  3583  0031  283B               	goto	l3192
  3584  0032                     u2740:
  3585  0032                     l3190:
  3586  0032  0866               	movf	_thu,w
  3587  0033  3EFF               	addlw	255
  3588  0034  00E6               	movwf	_thu
  3589  0035  0867               	movf	_thu+1,w
  3590  0036  1803               	skipnc
  3591  0037  3E01               	addlw	1
  3592  0038  3EFF               	addlw	255
  3593  0039  00E7               	movwf	_thu+1
  3594  003A  283F               	goto	l3194
  3595  003B                     l3192:
  3596  003B  3007               	movlw	7
  3597  003C  00E6               	movwf	_thu
  3598  003D  3000               	movlw	0
  3599  003E  00E7               	movwf	_thu+1
  3600  003F                     l3194:
  3601                           
  3602                           ;RTC.c: 307:     LCD_gotoxy(1,1);
  3603  003F  01F6               	clrf	LCD_gotoxy@y
  3604  0040  0AF6               	incf	LCD_gotoxy@y,f
  3605  0041  3001               	movlw	1
  3606  0042  160A  118A  236A  120A  118A  	fcall	_LCD_gotoxy
  3607  0047                     l3196:
  3608                           
  3609                           ;RTC.c: 308:     LCD_puts("  CAI DAT THU   ");
  3610  0047  3094               	movlw	low (STR_12| (0+32768))
  3611  0048  00F6               	movwf	LCD_puts@str
  3612  0049  3088               	movlw	high (STR_12| (0+32768))
  3613  004A  00F7               	movwf	LCD_puts@str+1
  3614  004B  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3615  0050                     l3198:
  3616                           
  3617                           ;RTC.c: 309:     LCD_gotoxy(2,1);
  3618  0050  01F6               	clrf	LCD_gotoxy@y
  3619  0051  0AF6               	incf	LCD_gotoxy@y,f
  3620  0052  3002               	movlw	2
  3621  0053  160A  118A  236A  120A  118A  	fcall	_LCD_gotoxy
  3622  0058                     l3200:
  3623                           
  3624                           ;RTC.c: 310:     LCD_puts("  THU: ");
  3625  0058  30BE               	movlw	low (STR_13| (0+32768))
  3626  0059  00F6               	movwf	LCD_puts@str
  3627  005A  3089               	movlw	high (STR_13| (0+32768))
  3628  005B  00F7               	movwf	LCD_puts@str+1
  3629  005C  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3630                           
  3631                           ;RTC.c: 311:     switch(thu)
  3632  0061  28A8               	goto	l3218
  3633  0062                     l3202:
  3634  0062  308C               	movlw	low (STR_14| (0+32768))
  3635  0063  00F6               	movwf	LCD_puts@str
  3636  0064  3089               	movlw	high (STR_14| (0+32768))
  3637  0065  00F7               	movwf	LCD_puts@str+1
  3638  0066  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3639  006B  28C3               	goto	l3220
  3640  006C                     l3204:
  3641  006C  3082               	movlw	low (STR_15| (0+32768))
  3642  006D  00F6               	movwf	LCD_puts@str
  3643  006E  3089               	movlw	high (STR_15| (0+32768))
  3644  006F  00F7               	movwf	LCD_puts@str+1
  3645  0070  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3646  0075  28C3               	goto	l3220
  3647  0076                     l3206:
  3648  0076  3096               	movlw	low (STR_16| (0+32768))
  3649  0077  00F6               	movwf	LCD_puts@str
  3650  0078  3089               	movlw	high (STR_16| (0+32768))
  3651  0079  00F7               	movwf	LCD_puts@str+1
  3652  007A  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3653  007F  28C3               	goto	l3220
  3654  0080                     l3208:
  3655  0080  30B4               	movlw	low (STR_17| (0+32768))
  3656  0081  00F6               	movwf	LCD_puts@str
  3657  0082  3089               	movlw	high (STR_17| (0+32768))
  3658  0083  00F7               	movwf	LCD_puts@str+1
  3659  0084  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3660  0089  28C3               	goto	l3220
  3661  008A                     l3210:
  3662  008A  30AA               	movlw	low (STR_18| (0+32768))
  3663  008B  00F6               	movwf	LCD_puts@str
  3664  008C  3089               	movlw	high (STR_18| (0+32768))
  3665  008D  00F7               	movwf	LCD_puts@str+1
  3666  008E  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3667  0093  28C3               	goto	l3220
  3668  0094                     l3212:
  3669  0094  3078               	movlw	low (STR_19| (0+32768))
  3670  0095  00F6               	movwf	LCD_puts@str
  3671  0096  3089               	movlw	high (STR_19| (0+32768))
  3672  0097  00F7               	movwf	LCD_puts@str+1
  3673  0098  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3674  009D  28C3               	goto	l3220
  3675  009E                     l3214:
  3676  009E  30A0               	movlw	low (STR_20| (0+32768))
  3677  009F  00F6               	movwf	LCD_puts@str
  3678  00A0  3089               	movlw	high (STR_20| (0+32768))
  3679  00A1  00F7               	movwf	LCD_puts@str+1
  3680  00A2  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  3681  00A7  28C3               	goto	l3220
  3682  00A8                     l3218:
  3683                           
  3684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3685                           ; Switch size 1, requested type "simple"
  3686                           ; Number of cases is 1, Range of values is 0 to 0
  3687                           ; switch strategies available:
  3688                           ; Name         Instructions Cycles
  3689                           ; simple_byte            4     3 (average)
  3690                           ; direct_byte           11     8 (fixed)
  3691                           ; jumptable            260     6 (fixed)
  3692                           ;	Chosen strategy is simple_byte
  3693  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  3694  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  3695  00AA  0867               	movf	_thu+1,w
  3696  00AB  3A00               	xorlw	0	; case 0
  3697  00AC  1903               	skipnz
  3698  00AD  28AF               	goto	l3966
  3699  00AE  289E               	goto	l3214
  3700  00AF                     l3966:
  3701                           
  3702                           ; Switch size 1, requested type "simple"
  3703                           ; Number of cases is 6, Range of values is 1 to 6
  3704                           ; switch strategies available:
  3705                           ; Name         Instructions Cycles
  3706                           ; simple_byte           19    10 (average)
  3707                           ; direct_byte           29    11 (fixed)
  3708                           ; jumptable            263     9 (fixed)
  3709                           ;	Chosen strategy is simple_byte
  3710  00AF  0866               	movf	_thu,w
  3711  00B0  3A01               	xorlw	1	; case 1
  3712  00B1  1903               	skipnz
  3713  00B2  2862               	goto	l3202
  3714  00B3  3A03               	xorlw	3	; case 2
  3715  00B4  1903               	skipnz
  3716  00B5  286C               	goto	l3204
  3717  00B6  3A01               	xorlw	1	; case 3
  3718  00B7  1903               	skipnz
  3719  00B8  2876               	goto	l3206
  3720  00B9  3A07               	xorlw	7	; case 4
  3721  00BA  1903               	skipnz
  3722  00BB  2880               	goto	l3208
  3723  00BC  3A01               	xorlw	1	; case 5
  3724  00BD  1903               	skipnz
  3725  00BE  288A               	goto	l3210
  3726  00BF  3A03               	xorlw	3	; case 6
  3727  00C0  1903               	skipnz
  3728  00C1  2894               	goto	l3212
  3729  00C2  289E               	goto	l3214
  3730  00C3                     l3220:
  3731                           
  3732                           ;RTC.c: 321:     SetDate(thu, ngay, thang, namch*10+namdv);
  3733  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  3734  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  3735  00C5  0864               	movf	_ngay,w
  3736  00C6  00CA               	movwf	??_SetThu
  3737  00C7  084A               	movf	??_SetThu,w
  3738  00C8  00C6               	movwf	SetDate@ng
  3739  00C9  0862               	movf	_thang,w
  3740  00CA  00CB               	movwf	??_SetThu+1
  3741  00CB  084B               	movf	??_SetThu+1,w
  3742  00CC  00C7               	movwf	SetDate@tha
  3743  00CD  300A               	movlw	10
  3744  00CE  00CC               	movwf	??_SetThu+2
  3745  00CF  084C               	movf	??_SetThu+2,w
  3746  00D0  00F0               	movwf	___bmul@multiplicand
  3747  00D1  0834               	movf	_namch,w
  3748  00D2  160A  118A  2287  120A  118A  	fcall	___bmul
  3749  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  3750  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  3751  00D9  0736               	addwf	_namdv,w
  3752  00DA  00CD               	movwf	??_SetThu+3
  3753  00DB  084D               	movf	??_SetThu+3,w
  3754  00DC  00C8               	movwf	SetDate@nm
  3755  00DD  0866               	movf	_thu,w
  3756  00DE  160A  118A  23A0  120A  118A  	fcall	_SetDate
  3757  00E3                     l178:
  3758  00E3  0008               	return
  3759  00E4                     __end_of_SetThu:
  3760                           
  3761                           	psect	text8
  3762  0DF5                     __ptext8:	
  3763 ;; *************** function _SetThang *****************
  3764 ;; Defined at:
  3765 ;;		line 339 in file "RTC.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3779 ;;      Params:         0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0
  3781 ;;      Temps:          0       4       0       0       0
  3782 ;;      Totals:         0       4       0       0       0
  3783 ;;Total ram usage:        4 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; Hardware stack levels required when called: 5
  3786 ;; This function calls:
  3787 ;;		_LCD_gotoxy
  3788 ;;		_LCD_int
  3789 ;;		_LCD_puts
  3790 ;;		_SetDate
  3791 ;;		___bmul
  3792 ;; This function is called by:
  3793 ;;		_Select_Menu
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function _SetThang
  3799  0DF5                     _SetThang:
  3800  0DF5                     l3264:	
  3801                           ;incstack = 0
  3802                           ; Regs used in _SetThang: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3803                           
  3804                           
  3805                           ;RTC.c: 341:     if (RB3 == 0) {while(RB3==0); thang = (thang==12?1:(thang+1));}
  3806  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  3808  0DF7  1986               	btfsc	6,3	;volatile
  3809  0DF8  2DFA               	goto	u2811
  3810  0DF9  2DFB               	goto	u2810
  3811  0DFA                     u2811:
  3812  0DFA  2E13               	goto	l3274
  3813  0DFB                     u2810:
  3814  0DFB                     l201:
  3815  0DFB  1D86               	btfss	6,3	;volatile
  3816  0DFC  2DFE               	goto	u2821
  3817  0DFD  2DFF               	goto	u2820
  3818  0DFE                     u2821:
  3819  0DFE  2DFB               	goto	l201
  3820  0DFF                     u2820:
  3821  0DFF                     l3268:
  3822  0DFF  300C               	movlw	12
  3823  0E00  0662               	xorwf	_thang,w
  3824  0E01  0463               	iorwf	_thang+1,w
  3825  0E02  1903               	btfsc	3,2
  3826  0E03  2E05               	goto	u2831
  3827  0E04  2E06               	goto	u2830
  3828  0E05                     u2831:
  3829  0E05  2E0F               	goto	l3272
  3830  0E06                     u2830:
  3831  0E06                     l3270:
  3832  0E06  0862               	movf	_thang,w
  3833  0E07  3E01               	addlw	1
  3834  0E08  00E2               	movwf	_thang
  3835  0E09  0863               	movf	_thang+1,w
  3836  0E0A  1803               	skipnc
  3837  0E0B  3E01               	addlw	1
  3838  0E0C  3E00               	addlw	0
  3839  0E0D  00E3               	movwf	_thang+1
  3840  0E0E  2E13               	goto	l3274
  3841  0E0F                     l3272:
  3842  0E0F  3001               	movlw	1
  3843  0E10  00E2               	movwf	_thang
  3844  0E11  3000               	movlw	0
  3845  0E12  00E3               	movwf	_thang+1
  3846  0E13                     l3274:
  3847                           
  3848                           ;RTC.c: 342:     if (RB4 == 0) {while(RB4==0); thang = (thang==1?12:(thang-1));}
  3849  0E13  1A06               	btfsc	6,4	;volatile
  3850  0E14  2E16               	goto	u2841
  3851  0E15  2E17               	goto	u2840
  3852  0E16                     u2841:
  3853  0E16  2E2E               	goto	l3284
  3854  0E17                     u2840:
  3855  0E17                     l209:
  3856  0E17  1E06               	btfss	6,4	;volatile
  3857  0E18  2E1A               	goto	u2851
  3858  0E19  2E1B               	goto	u2850
  3859  0E1A                     u2851:
  3860  0E1A  2E17               	goto	l209
  3861  0E1B                     u2850:
  3862  0E1B                     l3278:
  3863  0E1B  0362               	decf	_thang,w
  3864  0E1C  0463               	iorwf	_thang+1,w
  3865  0E1D  1903               	btfsc	3,2
  3866  0E1E  2E20               	goto	u2861
  3867  0E1F  2E21               	goto	u2860
  3868  0E20                     u2861:
  3869  0E20  2E2A               	goto	l3282
  3870  0E21                     u2860:
  3871  0E21                     l3280:
  3872  0E21  0862               	movf	_thang,w
  3873  0E22  3EFF               	addlw	255
  3874  0E23  00E2               	movwf	_thang
  3875  0E24  0863               	movf	_thang+1,w
  3876  0E25  1803               	skipnc
  3877  0E26  3E01               	addlw	1
  3878  0E27  3EFF               	addlw	255
  3879  0E28  00E3               	movwf	_thang+1
  3880  0E29  2E2E               	goto	l3284
  3881  0E2A                     l3282:
  3882  0E2A  300C               	movlw	12
  3883  0E2B  00E2               	movwf	_thang
  3884  0E2C  3000               	movlw	0
  3885  0E2D  00E3               	movwf	_thang+1
  3886  0E2E                     l3284:
  3887                           
  3888                           ;RTC.c: 343:     LCD_gotoxy(1,1);
  3889  0E2E  01F6               	clrf	LCD_gotoxy@y
  3890  0E2F  0AF6               	incf	LCD_gotoxy@y,f
  3891  0E30  3001               	movlw	1
  3892  0E31  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  3893  0E36                     l3286:
  3894                           
  3895                           ;RTC.c: 344:     LCD_puts("  CAI DAT THANG  ");
  3896  0E36  305F               	movlw	low (STR_24| (0+32768))
  3897  0E37  00F6               	movwf	LCD_puts@str
  3898  0E38  3088               	movlw	high (STR_24| (0+32768))
  3899  0E39  00F7               	movwf	LCD_puts@str+1
  3900  0E3A  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  3901  0E3F                     l3288:
  3902                           
  3903                           ;RTC.c: 345:     LCD_gotoxy(2,1);
  3904  0E3F  01F6               	clrf	LCD_gotoxy@y
  3905  0E40  0AF6               	incf	LCD_gotoxy@y,f
  3906  0E41  3002               	movlw	2
  3907  0E42  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  3908  0E47                     l3290:
  3909                           
  3910                           ;RTC.c: 346:     LCD_puts("   THANG: ");
  3911  0E47  302B               	movlw	low (STR_25| (0+32768))
  3912  0E48  00F6               	movwf	LCD_puts@str
  3913  0E49  3089               	movlw	high (STR_25| (0+32768))
  3914  0E4A  00F7               	movwf	LCD_puts@str+1
  3915  0E4B  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  3916  0E50                     l3292:
  3917                           
  3918                           ;RTC.c: 347:     LCD_gotoxy(2,11);
  3919  0E50  300B               	movlw	11
  3920  0E51  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0E52  1303               	bcf	3,6	;RP1=0, select bank0
  3922  0E53  00CB               	movwf	??_SetThang
  3923  0E54  084B               	movf	??_SetThang,w
  3924  0E55  00F6               	movwf	LCD_gotoxy@y
  3925  0E56  3002               	movlw	2
  3926  0E57  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  3927  0E5C                     l3294:
  3928                           
  3929                           ;RTC.c: 348:     LCD_int(thang);
  3930  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  3932  0E5E  0863               	movf	_thang+1,w
  3933  0E5F  00F9               	movwf	LCD_int@value+1
  3934  0E60  0862               	movf	_thang,w
  3935  0E61  00F8               	movwf	LCD_int@value
  3936  0E62  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  3937  0E67                     l3296:
  3938                           
  3939                           ;RTC.c: 349:     LCD_gotoxy(2,13);
  3940  0E67  300D               	movlw	13
  3941  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0E6A  00CB               	movwf	??_SetThang
  3944  0E6B  084B               	movf	??_SetThang,w
  3945  0E6C  00F6               	movwf	LCD_gotoxy@y
  3946  0E6D  3002               	movlw	2
  3947  0E6E  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  3948  0E73                     l3298:
  3949                           
  3950                           ;RTC.c: 350:     LCD_puts("    ");
  3951  0E73  302C               	movlw	low ((STR_10+18)| (0+32768))
  3952  0E74  00F6               	movwf	LCD_puts@str
  3953  0E75  3088               	movlw	high ((STR_10+18)| (0+32768))
  3954  0E76  00F7               	movwf	LCD_puts@str+1
  3955  0E77  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  3956  0E7C                     l3300:
  3957                           
  3958                           ;RTC.c: 351:     SetDate(thu, ngay, thang, namch*10+namdv);
  3959  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  3960  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  3961  0E7E  0864               	movf	_ngay,w
  3962  0E7F  00CB               	movwf	??_SetThang
  3963  0E80  084B               	movf	??_SetThang,w
  3964  0E81  00C6               	movwf	SetDate@ng
  3965  0E82  0862               	movf	_thang,w
  3966  0E83  00CC               	movwf	??_SetThang+1
  3967  0E84  084C               	movf	??_SetThang+1,w
  3968  0E85  00C7               	movwf	SetDate@tha
  3969  0E86  300A               	movlw	10
  3970  0E87  00CD               	movwf	??_SetThang+2
  3971  0E88  084D               	movf	??_SetThang+2,w
  3972  0E89  00F0               	movwf	___bmul@multiplicand
  3973  0E8A  0834               	movf	_namch,w
  3974  0E8B  160A  118A  2287  120A  158A  	fcall	___bmul
  3975  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0E92  0736               	addwf	_namdv,w
  3978  0E93  00CE               	movwf	??_SetThang+3
  3979  0E94  084E               	movf	??_SetThang+3,w
  3980  0E95  00C8               	movwf	SetDate@nm
  3981  0E96  0866               	movf	_thu,w
  3982  0E97  160A  118A  23A0  120A  158A  	fcall	_SetDate
  3983  0E9C                     l216:
  3984  0E9C  0008               	return
  3985  0E9D                     __end_of_SetThang:
  3986                           
  3987                           	psect	text9
  3988  0ACD                     __ptext9:	
  3989 ;; *************** function _SetPhut *****************
  3990 ;; Defined at:
  3991 ;;		line 399 in file "RTC.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0
  4007 ;;      Temps:          0       2       0       0       0
  4008 ;;      Totals:         0       2       0       0       0
  4009 ;;Total ram usage:        2 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 5
  4012 ;; This function calls:
  4013 ;;		_LCD_gotoxy
  4014 ;;		_LCD_int
  4015 ;;		_LCD_puts
  4016 ;;		_SetTime
  4017 ;; This function is called by:
  4018 ;;		_Select_Menu
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           
  4023                           ;psect for function _SetPhut
  4024  0ACD                     _SetPhut:
  4025  0ACD                     l3416:	
  4026                           ;incstack = 0
  4027                           ; Regs used in _SetPhut: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4028                           
  4029                           
  4030                           ;RTC.c: 401:     if (RB3 == 0) {while(RB3==0); phut = (phut==59?0:(phut+1));}
  4031  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  4032  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  4033  0ACF  1986               	btfsc	6,3	;volatile
  4034  0AD0  2AD2               	goto	u3051
  4035  0AD1  2AD3               	goto	u3050
  4036  0AD2                     u3051:
  4037  0AD2  2AE9               	goto	l3426
  4038  0AD3                     u3050:
  4039  0AD3                     l277:
  4040  0AD3  1D86               	btfss	6,3	;volatile
  4041  0AD4  2AD6               	goto	u3061
  4042  0AD5  2AD7               	goto	u3060
  4043  0AD6                     u3061:
  4044  0AD6  2AD3               	goto	l277
  4045  0AD7                     u3060:
  4046  0AD7                     l3420:
  4047  0AD7  303B               	movlw	59
  4048  0AD8  0630               	xorwf	_phut,w
  4049  0AD9  0431               	iorwf	_phut+1,w
  4050  0ADA  1903               	btfsc	3,2
  4051  0ADB  2ADD               	goto	u3071
  4052  0ADC  2ADE               	goto	u3070
  4053  0ADD                     u3071:
  4054  0ADD  2AE7               	goto	l3424
  4055  0ADE                     u3070:
  4056  0ADE                     l3422:
  4057  0ADE  0830               	movf	_phut,w
  4058  0ADF  3E01               	addlw	1
  4059  0AE0  00B0               	movwf	_phut
  4060  0AE1  0831               	movf	_phut+1,w
  4061  0AE2  1803               	skipnc
  4062  0AE3  3E01               	addlw	1
  4063  0AE4  3E00               	addlw	0
  4064  0AE5  00B1               	movwf	_phut+1
  4065  0AE6  2AE9               	goto	l3426
  4066  0AE7                     l3424:
  4067  0AE7  01B0               	clrf	_phut
  4068  0AE8  01B1               	clrf	_phut+1
  4069  0AE9                     l3426:
  4070                           
  4071                           ;RTC.c: 402:     if (RB4 == 0) {while(RB4==0); phut = (phut==0?59:(phut-1));}
  4072  0AE9  1A06               	btfsc	6,4	;volatile
  4073  0AEA  2AEC               	goto	u3081
  4074  0AEB  2AED               	goto	u3080
  4075  0AEC                     u3081:
  4076  0AEC  2B04               	goto	l3436
  4077  0AED                     u3080:
  4078  0AED                     l285:
  4079  0AED  1E06               	btfss	6,4	;volatile
  4080  0AEE  2AF0               	goto	u3091
  4081  0AEF  2AF1               	goto	u3090
  4082  0AF0                     u3091:
  4083  0AF0  2AED               	goto	l285
  4084  0AF1                     u3090:
  4085  0AF1                     l3430:
  4086  0AF1  0830               	movf	_phut,w
  4087  0AF2  0431               	iorwf	_phut+1,w
  4088  0AF3  1903               	btfsc	3,2
  4089  0AF4  2AF6               	goto	u3101
  4090  0AF5  2AF7               	goto	u3100
  4091  0AF6                     u3101:
  4092  0AF6  2B00               	goto	l3434
  4093  0AF7                     u3100:
  4094  0AF7                     l3432:
  4095  0AF7  0830               	movf	_phut,w
  4096  0AF8  3EFF               	addlw	255
  4097  0AF9  00B0               	movwf	_phut
  4098  0AFA  0831               	movf	_phut+1,w
  4099  0AFB  1803               	skipnc
  4100  0AFC  3E01               	addlw	1
  4101  0AFD  3EFF               	addlw	255
  4102  0AFE  00B1               	movwf	_phut+1
  4103  0AFF  2B04               	goto	l3436
  4104  0B00                     l3434:
  4105  0B00  303B               	movlw	59
  4106  0B01  00B0               	movwf	_phut
  4107  0B02  3000               	movlw	0
  4108  0B03  00B1               	movwf	_phut+1
  4109  0B04                     l3436:
  4110                           
  4111                           ;RTC.c: 403:     LCD_gotoxy(1,1);
  4112  0B04  01F6               	clrf	LCD_gotoxy@y
  4113  0B05  0AF6               	incf	LCD_gotoxy@y,f
  4114  0B06  3001               	movlw	1
  4115  0B07  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4116  0B0C                     l3438:
  4117                           
  4118                           ;RTC.c: 404:     LCD_puts("  CAI DAT PHUT  ");
  4119  0B0C  30C7               	movlw	low (STR_36| (0+32768))
  4120  0B0D  00F6               	movwf	LCD_puts@str
  4121  0B0E  3088               	movlw	high (STR_36| (0+32768))
  4122  0B0F  00F7               	movwf	LCD_puts@str+1
  4123  0B10  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4124  0B15                     l3440:
  4125                           
  4126                           ;RTC.c: 405:     LCD_gotoxy(2,1);
  4127  0B15  01F6               	clrf	LCD_gotoxy@y
  4128  0B16  0AF6               	incf	LCD_gotoxy@y,f
  4129  0B17  3002               	movlw	2
  4130  0B18  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4131  0B1D                     l3442:
  4132                           
  4133                           ;RTC.c: 406:     LCD_puts("    PHUT: ");
  4134  0B1D  304C               	movlw	low (STR_37| (0+32768))
  4135  0B1E  00F6               	movwf	LCD_puts@str
  4136  0B1F  3089               	movlw	high (STR_37| (0+32768))
  4137  0B20  00F7               	movwf	LCD_puts@str+1
  4138  0B21  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4139  0B26                     l3444:
  4140                           
  4141                           ;RTC.c: 407:     LCD_gotoxy(2,11);
  4142  0B26  300B               	movlw	11
  4143  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  4144  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  4145  0B29  00CB               	movwf	??_SetPhut
  4146  0B2A  084B               	movf	??_SetPhut,w
  4147  0B2B  00F6               	movwf	LCD_gotoxy@y
  4148  0B2C  3002               	movlw	2
  4149  0B2D  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4150  0B32                     l3446:
  4151                           
  4152                           ;RTC.c: 408:     LCD_int(phut);
  4153  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  4154  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  4155  0B34  0831               	movf	_phut+1,w
  4156  0B35  00F9               	movwf	LCD_int@value+1
  4157  0B36  0830               	movf	_phut,w
  4158  0B37  00F8               	movwf	LCD_int@value
  4159  0B38  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  4160  0B3D                     l3448:
  4161                           
  4162                           ;RTC.c: 409:     LCD_gotoxy(2,13);
  4163  0B3D  300D               	movlw	13
  4164  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0B40  00CB               	movwf	??_SetPhut
  4167  0B41  084B               	movf	??_SetPhut,w
  4168  0B42  00F6               	movwf	LCD_gotoxy@y
  4169  0B43  3002               	movlw	2
  4170  0B44  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4171  0B49                     l3450:
  4172                           
  4173                           ;RTC.c: 410:     LCD_puts("    ");
  4174  0B49  302C               	movlw	low ((STR_10+18)| (0+32768))
  4175  0B4A  00F6               	movwf	LCD_puts@str
  4176  0B4B  3088               	movlw	high ((STR_10+18)| (0+32768))
  4177  0B4C  00F7               	movwf	LCD_puts@str+1
  4178  0B4D  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4179  0B52                     l3452:
  4180                           
  4181                           ;RTC.c: 411:     SetTime(gio, phut, giay);
  4182  0B52  1283               	bcf	3,5	;RP0=0, select bank0
  4183  0B53  1303               	bcf	3,6	;RP1=0, select bank0
  4184  0B54  0830               	movf	_phut,w
  4185  0B55  00CB               	movwf	??_SetPhut
  4186  0B56  084B               	movf	??_SetPhut,w
  4187  0B57  00C6               	movwf	SetTime@ph
  4188  0B58  082E               	movf	_giay,w
  4189  0B59  00CC               	movwf	??_SetPhut+1
  4190  0B5A  084C               	movf	??_SetPhut+1,w
  4191  0B5B  00C7               	movwf	SetTime@gia
  4192  0B5C  0832               	movf	_gio,w
  4193  0B5D  160A  118A  2542  120A  158A  	fcall	_SetTime
  4194  0B62                     l292:
  4195  0B62  0008               	return
  4196  0B63                     __end_of_SetPhut:
  4197                           
  4198                           	psect	text10
  4199  0D4D                     __ptext10:	
  4200 ;; *************** function _SetNgay *****************
  4201 ;; Defined at:
  4202 ;;		line 324 in file "RTC.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         0       0       0       0       0
  4217 ;;      Locals:         0       0       0       0       0
  4218 ;;      Temps:          0       4       0       0       0
  4219 ;;      Totals:         0       4       0       0       0
  4220 ;;Total ram usage:        4 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 5
  4223 ;; This function calls:
  4224 ;;		_LCD_gotoxy
  4225 ;;		_LCD_int
  4226 ;;		_LCD_puts
  4227 ;;		_SetDate
  4228 ;;		___bmul
  4229 ;; This function is called by:
  4230 ;;		_Select_Menu
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _SetNgay
  4236  0D4D                     _SetNgay:
  4237  0D4D                     l3226:	
  4238                           ;incstack = 0
  4239                           ; Regs used in _SetNgay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4240                           
  4241                           
  4242                           ;RTC.c: 326:     if (RB3 == 0) {while(RB3==0); ngay = (ngay==31?1:(ngay+1));}
  4243  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0D4F  1986               	btfsc	6,3	;volatile
  4246  0D50  2D52               	goto	u2751
  4247  0D51  2D53               	goto	u2750
  4248  0D52                     u2751:
  4249  0D52  2D6B               	goto	l3236
  4250  0D53                     u2750:
  4251  0D53                     l182:
  4252  0D53  1D86               	btfss	6,3	;volatile
  4253  0D54  2D56               	goto	u2761
  4254  0D55  2D57               	goto	u2760
  4255  0D56                     u2761:
  4256  0D56  2D53               	goto	l182
  4257  0D57                     u2760:
  4258  0D57                     l3230:
  4259  0D57  301F               	movlw	31
  4260  0D58  0664               	xorwf	_ngay,w
  4261  0D59  0465               	iorwf	_ngay+1,w
  4262  0D5A  1903               	btfsc	3,2
  4263  0D5B  2D5D               	goto	u2771
  4264  0D5C  2D5E               	goto	u2770
  4265  0D5D                     u2771:
  4266  0D5D  2D67               	goto	l3234
  4267  0D5E                     u2770:
  4268  0D5E                     l3232:
  4269  0D5E  0864               	movf	_ngay,w
  4270  0D5F  3E01               	addlw	1
  4271  0D60  00E4               	movwf	_ngay
  4272  0D61  0865               	movf	_ngay+1,w
  4273  0D62  1803               	skipnc
  4274  0D63  3E01               	addlw	1
  4275  0D64  3E00               	addlw	0
  4276  0D65  00E5               	movwf	_ngay+1
  4277  0D66  2D6B               	goto	l3236
  4278  0D67                     l3234:
  4279  0D67  3001               	movlw	1
  4280  0D68  00E4               	movwf	_ngay
  4281  0D69  3000               	movlw	0
  4282  0D6A  00E5               	movwf	_ngay+1
  4283  0D6B                     l3236:
  4284                           
  4285                           ;RTC.c: 327:     if (RB4 == 0) {while(RB4==0); ngay = (ngay==1?31:(ngay-1));}
  4286  0D6B  1A06               	btfsc	6,4	;volatile
  4287  0D6C  2D6E               	goto	u2781
  4288  0D6D  2D6F               	goto	u2780
  4289  0D6E                     u2781:
  4290  0D6E  2D86               	goto	l3246
  4291  0D6F                     u2780:
  4292  0D6F                     l190:
  4293  0D6F  1E06               	btfss	6,4	;volatile
  4294  0D70  2D72               	goto	u2791
  4295  0D71  2D73               	goto	u2790
  4296  0D72                     u2791:
  4297  0D72  2D6F               	goto	l190
  4298  0D73                     u2790:
  4299  0D73                     l3240:
  4300  0D73  0364               	decf	_ngay,w
  4301  0D74  0465               	iorwf	_ngay+1,w
  4302  0D75  1903               	btfsc	3,2
  4303  0D76  2D78               	goto	u2801
  4304  0D77  2D79               	goto	u2800
  4305  0D78                     u2801:
  4306  0D78  2D82               	goto	l3244
  4307  0D79                     u2800:
  4308  0D79                     l3242:
  4309  0D79  0864               	movf	_ngay,w
  4310  0D7A  3EFF               	addlw	255
  4311  0D7B  00E4               	movwf	_ngay
  4312  0D7C  0865               	movf	_ngay+1,w
  4313  0D7D  1803               	skipnc
  4314  0D7E  3E01               	addlw	1
  4315  0D7F  3EFF               	addlw	255
  4316  0D80  00E5               	movwf	_ngay+1
  4317  0D81  2D86               	goto	l3246
  4318  0D82                     l3244:
  4319  0D82  301F               	movlw	31
  4320  0D83  00E4               	movwf	_ngay
  4321  0D84  3000               	movlw	0
  4322  0D85  00E5               	movwf	_ngay+1
  4323  0D86                     l3246:
  4324                           
  4325                           ;RTC.c: 328:     LCD_gotoxy(1,1);
  4326  0D86  01F6               	clrf	LCD_gotoxy@y
  4327  0D87  0AF6               	incf	LCD_gotoxy@y,f
  4328  0D88  3001               	movlw	1
  4329  0D89  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4330  0D8E                     l3248:
  4331                           
  4332                           ;RTC.c: 329:     LCD_puts("  CAI DAT NGAY  ");
  4333  0D8E  30D8               	movlw	low (STR_21| (0+32768))
  4334  0D8F  00F6               	movwf	LCD_puts@str
  4335  0D90  3088               	movlw	high (STR_21| (0+32768))
  4336  0D91  00F7               	movwf	LCD_puts@str+1
  4337  0D92  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4338  0D97                     l3250:
  4339                           
  4340                           ;RTC.c: 330:     LCD_gotoxy(2,1);
  4341  0D97  01F6               	clrf	LCD_gotoxy@y
  4342  0D98  0AF6               	incf	LCD_gotoxy@y,f
  4343  0D99  3002               	movlw	2
  4344  0D9A  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4345  0D9F                     l3252:
  4346                           
  4347                           ;RTC.c: 331:     LCD_puts("    NGAY: ");
  4348  0D9F  3062               	movlw	low (STR_22| (0+32768))
  4349  0DA0  00F6               	movwf	LCD_puts@str
  4350  0DA1  3089               	movlw	high (STR_22| (0+32768))
  4351  0DA2  00F7               	movwf	LCD_puts@str+1
  4352  0DA3  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4353  0DA8                     l3254:
  4354                           
  4355                           ;RTC.c: 332:     LCD_gotoxy(2,11);
  4356  0DA8  300B               	movlw	11
  4357  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  4358  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  4359  0DAB  00CB               	movwf	??_SetNgay
  4360  0DAC  084B               	movf	??_SetNgay,w
  4361  0DAD  00F6               	movwf	LCD_gotoxy@y
  4362  0DAE  3002               	movlw	2
  4363  0DAF  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4364  0DB4                     l3256:
  4365                           
  4366                           ;RTC.c: 333:     LCD_int(ngay);
  4367  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  4369  0DB6  0865               	movf	_ngay+1,w
  4370  0DB7  00F9               	movwf	LCD_int@value+1
  4371  0DB8  0864               	movf	_ngay,w
  4372  0DB9  00F8               	movwf	LCD_int@value
  4373  0DBA  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  4374  0DBF                     l3258:
  4375                           
  4376                           ;RTC.c: 334:     LCD_gotoxy(2,13);
  4377  0DBF  300D               	movlw	13
  4378  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  4379  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  4380  0DC2  00CB               	movwf	??_SetNgay
  4381  0DC3  084B               	movf	??_SetNgay,w
  4382  0DC4  00F6               	movwf	LCD_gotoxy@y
  4383  0DC5  3002               	movlw	2
  4384  0DC6  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4385  0DCB                     l3260:
  4386                           
  4387                           ;RTC.c: 335:     LCD_puts("     ");
  4388  0DCB  302B               	movlw	low ((STR_10+17)| (0+32768))
  4389  0DCC  00F6               	movwf	LCD_puts@str
  4390  0DCD  3088               	movlw	high ((STR_10+17)| (0+32768))
  4391  0DCE  00F7               	movwf	LCD_puts@str+1
  4392  0DCF  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4393  0DD4                     l3262:
  4394                           
  4395                           ;RTC.c: 336:     SetDate(thu, ngay, thang, namch*10+namdv);
  4396  0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  4398  0DD6  0864               	movf	_ngay,w
  4399  0DD7  00CB               	movwf	??_SetNgay
  4400  0DD8  084B               	movf	??_SetNgay,w
  4401  0DD9  00C6               	movwf	SetDate@ng
  4402  0DDA  0862               	movf	_thang,w
  4403  0DDB  00CC               	movwf	??_SetNgay+1
  4404  0DDC  084C               	movf	??_SetNgay+1,w
  4405  0DDD  00C7               	movwf	SetDate@tha
  4406  0DDE  300A               	movlw	10
  4407  0DDF  00CD               	movwf	??_SetNgay+2
  4408  0DE0  084D               	movf	??_SetNgay+2,w
  4409  0DE1  00F0               	movwf	___bmul@multiplicand
  4410  0DE2  0834               	movf	_namch,w
  4411  0DE3  160A  118A  2287  120A  158A  	fcall	___bmul
  4412  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0DEA  0736               	addwf	_namdv,w
  4415  0DEB  00CE               	movwf	??_SetNgay+3
  4416  0DEC  084E               	movf	??_SetNgay+3,w
  4417  0DED  00C8               	movwf	SetDate@nm
  4418  0DEE  0866               	movf	_thu,w
  4419  0DEF  160A  118A  23A0  120A  158A  	fcall	_SetDate
  4420  0DF4                     l197:
  4421  0DF4  0008               	return
  4422  0DF5                     __end_of_SetNgay:
  4423                           
  4424                           	psect	text11
  4425  0CA7                     __ptext11:	
  4426 ;; *************** function _SetNamdv *****************
  4427 ;; Defined at:
  4428 ;;		line 369 in file "RTC.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4442 ;;      Params:         0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0
  4444 ;;      Temps:          0       4       0       0       0
  4445 ;;      Totals:         0       4       0       0       0
  4446 ;;Total ram usage:        4 bytes
  4447 ;; Hardware stack levels used: 1
  4448 ;; Hardware stack levels required when called: 5
  4449 ;; This function calls:
  4450 ;;		_LCD_gotoxy
  4451 ;;		_LCD_int
  4452 ;;		_LCD_puts
  4453 ;;		_SetDate
  4454 ;;		___bmul
  4455 ;; This function is called by:
  4456 ;;		_Select_Menu
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function _SetNamdv
  4462  0CA7                     _SetNamdv:
  4463  0CA7                     l3340:	
  4464                           ;incstack = 0
  4465                           ; Regs used in _SetNamdv: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4466                           
  4467                           
  4468                           ;RTC.c: 371:     if (RB3 == 0) {while(RB3==0); namdv = (namdv==9?0:(namdv+1));}
  4469  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0CA9  1986               	btfsc	6,3	;volatile
  4472  0CAA  2CAC               	goto	u2931
  4473  0CAB  2CAD               	goto	u2930
  4474  0CAC                     u2931:
  4475  0CAC  2CC3               	goto	l3350
  4476  0CAD                     u2930:
  4477  0CAD                     l239:
  4478  0CAD  1D86               	btfss	6,3	;volatile
  4479  0CAE  2CB0               	goto	u2941
  4480  0CAF  2CB1               	goto	u2940
  4481  0CB0                     u2941:
  4482  0CB0  2CAD               	goto	l239
  4483  0CB1                     u2940:
  4484  0CB1                     l3344:
  4485  0CB1  3009               	movlw	9
  4486  0CB2  0636               	xorwf	_namdv,w
  4487  0CB3  0437               	iorwf	_namdv+1,w
  4488  0CB4  1903               	btfsc	3,2
  4489  0CB5  2CB7               	goto	u2951
  4490  0CB6  2CB8               	goto	u2950
  4491  0CB7                     u2951:
  4492  0CB7  2CC1               	goto	l3348
  4493  0CB8                     u2950:
  4494  0CB8                     l3346:
  4495  0CB8  0836               	movf	_namdv,w
  4496  0CB9  3E01               	addlw	1
  4497  0CBA  00B6               	movwf	_namdv
  4498  0CBB  0837               	movf	_namdv+1,w
  4499  0CBC  1803               	skipnc
  4500  0CBD  3E01               	addlw	1
  4501  0CBE  3E00               	addlw	0
  4502  0CBF  00B7               	movwf	_namdv+1
  4503  0CC0  2CC3               	goto	l3350
  4504  0CC1                     l3348:
  4505  0CC1  01B6               	clrf	_namdv
  4506  0CC2  01B7               	clrf	_namdv+1
  4507  0CC3                     l3350:
  4508                           
  4509                           ;RTC.c: 372:     if (RB4 == 0) {while(RB4==0); namdv = (namdv==0?9:(namdv-1));}
  4510  0CC3  1A06               	btfsc	6,4	;volatile
  4511  0CC4  2CC6               	goto	u2961
  4512  0CC5  2CC7               	goto	u2960
  4513  0CC6                     u2961:
  4514  0CC6  2CDE               	goto	l3360
  4515  0CC7                     u2960:
  4516  0CC7                     l247:
  4517  0CC7  1E06               	btfss	6,4	;volatile
  4518  0CC8  2CCA               	goto	u2971
  4519  0CC9  2CCB               	goto	u2970
  4520  0CCA                     u2971:
  4521  0CCA  2CC7               	goto	l247
  4522  0CCB                     u2970:
  4523  0CCB                     l3354:
  4524  0CCB  0836               	movf	_namdv,w
  4525  0CCC  0437               	iorwf	_namdv+1,w
  4526  0CCD  1903               	btfsc	3,2
  4527  0CCE  2CD0               	goto	u2981
  4528  0CCF  2CD1               	goto	u2980
  4529  0CD0                     u2981:
  4530  0CD0  2CDA               	goto	l3358
  4531  0CD1                     u2980:
  4532  0CD1                     l3356:
  4533  0CD1  0836               	movf	_namdv,w
  4534  0CD2  3EFF               	addlw	255
  4535  0CD3  00B6               	movwf	_namdv
  4536  0CD4  0837               	movf	_namdv+1,w
  4537  0CD5  1803               	skipnc
  4538  0CD6  3E01               	addlw	1
  4539  0CD7  3EFF               	addlw	255
  4540  0CD8  00B7               	movwf	_namdv+1
  4541  0CD9  2CDE               	goto	l3360
  4542  0CDA                     l3358:
  4543  0CDA  3009               	movlw	9
  4544  0CDB  00B6               	movwf	_namdv
  4545  0CDC  3000               	movlw	0
  4546  0CDD  00B7               	movwf	_namdv+1
  4547  0CDE                     l3360:
  4548                           
  4549                           ;RTC.c: 373:     LCD_gotoxy(1,1);
  4550  0CDE  01F6               	clrf	LCD_gotoxy@y
  4551  0CDF  0AF6               	incf	LCD_gotoxy@y,f
  4552  0CE0  3001               	movlw	1
  4553  0CE1  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4554  0CE6                     l3362:
  4555                           
  4556                           ;RTC.c: 374:     LCD_puts("  CAI DAT NAM  ");
  4557  0CE6  300B               	movlw	low (STR_27| (0+32768))
  4558  0CE7  00F6               	movwf	LCD_puts@str
  4559  0CE8  3089               	movlw	high (STR_27| (0+32768))
  4560  0CE9  00F7               	movwf	LCD_puts@str+1
  4561  0CEA  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4562  0CEF                     l3364:
  4563                           
  4564                           ;RTC.c: 375:     LCD_gotoxy(2,1);
  4565  0CEF  01F6               	clrf	LCD_gotoxy@y
  4566  0CF0  0AF6               	incf	LCD_gotoxy@y,f
  4567  0CF1  3002               	movlw	2
  4568  0CF2  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4569  0CF7                     l3366:
  4570                           
  4571                           ;RTC.c: 376:     LCD_puts("   NAMDV: ");
  4572  0CF7  3057               	movlw	low (STR_31| (0+32768))
  4573  0CF8  00F6               	movwf	LCD_puts@str
  4574  0CF9  3089               	movlw	high (STR_31| (0+32768))
  4575  0CFA  00F7               	movwf	LCD_puts@str+1
  4576  0CFB  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4577  0D00                     l3368:
  4578                           
  4579                           ;RTC.c: 377:     LCD_gotoxy(2,11);
  4580  0D00  300B               	movlw	11
  4581  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0D03  00CB               	movwf	??_SetNamdv
  4584  0D04  084B               	movf	??_SetNamdv,w
  4585  0D05  00F6               	movwf	LCD_gotoxy@y
  4586  0D06  3002               	movlw	2
  4587  0D07  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4588  0D0C                     l3370:
  4589                           
  4590                           ;RTC.c: 378:     LCD_int(namdv);
  4591  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  4592  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  4593  0D0E  0837               	movf	_namdv+1,w
  4594  0D0F  00F9               	movwf	LCD_int@value+1
  4595  0D10  0836               	movf	_namdv,w
  4596  0D11  00F8               	movwf	LCD_int@value
  4597  0D12  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  4598  0D17                     l3372:
  4599                           
  4600                           ;RTC.c: 379:     LCD_gotoxy(2,13);
  4601  0D17  300D               	movlw	13
  4602  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  4603  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  4604  0D1A  00CB               	movwf	??_SetNamdv
  4605  0D1B  084B               	movf	??_SetNamdv,w
  4606  0D1C  00F6               	movwf	LCD_gotoxy@y
  4607  0D1D  3002               	movlw	2
  4608  0D1E  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4609  0D23                     l3374:
  4610                           
  4611                           ;RTC.c: 380:     LCD_puts("    ");
  4612  0D23  302C               	movlw	low ((STR_10+18)| (0+32768))
  4613  0D24  00F6               	movwf	LCD_puts@str
  4614  0D25  3088               	movlw	high ((STR_10+18)| (0+32768))
  4615  0D26  00F7               	movwf	LCD_puts@str+1
  4616  0D27  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4617  0D2C                     l3376:
  4618                           
  4619                           ;RTC.c: 381:     SetDate(thu, ngay, thang, namch*10+namdv);
  4620  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  4621  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  4622  0D2E  0864               	movf	_ngay,w
  4623  0D2F  00CB               	movwf	??_SetNamdv
  4624  0D30  084B               	movf	??_SetNamdv,w
  4625  0D31  00C6               	movwf	SetDate@ng
  4626  0D32  0862               	movf	_thang,w
  4627  0D33  00CC               	movwf	??_SetNamdv+1
  4628  0D34  084C               	movf	??_SetNamdv+1,w
  4629  0D35  00C7               	movwf	SetDate@tha
  4630  0D36  300A               	movlw	10
  4631  0D37  00CD               	movwf	??_SetNamdv+2
  4632  0D38  084D               	movf	??_SetNamdv+2,w
  4633  0D39  00F0               	movwf	___bmul@multiplicand
  4634  0D3A  0834               	movf	_namch,w
  4635  0D3B  160A  118A  2287  120A  158A  	fcall	___bmul
  4636  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  4637  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  4638  0D42  0736               	addwf	_namdv,w
  4639  0D43  00CE               	movwf	??_SetNamdv+3
  4640  0D44  084E               	movf	??_SetNamdv+3,w
  4641  0D45  00C8               	movwf	SetDate@nm
  4642  0D46  0866               	movf	_thu,w
  4643  0D47  160A  118A  23A0  120A  158A  	fcall	_SetDate
  4644  0D4C                     l254:
  4645  0D4C  0008               	return
  4646  0D4D                     __end_of_SetNamdv:
  4647                           
  4648                           	psect	text12
  4649  0C01                     __ptext12:	
  4650 ;; *************** function _SetNamchuc *****************
  4651 ;; Defined at:
  4652 ;;		line 354 in file "RTC.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4666 ;;      Params:         0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0
  4668 ;;      Temps:          0       4       0       0       0
  4669 ;;      Totals:         0       4       0       0       0
  4670 ;;Total ram usage:        4 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 5
  4673 ;; This function calls:
  4674 ;;		_LCD_gotoxy
  4675 ;;		_LCD_int
  4676 ;;		_LCD_puts
  4677 ;;		_SetDate
  4678 ;;		___bmul
  4679 ;; This function is called by:
  4680 ;;		_Select_Menu
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _SetNamchuc
  4686  0C01                     _SetNamchuc:
  4687  0C01                     l3302:	
  4688                           ;incstack = 0
  4689                           ; Regs used in _SetNamchuc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4690                           
  4691                           
  4692                           ;RTC.c: 356:     if (RB3 == 0) {while(RB3==0); namch = (namch==9?0:(namch+1));}
  4693  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  4694  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  4695  0C03  1986               	btfsc	6,3	;volatile
  4696  0C04  2C06               	goto	u2871
  4697  0C05  2C07               	goto	u2870
  4698  0C06                     u2871:
  4699  0C06  2C1D               	goto	l3312
  4700  0C07                     u2870:
  4701  0C07                     l220:
  4702  0C07  1D86               	btfss	6,3	;volatile
  4703  0C08  2C0A               	goto	u2881
  4704  0C09  2C0B               	goto	u2880
  4705  0C0A                     u2881:
  4706  0C0A  2C07               	goto	l220
  4707  0C0B                     u2880:
  4708  0C0B                     l3306:
  4709  0C0B  3009               	movlw	9
  4710  0C0C  0634               	xorwf	_namch,w
  4711  0C0D  0435               	iorwf	_namch+1,w
  4712  0C0E  1903               	btfsc	3,2
  4713  0C0F  2C11               	goto	u2891
  4714  0C10  2C12               	goto	u2890
  4715  0C11                     u2891:
  4716  0C11  2C1B               	goto	l3310
  4717  0C12                     u2890:
  4718  0C12                     l3308:
  4719  0C12  0834               	movf	_namch,w
  4720  0C13  3E01               	addlw	1
  4721  0C14  00B4               	movwf	_namch
  4722  0C15  0835               	movf	_namch+1,w
  4723  0C16  1803               	skipnc
  4724  0C17  3E01               	addlw	1
  4725  0C18  3E00               	addlw	0
  4726  0C19  00B5               	movwf	_namch+1
  4727  0C1A  2C1D               	goto	l3312
  4728  0C1B                     l3310:
  4729  0C1B  01B4               	clrf	_namch
  4730  0C1C  01B5               	clrf	_namch+1
  4731  0C1D                     l3312:
  4732                           
  4733                           ;RTC.c: 357:     if (RB4 == 0) {while(RB4==0); namch = (namch==0?9:(namch-1));}
  4734  0C1D  1A06               	btfsc	6,4	;volatile
  4735  0C1E  2C20               	goto	u2901
  4736  0C1F  2C21               	goto	u2900
  4737  0C20                     u2901:
  4738  0C20  2C38               	goto	l3322
  4739  0C21                     u2900:
  4740  0C21                     l228:
  4741  0C21  1E06               	btfss	6,4	;volatile
  4742  0C22  2C24               	goto	u2911
  4743  0C23  2C25               	goto	u2910
  4744  0C24                     u2911:
  4745  0C24  2C21               	goto	l228
  4746  0C25                     u2910:
  4747  0C25                     l3316:
  4748  0C25  0834               	movf	_namch,w
  4749  0C26  0435               	iorwf	_namch+1,w
  4750  0C27  1903               	btfsc	3,2
  4751  0C28  2C2A               	goto	u2921
  4752  0C29  2C2B               	goto	u2920
  4753  0C2A                     u2921:
  4754  0C2A  2C34               	goto	l3320
  4755  0C2B                     u2920:
  4756  0C2B                     l3318:
  4757  0C2B  0834               	movf	_namch,w
  4758  0C2C  3EFF               	addlw	255
  4759  0C2D  00B4               	movwf	_namch
  4760  0C2E  0835               	movf	_namch+1,w
  4761  0C2F  1803               	skipnc
  4762  0C30  3E01               	addlw	1
  4763  0C31  3EFF               	addlw	255
  4764  0C32  00B5               	movwf	_namch+1
  4765  0C33  2C38               	goto	l3322
  4766  0C34                     l3320:
  4767  0C34  3009               	movlw	9
  4768  0C35  00B4               	movwf	_namch
  4769  0C36  3000               	movlw	0
  4770  0C37  00B5               	movwf	_namch+1
  4771  0C38                     l3322:
  4772                           
  4773                           ;RTC.c: 358:     LCD_gotoxy(1,1);
  4774  0C38  01F6               	clrf	LCD_gotoxy@y
  4775  0C39  0AF6               	incf	LCD_gotoxy@y,f
  4776  0C3A  3001               	movlw	1
  4777  0C3B  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4778  0C40                     l3324:
  4779                           
  4780                           ;RTC.c: 359:     LCD_puts("  CAI DAT NAM  ");
  4781  0C40  300B               	movlw	low (STR_27| (0+32768))
  4782  0C41  00F6               	movwf	LCD_puts@str
  4783  0C42  3089               	movlw	high (STR_27| (0+32768))
  4784  0C43  00F7               	movwf	LCD_puts@str+1
  4785  0C44  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4786  0C49                     l3326:
  4787                           
  4788                           ;RTC.c: 360:     LCD_gotoxy(2,1);
  4789  0C49  01F6               	clrf	LCD_gotoxy@y
  4790  0C4A  0AF6               	incf	LCD_gotoxy@y,f
  4791  0C4B  3002               	movlw	2
  4792  0C4C  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4793  0C51                     l3328:
  4794                           
  4795                           ;RTC.c: 361:     LCD_puts("   NAMCH: ");
  4796  0C51  3036               	movlw	low (STR_28| (0+32768))
  4797  0C52  00F6               	movwf	LCD_puts@str
  4798  0C53  3089               	movlw	high (STR_28| (0+32768))
  4799  0C54  00F7               	movwf	LCD_puts@str+1
  4800  0C55  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4801  0C5A                     l3330:
  4802                           
  4803                           ;RTC.c: 362:     LCD_gotoxy(2,11);
  4804  0C5A  300B               	movlw	11
  4805  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0C5D  00CB               	movwf	??_SetNamchuc
  4808  0C5E  084B               	movf	??_SetNamchuc,w
  4809  0C5F  00F6               	movwf	LCD_gotoxy@y
  4810  0C60  3002               	movlw	2
  4811  0C61  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4812  0C66                     l3332:
  4813                           
  4814                           ;RTC.c: 363:     LCD_int(namch);
  4815  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  4816  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  4817  0C68  0835               	movf	_namch+1,w
  4818  0C69  00F9               	movwf	LCD_int@value+1
  4819  0C6A  0834               	movf	_namch,w
  4820  0C6B  00F8               	movwf	LCD_int@value
  4821  0C6C  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  4822  0C71                     l3334:
  4823                           
  4824                           ;RTC.c: 364:     LCD_gotoxy(2,13);
  4825  0C71  300D               	movlw	13
  4826  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0C74  00CB               	movwf	??_SetNamchuc
  4829  0C75  084B               	movf	??_SetNamchuc,w
  4830  0C76  00F6               	movwf	LCD_gotoxy@y
  4831  0C77  3002               	movlw	2
  4832  0C78  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  4833  0C7D                     l3336:
  4834                           
  4835                           ;RTC.c: 365:     LCD_puts("    ");
  4836  0C7D  302C               	movlw	low ((STR_10+18)| (0+32768))
  4837  0C7E  00F6               	movwf	LCD_puts@str
  4838  0C7F  3088               	movlw	high ((STR_10+18)| (0+32768))
  4839  0C80  00F7               	movwf	LCD_puts@str+1
  4840  0C81  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  4841  0C86                     l3338:
  4842                           
  4843                           ;RTC.c: 366:     SetDate(thu, ngay, thang, namch*10+namdv);
  4844  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  4845  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  4846  0C88  0864               	movf	_ngay,w
  4847  0C89  00CB               	movwf	??_SetNamchuc
  4848  0C8A  084B               	movf	??_SetNamchuc,w
  4849  0C8B  00C6               	movwf	SetDate@ng
  4850  0C8C  0862               	movf	_thang,w
  4851  0C8D  00CC               	movwf	??_SetNamchuc+1
  4852  0C8E  084C               	movf	??_SetNamchuc+1,w
  4853  0C8F  00C7               	movwf	SetDate@tha
  4854  0C90  300A               	movlw	10
  4855  0C91  00CD               	movwf	??_SetNamchuc+2
  4856  0C92  084D               	movf	??_SetNamchuc+2,w
  4857  0C93  00F0               	movwf	___bmul@multiplicand
  4858  0C94  0834               	movf	_namch,w
  4859  0C95  160A  118A  2287  120A  158A  	fcall	___bmul
  4860  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  4861  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  4862  0C9C  0736               	addwf	_namdv,w
  4863  0C9D  00CE               	movwf	??_SetNamchuc+3
  4864  0C9E  084E               	movf	??_SetNamchuc+3,w
  4865  0C9F  00C8               	movwf	SetDate@nm
  4866  0CA0  0866               	movf	_thu,w
  4867  0CA1  160A  118A  23A0  120A  158A  	fcall	_SetDate
  4868  0CA6                     l235:
  4869  0CA6  0008               	return
  4870  0CA7                     __end_of_SetNamchuc:
  4871                           
  4872                           	psect	text13
  4873  1287                     __ptext13:	
  4874 ;; *************** function ___bmul *****************
  4875 ;; Defined at:
  4876 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  multiplier      1    wreg     unsigned char 
  4879 ;;  multiplicand    1    0[COMMON] unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  multiplier      1    3[COMMON] unsigned char 
  4882 ;;  product         1    2[COMMON] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      unsigned char 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4892 ;;      Params:         1       0       0       0       0
  4893 ;;      Locals:         2       0       0       0       0
  4894 ;;      Temps:          1       0       0       0       0
  4895 ;;      Totals:         4       0       0       0       0
  4896 ;;Total ram usage:        4 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_BCDtoDec
  4902 ;;		_SetThu
  4903 ;;		_SetNgay
  4904 ;;		_SetThang
  4905 ;;		_SetNamchuc
  4906 ;;		_SetNamdv
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function ___bmul
  4912  1287                     ___bmul:
  4913                           
  4914                           ;incstack = 0
  4915                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4916                           ;___bmul@multiplier stored from wreg
  4917  1287  00F3               	movwf	___bmul@multiplier
  4918  1288                     l3100:
  4919  1288  01F2               	clrf	___bmul@product
  4920  1289                     l3102:
  4921  1289  1C73               	btfss	___bmul@multiplier,0
  4922  128A  2A8C               	goto	u2631
  4923  128B  2A8D               	goto	u2630
  4924  128C                     u2631:
  4925  128C  2A91               	goto	l3106
  4926  128D                     u2630:
  4927  128D                     l3104:
  4928  128D  0870               	movf	___bmul@multiplicand,w
  4929  128E  00F1               	movwf	??___bmul
  4930  128F  0871               	movf	??___bmul,w
  4931  1290  07F2               	addwf	___bmul@product,f
  4932  1291                     l3106:
  4933  1291  1003               	clrc
  4934  1292  0DF0               	rlf	___bmul@multiplicand,f
  4935  1293                     l3108:
  4936  1293  1003               	clrc
  4937  1294  0CF3               	rrf	___bmul@multiplier,f
  4938  1295  0873               	movf	___bmul@multiplier,w
  4939  1296  1D03               	btfss	3,2
  4940  1297  2A99               	goto	u2641
  4941  1298  2A9A               	goto	u2640
  4942  1299                     u2641:
  4943  1299  2A89               	goto	l3102
  4944  129A                     u2640:
  4945  129A                     l3110:
  4946  129A  0872               	movf	___bmul@product,w
  4947  129B                     l723:
  4948  129B  0008               	return
  4949  129C                     __end_of___bmul:
  4950                           
  4951                           	psect	text14
  4952  13A0                     __ptext14:	
  4953 ;; *************** function _SetDate *****************
  4954 ;; Defined at:
  4955 ;;		line 252 in file "RTC.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  th              1    wreg     unsigned char 
  4958 ;;  ng              1    3[BANK0 ] unsigned char 
  4959 ;;  tha             1    4[BANK0 ] unsigned char 
  4960 ;;  nm              1    5[BANK0 ] unsigned char 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  th              1    6[BANK0 ] unsigned char 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4972 ;;      Params:         0       3       0       0       0
  4973 ;;      Locals:         0       1       0       0       0
  4974 ;;      Temps:          1       0       0       0       0
  4975 ;;      Totals:         1       4       0       0       0
  4976 ;;Total ram usage:        5 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 3
  4979 ;; This function calls:
  4980 ;;		_DecToBCD
  4981 ;;		_RTC_Set_DateTime
  4982 ;; This function is called by:
  4983 ;;		_SetThu
  4984 ;;		_SetNgay
  4985 ;;		_SetThang
  4986 ;;		_SetNamchuc
  4987 ;;		_SetNamdv
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           
  4992                           ;psect for function _SetDate
  4993  13A0                     _SetDate:
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _SetDate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4997                           ;SetDate@th stored from wreg
  4998  13A0  1283               	bcf	3,5	;RP0=0, select bank0
  4999  13A1  1303               	bcf	3,6	;RP1=0, select bank0
  5000  13A2  00C9               	movwf	SetDate@th
  5001  13A3                     l2930:
  5002                           
  5003                           ;RTC.c: 252: void SetDate(unsigned char th, unsigned char ng, unsigned char tha, unsigne
      +                          d char nm);RTC.c: 253: {;RTC.c: 254:     RTCbits.week = DecToBCD(th);
  5004  13A3  0849               	movf	SetDate@th,w
  5005  13A4  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5006  13A9  00FD               	movwf	??_SetDate
  5007  13AA  087D               	movf	??_SetDate,w
  5008  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  5009  13AC  1303               	bcf	3,6	;RP1=0, select bank0
  5010  13AD  00BF               	movwf	_RTCbits+3
  5011                           
  5012                           ;RTC.c: 255:     RTCbits.date = DecToBCD(ng);
  5013  13AE  0846               	movf	SetDate@ng,w
  5014  13AF  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5015  13B4  00FD               	movwf	??_SetDate
  5016  13B5  087D               	movf	??_SetDate,w
  5017  13B6  1283               	bcf	3,5	;RP0=0, select bank0
  5018  13B7  1303               	bcf	3,6	;RP1=0, select bank0
  5019  13B8  00C0               	movwf	_RTCbits+4
  5020                           
  5021                           ;RTC.c: 256:     RTCbits.month = DecToBCD(tha);
  5022  13B9  0847               	movf	SetDate@tha,w
  5023  13BA  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5024  13BF  00FD               	movwf	??_SetDate
  5025  13C0  087D               	movf	??_SetDate,w
  5026  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5027  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5028  13C3  00C1               	movwf	_RTCbits+5
  5029                           
  5030                           ;RTC.c: 257:     RTCbits.year = DecToBCD(nm);
  5031  13C4  0848               	movf	SetDate@nm,w
  5032  13C5  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5033  13CA  00FD               	movwf	??_SetDate
  5034  13CB  087D               	movf	??_SetDate,w
  5035  13CC  1283               	bcf	3,5	;RP0=0, select bank0
  5036  13CD  1303               	bcf	3,6	;RP1=0, select bank0
  5037  13CE  00C2               	movwf	_RTCbits+6
  5038  13CF                     l2932:
  5039                           
  5040                           ;RTC.c: 259:     RTC_Set_DateTime(&RTCbits);
  5041  13CF  303C               	movlw	(low (_RTCbits| 0))& (0+255)
  5042  13D0  160A  118A  24E6  160A  118A  	fcall	_RTC_Set_DateTime
  5043  13D5                     l133:
  5044  13D5  0008               	return
  5045  13D6                     __end_of_SetDate:
  5046                           
  5047                           	psect	text15
  5048  0A37                     __ptext15:	
  5049 ;; *************** function _SetGio *****************
  5050 ;; Defined at:
  5051 ;;		line 384 in file "RTC.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;		None
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5065 ;;      Params:         0       0       0       0       0
  5066 ;;      Locals:         0       0       0       0       0
  5067 ;;      Temps:          0       2       0       0       0
  5068 ;;      Totals:         0       2       0       0       0
  5069 ;;Total ram usage:        2 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; Hardware stack levels required when called: 5
  5072 ;; This function calls:
  5073 ;;		_LCD_gotoxy
  5074 ;;		_LCD_int
  5075 ;;		_LCD_puts
  5076 ;;		_SetTime
  5077 ;; This function is called by:
  5078 ;;		_Select_Menu
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           
  5083                           ;psect for function _SetGio
  5084  0A37                     _SetGio:
  5085  0A37                     l3378:	
  5086                           ;incstack = 0
  5087                           ; Regs used in _SetGio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5088                           
  5089                           
  5090                           ;RTC.c: 386:     if (RB3 == 0) {while(RB3==0); gio = (gio==23?0:(gio+1));}
  5091  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  5092  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  5093  0A39  1986               	btfsc	6,3	;volatile
  5094  0A3A  2A3C               	goto	u2991
  5095  0A3B  2A3D               	goto	u2990
  5096  0A3C                     u2991:
  5097  0A3C  2A53               	goto	l3388
  5098  0A3D                     u2990:
  5099  0A3D                     l258:
  5100  0A3D  1D86               	btfss	6,3	;volatile
  5101  0A3E  2A40               	goto	u3001
  5102  0A3F  2A41               	goto	u3000
  5103  0A40                     u3001:
  5104  0A40  2A3D               	goto	l258
  5105  0A41                     u3000:
  5106  0A41                     l3382:
  5107  0A41  3017               	movlw	23
  5108  0A42  0632               	xorwf	_gio,w
  5109  0A43  0433               	iorwf	_gio+1,w
  5110  0A44  1903               	btfsc	3,2
  5111  0A45  2A47               	goto	u3011
  5112  0A46  2A48               	goto	u3010
  5113  0A47                     u3011:
  5114  0A47  2A51               	goto	l3386
  5115  0A48                     u3010:
  5116  0A48                     l3384:
  5117  0A48  0832               	movf	_gio,w
  5118  0A49  3E01               	addlw	1
  5119  0A4A  00B2               	movwf	_gio
  5120  0A4B  0833               	movf	_gio+1,w
  5121  0A4C  1803               	skipnc
  5122  0A4D  3E01               	addlw	1
  5123  0A4E  3E00               	addlw	0
  5124  0A4F  00B3               	movwf	_gio+1
  5125  0A50  2A53               	goto	l3388
  5126  0A51                     l3386:
  5127  0A51  01B2               	clrf	_gio
  5128  0A52  01B3               	clrf	_gio+1
  5129  0A53                     l3388:
  5130                           
  5131                           ;RTC.c: 387:     if (RB4 == 0) {while(RB4==0); gio = (gio==0?23:(gio-1));}
  5132  0A53  1A06               	btfsc	6,4	;volatile
  5133  0A54  2A56               	goto	u3021
  5134  0A55  2A57               	goto	u3020
  5135  0A56                     u3021:
  5136  0A56  2A6E               	goto	l3398
  5137  0A57                     u3020:
  5138  0A57                     l266:
  5139  0A57  1E06               	btfss	6,4	;volatile
  5140  0A58  2A5A               	goto	u3031
  5141  0A59  2A5B               	goto	u3030
  5142  0A5A                     u3031:
  5143  0A5A  2A57               	goto	l266
  5144  0A5B                     u3030:
  5145  0A5B                     l3392:
  5146  0A5B  0832               	movf	_gio,w
  5147  0A5C  0433               	iorwf	_gio+1,w
  5148  0A5D  1903               	btfsc	3,2
  5149  0A5E  2A60               	goto	u3041
  5150  0A5F  2A61               	goto	u3040
  5151  0A60                     u3041:
  5152  0A60  2A6A               	goto	l3396
  5153  0A61                     u3040:
  5154  0A61                     l3394:
  5155  0A61  0832               	movf	_gio,w
  5156  0A62  3EFF               	addlw	255
  5157  0A63  00B2               	movwf	_gio
  5158  0A64  0833               	movf	_gio+1,w
  5159  0A65  1803               	skipnc
  5160  0A66  3E01               	addlw	1
  5161  0A67  3EFF               	addlw	255
  5162  0A68  00B3               	movwf	_gio+1
  5163  0A69  2A6E               	goto	l3398
  5164  0A6A                     l3396:
  5165  0A6A  3017               	movlw	23
  5166  0A6B  00B2               	movwf	_gio
  5167  0A6C  3000               	movlw	0
  5168  0A6D  00B3               	movwf	_gio+1
  5169  0A6E                     l3398:
  5170                           
  5171                           ;RTC.c: 388:     LCD_gotoxy(1,1);
  5172  0A6E  01F6               	clrf	LCD_gotoxy@y
  5173  0A6F  0AF6               	incf	LCD_gotoxy@y,f
  5174  0A70  3001               	movlw	1
  5175  0A71  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  5176  0A76                     l3400:
  5177                           
  5178                           ;RTC.c: 389:     LCD_puts("  CAI DAT GIO  ");
  5179  0A76  301B               	movlw	low (STR_33| (0+32768))
  5180  0A77  00F6               	movwf	LCD_puts@str
  5181  0A78  3089               	movlw	high (STR_33| (0+32768))
  5182  0A79  00F7               	movwf	LCD_puts@str+1
  5183  0A7A  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  5184  0A7F                     l3402:
  5185                           
  5186                           ;RTC.c: 390:     LCD_gotoxy(2,1);
  5187  0A7F  01F6               	clrf	LCD_gotoxy@y
  5188  0A80  0AF6               	incf	LCD_gotoxy@y,f
  5189  0A81  3002               	movlw	2
  5190  0A82  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  5191  0A87                     l3404:
  5192                           
  5193                           ;RTC.c: 391:     LCD_puts("     GIO: ");
  5194  0A87  3041               	movlw	low (STR_34| (0+32768))
  5195  0A88  00F6               	movwf	LCD_puts@str
  5196  0A89  3089               	movlw	high (STR_34| (0+32768))
  5197  0A8A  00F7               	movwf	LCD_puts@str+1
  5198  0A8B  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  5199  0A90                     l3406:
  5200                           
  5201                           ;RTC.c: 392:     LCD_gotoxy(2,11);
  5202  0A90  300B               	movlw	11
  5203  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  5204  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  5205  0A93  00CB               	movwf	??_SetGio
  5206  0A94  084B               	movf	??_SetGio,w
  5207  0A95  00F6               	movwf	LCD_gotoxy@y
  5208  0A96  3002               	movlw	2
  5209  0A97  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  5210  0A9C                     l3408:
  5211                           
  5212                           ;RTC.c: 393:     LCD_int(gio);
  5213  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  5214  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  5215  0A9E  0833               	movf	_gio+1,w
  5216  0A9F  00F9               	movwf	LCD_int@value+1
  5217  0AA0  0832               	movf	_gio,w
  5218  0AA1  00F8               	movwf	LCD_int@value
  5219  0AA2  120A  118A  20E4  120A  158A  	fcall	_LCD_int
  5220  0AA7                     l3410:
  5221                           
  5222                           ;RTC.c: 394:     LCD_gotoxy(2,13);
  5223  0AA7  300D               	movlw	13
  5224  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0AAA  00CB               	movwf	??_SetGio
  5227  0AAB  084B               	movf	??_SetGio,w
  5228  0AAC  00F6               	movwf	LCD_gotoxy@y
  5229  0AAD  3002               	movlw	2
  5230  0AAE  160A  118A  236A  120A  158A  	fcall	_LCD_gotoxy
  5231  0AB3                     l3412:
  5232                           
  5233                           ;RTC.c: 395:     LCD_puts("    ");
  5234  0AB3  302C               	movlw	low ((STR_10+18)| (0+32768))
  5235  0AB4  00F6               	movwf	LCD_puts@str
  5236  0AB5  3088               	movlw	high ((STR_10+18)| (0+32768))
  5237  0AB6  00F7               	movwf	LCD_puts@str+1
  5238  0AB7  160A  118A  244B  120A  158A  	fcall	_LCD_puts
  5239  0ABC                     l3414:
  5240                           
  5241                           ;RTC.c: 396:     SetTime(gio, phut, giay);
  5242  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  5244  0ABE  0830               	movf	_phut,w
  5245  0ABF  00CB               	movwf	??_SetGio
  5246  0AC0  084B               	movf	??_SetGio,w
  5247  0AC1  00C6               	movwf	SetTime@ph
  5248  0AC2  082E               	movf	_giay,w
  5249  0AC3  00CC               	movwf	??_SetGio+1
  5250  0AC4  084C               	movf	??_SetGio+1,w
  5251  0AC5  00C7               	movwf	SetTime@gia
  5252  0AC6  0832               	movf	_gio,w
  5253  0AC7  160A  118A  2542  120A  158A  	fcall	_SetTime
  5254  0ACC                     l273:
  5255  0ACC  0008               	return
  5256  0ACD                     __end_of_SetGio:
  5257                           
  5258                           	psect	text16
  5259  176A                     __ptext16:	
  5260 ;; *************** function _SetGiay *****************
  5261 ;; Defined at:
  5262 ;;		line 414 in file "RTC.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5276 ;;      Params:         0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0
  5278 ;;      Temps:          0       2       0       0       0
  5279 ;;      Totals:         0       2       0       0       0
  5280 ;;Total ram usage:        2 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 5
  5283 ;; This function calls:
  5284 ;;		_LCD_gotoxy
  5285 ;;		_LCD_int
  5286 ;;		_LCD_puts
  5287 ;;		_SetTime
  5288 ;; This function is called by:
  5289 ;;		_Select_Menu
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           
  5294                           ;psect for function _SetGiay
  5295  176A                     _SetGiay:
  5296  176A                     l3454:	
  5297                           ;incstack = 0
  5298                           ; Regs used in _SetGiay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5299                           
  5300                           
  5301                           ;RTC.c: 416:     if (RB3 == 0) {while(RB3==0); giay = (giay==59?0:(giay+1));}
  5302  176A  1283               	bcf	3,5	;RP0=0, select bank0
  5303  176B  1303               	bcf	3,6	;RP1=0, select bank0
  5304  176C  1986               	btfsc	6,3	;volatile
  5305  176D  2F6F               	goto	u3111
  5306  176E  2F70               	goto	u3110
  5307  176F                     u3111:
  5308  176F  2F86               	goto	l3464
  5309  1770                     u3110:
  5310  1770                     l296:
  5311  1770  1D86               	btfss	6,3	;volatile
  5312  1771  2F73               	goto	u3121
  5313  1772  2F74               	goto	u3120
  5314  1773                     u3121:
  5315  1773  2F70               	goto	l296
  5316  1774                     u3120:
  5317  1774                     l3458:
  5318  1774  303B               	movlw	59
  5319  1775  062E               	xorwf	_giay,w
  5320  1776  042F               	iorwf	_giay+1,w
  5321  1777  1903               	btfsc	3,2
  5322  1778  2F7A               	goto	u3131
  5323  1779  2F7B               	goto	u3130
  5324  177A                     u3131:
  5325  177A  2F84               	goto	l3462
  5326  177B                     u3130:
  5327  177B                     l3460:
  5328  177B  082E               	movf	_giay,w
  5329  177C  3E01               	addlw	1
  5330  177D  00AE               	movwf	_giay
  5331  177E  082F               	movf	_giay+1,w
  5332  177F  1803               	skipnc
  5333  1780  3E01               	addlw	1
  5334  1781  3E00               	addlw	0
  5335  1782  00AF               	movwf	_giay+1
  5336  1783  2F86               	goto	l3464
  5337  1784                     l3462:
  5338  1784  01AE               	clrf	_giay
  5339  1785  01AF               	clrf	_giay+1
  5340  1786                     l3464:
  5341                           
  5342                           ;RTC.c: 417:     if (RB4 == 0) {while(RB4==0); giay = (giay==0?59:(giay-1));}
  5343  1786  1A06               	btfsc	6,4	;volatile
  5344  1787  2F89               	goto	u3141
  5345  1788  2F8A               	goto	u3140
  5346  1789                     u3141:
  5347  1789  2FA1               	goto	l3474
  5348  178A                     u3140:
  5349  178A                     l304:
  5350  178A  1E06               	btfss	6,4	;volatile
  5351  178B  2F8D               	goto	u3151
  5352  178C  2F8E               	goto	u3150
  5353  178D                     u3151:
  5354  178D  2F8A               	goto	l304
  5355  178E                     u3150:
  5356  178E                     l3468:
  5357  178E  082E               	movf	_giay,w
  5358  178F  042F               	iorwf	_giay+1,w
  5359  1790  1903               	btfsc	3,2
  5360  1791  2F93               	goto	u3161
  5361  1792  2F94               	goto	u3160
  5362  1793                     u3161:
  5363  1793  2F9D               	goto	l3472
  5364  1794                     u3160:
  5365  1794                     l3470:
  5366  1794  082E               	movf	_giay,w
  5367  1795  3EFF               	addlw	255
  5368  1796  00AE               	movwf	_giay
  5369  1797  082F               	movf	_giay+1,w
  5370  1798  1803               	skipnc
  5371  1799  3E01               	addlw	1
  5372  179A  3EFF               	addlw	255
  5373  179B  00AF               	movwf	_giay+1
  5374  179C  2FA1               	goto	l3474
  5375  179D                     l3472:
  5376  179D  303B               	movlw	59
  5377  179E  00AE               	movwf	_giay
  5378  179F  3000               	movlw	0
  5379  17A0  00AF               	movwf	_giay+1
  5380  17A1                     l3474:
  5381                           
  5382                           ;RTC.c: 418:     LCD_gotoxy(1,1);
  5383  17A1  01F6               	clrf	LCD_gotoxy@y
  5384  17A2  0AF6               	incf	LCD_gotoxy@y,f
  5385  17A3  3001               	movlw	1
  5386  17A4  160A  118A  236A  160A  118A  	fcall	_LCD_gotoxy
  5387  17A9                     l3476:
  5388                           
  5389                           ;RTC.c: 419:     LCD_puts("  CAI DAT GIAY  ");
  5390  17A9  30E9               	movlw	low (STR_39| (0+32768))
  5391  17AA  00F6               	movwf	LCD_puts@str
  5392  17AB  3088               	movlw	high (STR_39| (0+32768))
  5393  17AC  00F7               	movwf	LCD_puts@str+1
  5394  17AD  160A  118A  244B  160A  118A  	fcall	_LCD_puts
  5395  17B2                     l3478:
  5396                           
  5397                           ;RTC.c: 420:     LCD_gotoxy(2,1);
  5398  17B2  01F6               	clrf	LCD_gotoxy@y
  5399  17B3  0AF6               	incf	LCD_gotoxy@y,f
  5400  17B4  3002               	movlw	2
  5401  17B5  160A  118A  236A  160A  118A  	fcall	_LCD_gotoxy
  5402  17BA                     l3480:
  5403                           
  5404                           ;RTC.c: 421:     LCD_puts("    GIAY: ");
  5405  17BA  306D               	movlw	low (STR_40| (0+32768))
  5406  17BB  00F6               	movwf	LCD_puts@str
  5407  17BC  3089               	movlw	high (STR_40| (0+32768))
  5408  17BD  00F7               	movwf	LCD_puts@str+1
  5409  17BE  160A  118A  244B  160A  118A  	fcall	_LCD_puts
  5410  17C3                     l3482:
  5411                           
  5412                           ;RTC.c: 422:     LCD_gotoxy(2,11);
  5413  17C3  300B               	movlw	11
  5414  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  5415  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  5416  17C6  00CB               	movwf	??_SetGiay
  5417  17C7  084B               	movf	??_SetGiay,w
  5418  17C8  00F6               	movwf	LCD_gotoxy@y
  5419  17C9  3002               	movlw	2
  5420  17CA  160A  118A  236A  160A  118A  	fcall	_LCD_gotoxy
  5421  17CF                     l3484:
  5422                           
  5423                           ;RTC.c: 423:     LCD_int(giay);
  5424  17CF  1283               	bcf	3,5	;RP0=0, select bank0
  5425  17D0  1303               	bcf	3,6	;RP1=0, select bank0
  5426  17D1  082F               	movf	_giay+1,w
  5427  17D2  00F9               	movwf	LCD_int@value+1
  5428  17D3  082E               	movf	_giay,w
  5429  17D4  00F8               	movwf	LCD_int@value
  5430  17D5  120A  118A  20E4  160A  118A  	fcall	_LCD_int
  5431  17DA                     l3486:
  5432                           
  5433                           ;RTC.c: 424:     LCD_gotoxy(2,13);
  5434  17DA  300D               	movlw	13
  5435  17DB  1283               	bcf	3,5	;RP0=0, select bank0
  5436  17DC  1303               	bcf	3,6	;RP1=0, select bank0
  5437  17DD  00CB               	movwf	??_SetGiay
  5438  17DE  084B               	movf	??_SetGiay,w
  5439  17DF  00F6               	movwf	LCD_gotoxy@y
  5440  17E0  3002               	movlw	2
  5441  17E1  160A  118A  236A  160A  118A  	fcall	_LCD_gotoxy
  5442  17E6                     l3488:
  5443                           
  5444                           ;RTC.c: 425:     LCD_puts("    ");
  5445  17E6  302C               	movlw	low ((STR_10+18)| (0+32768))
  5446  17E7  00F6               	movwf	LCD_puts@str
  5447  17E8  3088               	movlw	high ((STR_10+18)| (0+32768))
  5448  17E9  00F7               	movwf	LCD_puts@str+1
  5449  17EA  160A  118A  244B  160A  118A  	fcall	_LCD_puts
  5450  17EF                     l3490:
  5451                           
  5452                           ;RTC.c: 426:     SetTime(gio, phut, giay);
  5453  17EF  1283               	bcf	3,5	;RP0=0, select bank0
  5454  17F0  1303               	bcf	3,6	;RP1=0, select bank0
  5455  17F1  0830               	movf	_phut,w
  5456  17F2  00CB               	movwf	??_SetGiay
  5457  17F3  084B               	movf	??_SetGiay,w
  5458  17F4  00C6               	movwf	SetTime@ph
  5459  17F5  082E               	movf	_giay,w
  5460  17F6  00CC               	movwf	??_SetGiay+1
  5461  17F7  084C               	movf	??_SetGiay+1,w
  5462  17F8  00C7               	movwf	SetTime@gia
  5463  17F9  0832               	movf	_gio,w
  5464  17FA  160A  118A  2542  160A  118A  	fcall	_SetTime
  5465  17FF                     l311:
  5466  17FF  0008               	return
  5467  1800                     __end_of_SetGiay:
  5468                           
  5469                           	psect	text17
  5470  1542                     __ptext17:	
  5471 ;; *************** function _SetTime *****************
  5472 ;; Defined at:
  5473 ;;		line 237 in file "RTC.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  gi              1    wreg     unsigned char 
  5476 ;;  ph              1    3[BANK0 ] unsigned char 
  5477 ;;  gia             1    4[BANK0 ] unsigned char 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  gi              1   13[COMMON] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         0       2       0       0       0
  5490 ;;      Locals:         1       0       0       0       0
  5491 ;;      Temps:          0       2       0       0       0
  5492 ;;      Totals:         1       4       0       0       0
  5493 ;;Total ram usage:        5 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 3
  5496 ;; This function calls:
  5497 ;;		_DecToBCD
  5498 ;;		_RTC_Set_DateTime
  5499 ;; This function is called by:
  5500 ;;		_SetGio
  5501 ;;		_SetPhut
  5502 ;;		_SetGiay
  5503 ;;		_SetMode
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           
  5508                           ;psect for function _SetTime
  5509  1542                     _SetTime:
  5510                           
  5511                           ;incstack = 0
  5512                           ; Regs used in _SetTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5513                           ;SetTime@gi stored from wreg
  5514  1542  00FD               	movwf	SetTime@gi
  5515  1543                     l2916:
  5516                           
  5517                           ;RTC.c: 237: void SetTime(unsigned char gi, unsigned char ph, unsigned char gia);RTC.c: 
      +                          238: {;RTC.c: 239:     if(MODE == 12)
  5518  1543  300C               	movlw	12
  5519  1544  1283               	bcf	3,5	;RP0=0, select bank0
  5520  1545  1303               	bcf	3,6	;RP1=0, select bank0
  5521  1546  0668               	xorwf	_MODE,w
  5522  1547  0469               	iorwf	_MODE+1,w
  5523  1548  1D03               	btfss	3,2
  5524  1549  2D4B               	goto	u2311
  5525  154A  2D4C               	goto	u2310
  5526  154B                     u2311:
  5527  154B  2D76               	goto	l2924
  5528  154C                     u2310:
  5529  154C                     l2918:
  5530                           
  5531                           ;RTC.c: 240:         if(gi <= 12) {RTCbits.hour = DecToBCD(gi)|(Mode<<6);}
  5532  154C  300D               	movlw	13
  5533  154D  027D               	subwf	SetTime@gi,w
  5534  154E  1803               	skipnc
  5535  154F  2D51               	goto	u2321
  5536  1550  2D52               	goto	u2320
  5537  1551                     u2321:
  5538  1551  2D5F               	goto	l2922
  5539  1552                     u2320:
  5540  1552                     l2920:
  5541  1552  087D               	movf	SetTime@gi,w
  5542  1553  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5543  1558  3840               	iorlw	64
  5544  1559  1283               	bcf	3,5	;RP0=0, select bank0
  5545  155A  1303               	bcf	3,6	;RP1=0, select bank0
  5546  155B  00C8               	movwf	??_SetTime
  5547  155C  0848               	movf	??_SetTime,w
  5548  155D  00BE               	movwf	_RTCbits+2
  5549  155E  2D88               	goto	l128
  5550  155F                     l2922:
  5551  155F  086A               	movf	_AP,w
  5552  1560  00C8               	movwf	??_SetTime
  5553  1561  3005               	movlw	5
  5554  1562                     u2335:
  5555  1562  1003               	clrc
  5556  1563  0DC8               	rlf	??_SetTime,f
  5557  1564  3EFF               	addlw	-1
  5558  1565  1D03               	skipz
  5559  1566  2D62               	goto	u2335
  5560  1567  087D               	movf	SetTime@gi,w
  5561  1568  3EF4               	addlw	244
  5562  1569  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5563  156E  1283               	bcf	3,5	;RP0=0, select bank0
  5564  156F  1303               	bcf	3,6	;RP1=0, select bank0
  5565  1570  0448               	iorwf	??_SetTime,w
  5566  1571  3840               	iorlw	64
  5567  1572  00C9               	movwf	??_SetTime+1
  5568  1573  0849               	movf	??_SetTime+1,w
  5569  1574  00BE               	movwf	_RTCbits+2
  5570  1575  2D88               	goto	l128
  5571  1576                     l2924:
  5572  1576  3018               	movlw	24
  5573  1577  0668               	xorwf	_MODE,w
  5574  1578  0469               	iorwf	_MODE+1,w
  5575  1579  1D03               	btfss	3,2
  5576  157A  2D7C               	goto	u2341
  5577  157B  2D7D               	goto	u2340
  5578  157C                     u2341:
  5579  157C  2D88               	goto	l128
  5580  157D                     u2340:
  5581  157D                     l2926:
  5582                           
  5583                           ;RTC.c: 243:         RTCbits.hour = DecToBCD(gi);
  5584  157D  087D               	movf	SetTime@gi,w
  5585  157E  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5586  1583  1283               	bcf	3,5	;RP0=0, select bank0
  5587  1584  1303               	bcf	3,6	;RP1=0, select bank0
  5588  1585  00C8               	movwf	??_SetTime
  5589  1586  0848               	movf	??_SetTime,w
  5590  1587  00BE               	movwf	_RTCbits+2
  5591  1588                     l128:
  5592                           
  5593                           ;RTC.c: 245:     RTCbits.min = DecToBCD(ph);
  5594  1588  0846               	movf	SetTime@ph,w
  5595  1589  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5596  158E  1283               	bcf	3,5	;RP0=0, select bank0
  5597  158F  1303               	bcf	3,6	;RP1=0, select bank0
  5598  1590  00C8               	movwf	??_SetTime
  5599  1591  0848               	movf	??_SetTime,w
  5600  1592  00BD               	movwf	_RTCbits+1
  5601                           
  5602                           ;RTC.c: 246:     RTCbits.sec = DecToBCD(gia);
  5603  1593  0847               	movf	SetTime@gia,w
  5604  1594  160A  118A  2410  160A  118A  	fcall	_DecToBCD
  5605  1599  1283               	bcf	3,5	;RP0=0, select bank0
  5606  159A  1303               	bcf	3,6	;RP1=0, select bank0
  5607  159B  00C8               	movwf	??_SetTime
  5608  159C  0848               	movf	??_SetTime,w
  5609  159D  00BC               	movwf	_RTCbits
  5610  159E                     l2928:
  5611                           
  5612                           ;RTC.c: 248:     RTC_Set_DateTime(&RTCbits);
  5613  159E  303C               	movlw	(low (_RTCbits| 0))& (0+255)
  5614  159F  160A  118A  24E6  160A  118A  	fcall	_RTC_Set_DateTime
  5615  15A4                     l130:
  5616  15A4  0008               	return
  5617  15A5                     __end_of_SetTime:
  5618                           
  5619                           	psect	text18
  5620  14E6                     __ptext18:	
  5621 ;; *************** function _RTC_Set_DateTime *****************
  5622 ;; Defined at:
  5623 ;;		line 158 in file "RTC.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  rtc             1    wreg     PTR struct .
  5626 ;;		 -> RTCbits(7), 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  rtc             1    3[COMMON] PTR struct .
  5629 ;;		 -> RTCbits(7), 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0
  5642 ;;      Totals:         1       0       0       0       0
  5643 ;;Total ram usage:        1 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; Hardware stack levels required when called: 2
  5646 ;; This function calls:
  5647 ;;		_I2C_start
  5648 ;;		_I2C_stop
  5649 ;;		_I2C_write
  5650 ;; This function is called by:
  5651 ;;		_SetTime
  5652 ;;		_SetDate
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           
  5657                           ;psect for function _RTC_Set_DateTime
  5658  14E6                     _RTC_Set_DateTime:
  5659                           
  5660                           ;incstack = 0
  5661                           ; Regs used in _RTC_Set_DateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5662                           ;RTC_Set_DateTime@rtc stored from wreg
  5663  14E6  00F3               	movwf	RTC_Set_DateTime@rtc
  5664  14E7                     l2726:
  5665                           
  5666                           ;RTC.c: 158: void RTC_Set_DateTime(RTC *rtc);RTC.c: 159: {;RTC.c: 160:     I2C_start();
  5667  14E7  160A  118A  21D9  160A  118A  	fcall	_I2C_start
  5668                           
  5669                           ;RTC.c: 162:     I2C_write(0xD0);
  5670  14EC  30D0               	movlw	208
  5671  14ED  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5672                           
  5673                           ;RTC.c: 164:     I2C_write(0x00);
  5674  14F2  3000               	movlw	0
  5675  14F3  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5676  14F8                     l2728:
  5677                           
  5678                           ;RTC.c: 167:     I2C_write(rtc->sec);
  5679  14F8  0873               	movf	RTC_Set_DateTime@rtc,w
  5680  14F9  0084               	movwf	4
  5681  14FA  1383               	bcf	3,7	;select IRP bank0
  5682  14FB  0800               	movf	0,w
  5683  14FC  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5684  1501                     l2730:
  5685                           
  5686                           ;RTC.c: 169:     I2C_write(rtc->min);
  5687  1501  0A73               	incf	RTC_Set_DateTime@rtc,w
  5688  1502  0084               	movwf	4
  5689  1503  1383               	bcf	3,7	;select IRP bank0
  5690  1504  0800               	movf	0,w
  5691  1505  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5692  150A                     l2732:
  5693                           
  5694                           ;RTC.c: 171:     I2C_write(rtc->hour);
  5695  150A  0873               	movf	RTC_Set_DateTime@rtc,w
  5696  150B  3E02               	addlw	2
  5697  150C  0084               	movwf	4
  5698  150D  1383               	bcf	3,7	;select IRP bank0
  5699  150E  0800               	movf	0,w
  5700  150F  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5701  1514                     l2734:
  5702                           
  5703                           ;RTC.c: 173:     I2C_write(rtc->week);
  5704  1514  0873               	movf	RTC_Set_DateTime@rtc,w
  5705  1515  3E03               	addlw	3
  5706  1516  0084               	movwf	4
  5707  1517  1383               	bcf	3,7	;select IRP bank0
  5708  1518  0800               	movf	0,w
  5709  1519  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5710  151E                     l2736:
  5711                           
  5712                           ;RTC.c: 175:     I2C_write(rtc->date);
  5713  151E  0873               	movf	RTC_Set_DateTime@rtc,w
  5714  151F  3E04               	addlw	4
  5715  1520  0084               	movwf	4
  5716  1521  1383               	bcf	3,7	;select IRP bank0
  5717  1522  0800               	movf	0,w
  5718  1523  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5719  1528                     l2738:
  5720                           
  5721                           ;RTC.c: 177:     I2C_write(rtc->month);
  5722  1528  0873               	movf	RTC_Set_DateTime@rtc,w
  5723  1529  3E05               	addlw	5
  5724  152A  0084               	movwf	4
  5725  152B  1383               	bcf	3,7	;select IRP bank0
  5726  152C  0800               	movf	0,w
  5727  152D  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5728  1532                     l2740:
  5729                           
  5730                           ;RTC.c: 179:     I2C_write(rtc->year);
  5731  1532  0873               	movf	RTC_Set_DateTime@rtc,w
  5732  1533  3E06               	addlw	6
  5733  1534  0084               	movwf	4
  5734  1535  1383               	bcf	3,7	;select IRP bank0
  5735  1536  0800               	movf	0,w
  5736  1537  160A  118A  2214  160A  118A  	fcall	_I2C_write
  5737  153C                     l2742:
  5738                           
  5739                           ;RTC.c: 182:     I2C_stop();
  5740  153C  160A  118A  21E2  160A  118A  	fcall	_I2C_stop
  5741  1541                     l113:
  5742  1541  0008               	return
  5743  1542                     __end_of_RTC_Set_DateTime:
  5744                           
  5745                           	psect	text19
  5746  1410                     __ptext19:	
  5747 ;; *************** function _DecToBCD *****************
  5748 ;; Defined at:
  5749 ;;		line 220 in file "RTC.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  a               1    wreg     unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  a               1    2[BANK0 ] unsigned char 
  5754 ;;  dv              1    1[BANK0 ] unsigned char 
  5755 ;;  chuc            1    0[BANK0 ] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      unsigned char 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0, pclath, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5765 ;;      Params:         0       0       0       0       0
  5766 ;;      Locals:         0       3       0       0       0
  5767 ;;      Temps:          4       0       0       0       0
  5768 ;;      Totals:         4       3       0       0       0
  5769 ;;Total ram usage:        7 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; Hardware stack levels required when called: 1
  5772 ;; This function calls:
  5773 ;;		___awdiv
  5774 ;;		___awmod
  5775 ;; This function is called by:
  5776 ;;		_SetTime
  5777 ;;		_SetDate
  5778 ;;		_SetMode
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           
  5783                           ;psect for function _DecToBCD
  5784  1410                     _DecToBCD:
  5785                           
  5786                           ;incstack = 0
  5787                           ; Regs used in _DecToBCD: [wreg+status,2+status,0+pclath+cstack]
  5788                           ;DecToBCD@a stored from wreg
  5789  1410  1283               	bcf	3,5	;RP0=0, select bank0
  5790  1411  1303               	bcf	3,6	;RP1=0, select bank0
  5791  1412  00C5               	movwf	DecToBCD@a
  5792  1413                     l2764:
  5793                           
  5794                           ;RTC.c: 220: unsigned char DecToBCD(unsigned char a);RTC.c: 221: {;RTC.c: 222:     unsig
      +                          ned char chuc, dv;;RTC.c: 223:     chuc = (a/10)<<4;
  5795  1413  300A               	movlw	10
  5796  1414  00F0               	movwf	___awdiv@divisor
  5797  1415  3000               	movlw	0
  5798  1416  00F1               	movwf	___awdiv@divisor+1
  5799  1417  0845               	movf	DecToBCD@a,w
  5800  1418  00F9               	movwf	??_DecToBCD
  5801  1419  01FA               	clrf	??_DecToBCD+1
  5802  141A  0879               	movf	??_DecToBCD,w
  5803  141B  00F2               	movwf	___awdiv@dividend
  5804  141C  087A               	movf	??_DecToBCD+1,w
  5805  141D  00F3               	movwf	___awdiv@dividend+1
  5806  141E  160A  118A  25A5  160A  118A  	fcall	___awdiv
  5807  1423  0870               	movf	?___awdiv,w
  5808  1424  00FB               	movwf	??_DecToBCD+2
  5809  1425  3003               	movlw	3
  5810  1426                     u2095:
  5811  1426  1003               	clrc
  5812  1427  0DFB               	rlf	??_DecToBCD+2,f
  5813  1428  3EFF               	addlw	-1
  5814  1429  1D03               	skipz
  5815  142A  2C26               	goto	u2095
  5816  142B  1003               	clrc
  5817  142C  0D7B               	rlf	??_DecToBCD+2,w
  5818  142D  00FC               	movwf	??_DecToBCD+3
  5819  142E  087C               	movf	??_DecToBCD+3,w
  5820  142F  1283               	bcf	3,5	;RP0=0, select bank0
  5821  1430  1303               	bcf	3,6	;RP1=0, select bank0
  5822  1431  00C3               	movwf	DecToBCD@chuc
  5823                           
  5824                           ;RTC.c: 224:     dv = a%10;
  5825  1432  300A               	movlw	10
  5826  1433  00F0               	movwf	___awmod@divisor
  5827  1434  3000               	movlw	0
  5828  1435  00F1               	movwf	___awmod@divisor+1
  5829  1436  0845               	movf	DecToBCD@a,w
  5830  1437  00F9               	movwf	??_DecToBCD
  5831  1438  01FA               	clrf	??_DecToBCD+1
  5832  1439  0879               	movf	??_DecToBCD,w
  5833  143A  00F2               	movwf	___awmod@dividend
  5834  143B  087A               	movf	??_DecToBCD+1,w
  5835  143C  00F3               	movwf	___awmod@dividend+1
  5836  143D  160A  118A  248D  160A  118A  	fcall	___awmod
  5837  1442  0870               	movf	?___awmod,w
  5838  1443  00FB               	movwf	??_DecToBCD+2
  5839  1444  087B               	movf	??_DecToBCD+2,w
  5840  1445  1283               	bcf	3,5	;RP0=0, select bank0
  5841  1446  1303               	bcf	3,6	;RP1=0, select bank0
  5842  1447  00C4               	movwf	DecToBCD@dv
  5843  1448                     l2766:
  5844                           
  5845                           ;RTC.c: 225:     return (chuc+dv);
  5846  1448  0844               	movf	DecToBCD@dv,w
  5847  1449  0743               	addwf	DecToBCD@chuc,w
  5848  144A                     l119:
  5849  144A  0008               	return
  5850  144B                     __end_of_DecToBCD:
  5851                           
  5852                           	psect	text20
  5853  148D                     __ptext20:	
  5854 ;; *************** function ___awmod *****************
  5855 ;; Defined at:
  5856 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  divisor         2    0[COMMON] int 
  5859 ;;  dividend        2    2[COMMON] int 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  sign            1    6[COMMON] unsigned char 
  5862 ;;  counter         1    5[COMMON] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  2    0[COMMON] int 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5872 ;;      Params:         4       0       0       0       0
  5873 ;;      Locals:         2       0       0       0       0
  5874 ;;      Temps:          1       0       0       0       0
  5875 ;;      Totals:         7       0       0       0       0
  5876 ;;Total ram usage:        7 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_DecToBCD
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           
  5886                           ;psect for function ___awmod
  5887  148D                     ___awmod:
  5888  148D                     l2688:	
  5889                           ;incstack = 0
  5890                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5891                           
  5892  148D  01F6               	clrf	___awmod@sign
  5893  148E                     l2690:
  5894  148E  1FF3               	btfss	___awmod@dividend+1,7
  5895  148F  2C91               	goto	u1991
  5896  1490  2C92               	goto	u1990
  5897  1491                     u1991:
  5898  1491  2C99               	goto	l2696
  5899  1492                     u1990:
  5900  1492                     l2692:
  5901  1492  09F2               	comf	___awmod@dividend,f
  5902  1493  09F3               	comf	___awmod@dividend+1,f
  5903  1494  0AF2               	incf	___awmod@dividend,f
  5904  1495  1903               	skipnz
  5905  1496  0AF3               	incf	___awmod@dividend+1,f
  5906  1497                     l2694:
  5907  1497  01F6               	clrf	___awmod@sign
  5908  1498  0AF6               	incf	___awmod@sign,f
  5909  1499                     l2696:
  5910  1499  1FF1               	btfss	___awmod@divisor+1,7
  5911  149A  2C9C               	goto	u2001
  5912  149B  2C9D               	goto	u2000
  5913  149C                     u2001:
  5914  149C  2CA2               	goto	l2700
  5915  149D                     u2000:
  5916  149D                     l2698:
  5917  149D  09F0               	comf	___awmod@divisor,f
  5918  149E  09F1               	comf	___awmod@divisor+1,f
  5919  149F  0AF0               	incf	___awmod@divisor,f
  5920  14A0  1903               	skipnz
  5921  14A1  0AF1               	incf	___awmod@divisor+1,f
  5922  14A2                     l2700:
  5923  14A2  0870               	movf	___awmod@divisor,w
  5924  14A3  0471               	iorwf	___awmod@divisor+1,w
  5925  14A4  1903               	btfsc	3,2
  5926  14A5  2CA7               	goto	u2011
  5927  14A6  2CA8               	goto	u2010
  5928  14A7                     u2011:
  5929  14A7  2CD7               	goto	l2718
  5930  14A8                     u2010:
  5931  14A8                     l2702:
  5932  14A8  01F5               	clrf	___awmod@counter
  5933  14A9  0AF5               	incf	___awmod@counter,f
  5934  14AA  2CB6               	goto	l2708
  5935  14AB                     l2704:
  5936  14AB  3001               	movlw	1
  5937  14AC                     u2025:
  5938  14AC  1003               	clrc
  5939  14AD  0DF0               	rlf	___awmod@divisor,f
  5940  14AE  0DF1               	rlf	___awmod@divisor+1,f
  5941  14AF  3EFF               	addlw	-1
  5942  14B0  1D03               	skipz
  5943  14B1  2CAC               	goto	u2025
  5944  14B2                     l2706:
  5945  14B2  3001               	movlw	1
  5946  14B3  00F4               	movwf	??___awmod
  5947  14B4  0874               	movf	??___awmod,w
  5948  14B5  07F5               	addwf	___awmod@counter,f
  5949  14B6                     l2708:
  5950  14B6  1FF1               	btfss	___awmod@divisor+1,7
  5951  14B7  2CB9               	goto	u2031
  5952  14B8  2CBA               	goto	u2030
  5953  14B9                     u2031:
  5954  14B9  2CAB               	goto	l2704
  5955  14BA                     u2030:
  5956  14BA                     l2710:
  5957  14BA  0871               	movf	___awmod@divisor+1,w
  5958  14BB  0273               	subwf	___awmod@dividend+1,w
  5959  14BC  1D03               	skipz
  5960  14BD  2CC0               	goto	u2045
  5961  14BE  0870               	movf	___awmod@divisor,w
  5962  14BF  0272               	subwf	___awmod@dividend,w
  5963  14C0                     u2045:
  5964  14C0  1C03               	skipc
  5965  14C1  2CC3               	goto	u2041
  5966  14C2  2CC4               	goto	u2040
  5967  14C3                     u2041:
  5968  14C3  2CCA               	goto	l2714
  5969  14C4                     u2040:
  5970  14C4                     l2712:
  5971  14C4  0870               	movf	___awmod@divisor,w
  5972  14C5  02F2               	subwf	___awmod@dividend,f
  5973  14C6  0871               	movf	___awmod@divisor+1,w
  5974  14C7  1C03               	skipc
  5975  14C8  03F3               	decf	___awmod@dividend+1,f
  5976  14C9  02F3               	subwf	___awmod@dividend+1,f
  5977  14CA                     l2714:
  5978  14CA  3001               	movlw	1
  5979  14CB                     u2055:
  5980  14CB  1003               	clrc
  5981  14CC  0CF1               	rrf	___awmod@divisor+1,f
  5982  14CD  0CF0               	rrf	___awmod@divisor,f
  5983  14CE  3EFF               	addlw	-1
  5984  14CF  1D03               	skipz
  5985  14D0  2CCB               	goto	u2055
  5986  14D1                     l2716:
  5987  14D1  3001               	movlw	1
  5988  14D2  02F5               	subwf	___awmod@counter,f
  5989  14D3  1D03               	btfss	3,2
  5990  14D4  2CD6               	goto	u2061
  5991  14D5  2CD7               	goto	u2060
  5992  14D6                     u2061:
  5993  14D6  2CBA               	goto	l2710
  5994  14D7                     u2060:
  5995  14D7                     l2718:
  5996  14D7  0876               	movf	___awmod@sign,w
  5997  14D8  1903               	btfsc	3,2
  5998  14D9  2CDB               	goto	u2071
  5999  14DA  2CDC               	goto	u2070
  6000  14DB                     u2071:
  6001  14DB  2CE1               	goto	l2722
  6002  14DC                     u2070:
  6003  14DC                     l2720:
  6004  14DC  09F2               	comf	___awmod@dividend,f
  6005  14DD  09F3               	comf	___awmod@dividend+1,f
  6006  14DE  0AF2               	incf	___awmod@dividend,f
  6007  14DF  1903               	skipnz
  6008  14E0  0AF3               	incf	___awmod@dividend+1,f
  6009  14E1                     l2722:
  6010  14E1  0873               	movf	___awmod@dividend+1,w
  6011  14E2  00F1               	movwf	?___awmod+1
  6012  14E3  0872               	movf	___awmod@dividend,w
  6013  14E4  00F0               	movwf	?___awmod
  6014  14E5                     l863:
  6015  14E5  0008               	return
  6016  14E6                     __end_of___awmod:
  6017                           
  6018                           	psect	text21
  6019  15A5                     __ptext21:	
  6020 ;; *************** function ___awdiv *****************
  6021 ;; Defined at:
  6022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  divisor         2    0[COMMON] int 
  6025 ;;  dividend        2    2[COMMON] int 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  quotient        2    7[COMMON] int 
  6028 ;;  sign            1    6[COMMON] unsigned char 
  6029 ;;  counter         1    5[COMMON] unsigned char 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  2    0[COMMON] int 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6039 ;;      Params:         4       0       0       0       0
  6040 ;;      Locals:         4       0       0       0       0
  6041 ;;      Temps:          1       0       0       0       0
  6042 ;;      Totals:         9       0       0       0       0
  6043 ;;Total ram usage:        9 bytes
  6044 ;; Hardware stack levels used: 1
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_DecToBCD
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           
  6053                           ;psect for function ___awdiv
  6054  15A5                     ___awdiv:
  6055  15A5                     l2644:	
  6056                           ;incstack = 0
  6057                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6058                           
  6059  15A5  01F6               	clrf	___awdiv@sign
  6060  15A6                     l2646:
  6061  15A6  1FF1               	btfss	___awdiv@divisor+1,7
  6062  15A7  2DA9               	goto	u1891
  6063  15A8  2DAA               	goto	u1890
  6064  15A9                     u1891:
  6065  15A9  2DB1               	goto	l2652
  6066  15AA                     u1890:
  6067  15AA                     l2648:
  6068  15AA  09F0               	comf	___awdiv@divisor,f
  6069  15AB  09F1               	comf	___awdiv@divisor+1,f
  6070  15AC  0AF0               	incf	___awdiv@divisor,f
  6071  15AD  1903               	skipnz
  6072  15AE  0AF1               	incf	___awdiv@divisor+1,f
  6073  15AF                     l2650:
  6074  15AF  01F6               	clrf	___awdiv@sign
  6075  15B0  0AF6               	incf	___awdiv@sign,f
  6076  15B1                     l2652:
  6077  15B1  1FF3               	btfss	___awdiv@dividend+1,7
  6078  15B2  2DB4               	goto	u1901
  6079  15B3  2DB5               	goto	u1900
  6080  15B4                     u1901:
  6081  15B4  2DBE               	goto	l2658
  6082  15B5                     u1900:
  6083  15B5                     l2654:
  6084  15B5  09F2               	comf	___awdiv@dividend,f
  6085  15B6  09F3               	comf	___awdiv@dividend+1,f
  6086  15B7  0AF2               	incf	___awdiv@dividend,f
  6087  15B8  1903               	skipnz
  6088  15B9  0AF3               	incf	___awdiv@dividend+1,f
  6089  15BA                     l2656:
  6090  15BA  3001               	movlw	1
  6091  15BB  00F4               	movwf	??___awdiv
  6092  15BC  0874               	movf	??___awdiv,w
  6093  15BD  06F6               	xorwf	___awdiv@sign,f
  6094  15BE                     l2658:
  6095  15BE  01F7               	clrf	___awdiv@quotient
  6096  15BF  01F8               	clrf	___awdiv@quotient+1
  6097  15C0                     l2660:
  6098  15C0  0870               	movf	___awdiv@divisor,w
  6099  15C1  0471               	iorwf	___awdiv@divisor+1,w
  6100  15C2  1903               	btfsc	3,2
  6101  15C3  2DC5               	goto	u1911
  6102  15C4  2DC6               	goto	u1910
  6103  15C5                     u1911:
  6104  15C5  2DFD               	goto	l2680
  6105  15C6                     u1910:
  6106  15C6                     l2662:
  6107  15C6  01F5               	clrf	___awdiv@counter
  6108  15C7  0AF5               	incf	___awdiv@counter,f
  6109  15C8  2DD4               	goto	l2668
  6110  15C9                     l2664:
  6111  15C9  3001               	movlw	1
  6112  15CA                     u1925:
  6113  15CA  1003               	clrc
  6114  15CB  0DF0               	rlf	___awdiv@divisor,f
  6115  15CC  0DF1               	rlf	___awdiv@divisor+1,f
  6116  15CD  3EFF               	addlw	-1
  6117  15CE  1D03               	skipz
  6118  15CF  2DCA               	goto	u1925
  6119  15D0                     l2666:
  6120  15D0  3001               	movlw	1
  6121  15D1  00F4               	movwf	??___awdiv
  6122  15D2  0874               	movf	??___awdiv,w
  6123  15D3  07F5               	addwf	___awdiv@counter,f
  6124  15D4                     l2668:
  6125  15D4  1FF1               	btfss	___awdiv@divisor+1,7
  6126  15D5  2DD7               	goto	u1931
  6127  15D6  2DD8               	goto	u1930
  6128  15D7                     u1931:
  6129  15D7  2DC9               	goto	l2664
  6130  15D8                     u1930:
  6131  15D8                     l2670:
  6132  15D8  3001               	movlw	1
  6133  15D9                     u1945:
  6134  15D9  1003               	clrc
  6135  15DA  0DF7               	rlf	___awdiv@quotient,f
  6136  15DB  0DF8               	rlf	___awdiv@quotient+1,f
  6137  15DC  3EFF               	addlw	-1
  6138  15DD  1D03               	skipz
  6139  15DE  2DD9               	goto	u1945
  6140  15DF  0871               	movf	___awdiv@divisor+1,w
  6141  15E0  0273               	subwf	___awdiv@dividend+1,w
  6142  15E1  1D03               	skipz
  6143  15E2  2DE5               	goto	u1955
  6144  15E3  0870               	movf	___awdiv@divisor,w
  6145  15E4  0272               	subwf	___awdiv@dividend,w
  6146  15E5                     u1955:
  6147  15E5  1C03               	skipc
  6148  15E6  2DE8               	goto	u1951
  6149  15E7  2DE9               	goto	u1950
  6150  15E8                     u1951:
  6151  15E8  2DF0               	goto	l2676
  6152  15E9                     u1950:
  6153  15E9                     l2672:
  6154  15E9  0870               	movf	___awdiv@divisor,w
  6155  15EA  02F2               	subwf	___awdiv@dividend,f
  6156  15EB  0871               	movf	___awdiv@divisor+1,w
  6157  15EC  1C03               	skipc
  6158  15ED  03F3               	decf	___awdiv@dividend+1,f
  6159  15EE  02F3               	subwf	___awdiv@dividend+1,f
  6160  15EF                     l2674:
  6161  15EF  1477               	bsf	___awdiv@quotient,0
  6162  15F0                     l2676:
  6163  15F0  3001               	movlw	1
  6164  15F1                     u1965:
  6165  15F1  1003               	clrc
  6166  15F2  0CF1               	rrf	___awdiv@divisor+1,f
  6167  15F3  0CF0               	rrf	___awdiv@divisor,f
  6168  15F4  3EFF               	addlw	-1
  6169  15F5  1D03               	skipz
  6170  15F6  2DF1               	goto	u1965
  6171  15F7                     l2678:
  6172  15F7  3001               	movlw	1
  6173  15F8  02F5               	subwf	___awdiv@counter,f
  6174  15F9  1D03               	btfss	3,2
  6175  15FA  2DFC               	goto	u1971
  6176  15FB  2DFD               	goto	u1970
  6177  15FC                     u1971:
  6178  15FC  2DD8               	goto	l2670
  6179  15FD                     u1970:
  6180  15FD                     l2680:
  6181  15FD  0876               	movf	___awdiv@sign,w
  6182  15FE  1903               	btfsc	3,2
  6183  15FF  2E01               	goto	u1981
  6184  1600  2E02               	goto	u1980
  6185  1601                     u1981:
  6186  1601  2E07               	goto	l2684
  6187  1602                     u1980:
  6188  1602                     l2682:
  6189  1602  09F7               	comf	___awdiv@quotient,f
  6190  1603  09F8               	comf	___awdiv@quotient+1,f
  6191  1604  0AF7               	incf	___awdiv@quotient,f
  6192  1605  1903               	skipnz
  6193  1606  0AF8               	incf	___awdiv@quotient+1,f
  6194  1607                     l2684:
  6195  1607  0878               	movf	___awdiv@quotient+1,w
  6196  1608  00F1               	movwf	?___awdiv+1
  6197  1609  0877               	movf	___awdiv@quotient,w
  6198  160A  00F0               	movwf	?___awdiv
  6199  160B                     l850:
  6200  160B  0008               	return
  6201  160C                     __end_of___awdiv:
  6202                           
  6203                           	psect	text22
  6204  00E4                     __ptext22:	
  6205 ;; *************** function _LCD_int *****************
  6206 ;; Defined at:
  6207 ;;		line 146 in file "LCD_I2C.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  value           2    8[COMMON] unsigned int 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  i               2    2[BANK0 ] int 
  6212 ;;  a2              2    4[BANK0 ] int 
  6213 ;;  dem             2    6[BANK0 ] int 
  6214 ;;  a1              2    0[BANK0 ] int 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6224 ;;      Params:         2       0       0       0       0
  6225 ;;      Locals:         0       8       0       0       0
  6226 ;;      Temps:          3       0       0       0       0
  6227 ;;      Totals:         5       8       0       0       0
  6228 ;;Total ram usage:       13 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; Hardware stack levels required when called: 4
  6231 ;; This function calls:
  6232 ;;		_LCD_putc
  6233 ;;		___lwdiv
  6234 ;;		___lwmod
  6235 ;;		___wmul
  6236 ;; This function is called by:
  6237 ;;		_SetNgay
  6238 ;;		_SetThang
  6239 ;;		_SetNamchuc
  6240 ;;		_SetNamdv
  6241 ;;		_SetGio
  6242 ;;		_SetPhut
  6243 ;;		_SetGiay
  6244 ;;		_Display_Alarm
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           
  6249                           ;psect for function _LCD_int
  6250  00E4                     _LCD_int:
  6251  00E4                     l3056:	
  6252                           ;incstack = 0
  6253                           ; Regs used in _LCD_int: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6254                           
  6255                           
  6256                           ;LCD_I2C.c: 146: void LCD_int(unsigned int value);LCD_I2C.c: 147: {;LCD_I2C.c: 148:     
      +                          int dem=0, a1=0;
  6257  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  6258  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  6259  00E6  01C9               	clrf	LCD_int@dem
  6260  00E7  01CA               	clrf	LCD_int@dem+1
  6261  00E8                     l3060:	
  6262                           ;LCD_I2C.c: 150:     if(value<0)
  6263                           
  6264                           
  6265                           ;LCD_I2C.c: 155:     if(value>=0 && value<10)
  6266  00E8  3000               	movlw	0
  6267  00E9  0279               	subwf	LCD_int@value+1,w
  6268  00EA  300A               	movlw	10
  6269  00EB  1903               	skipnz
  6270  00EC  0278               	subwf	LCD_int@value,w
  6271  00ED  1803               	skipnc
  6272  00EE  28F0               	goto	u2511
  6273  00EF  28F1               	goto	u2510
  6274  00F0                     u2511:
  6275  00F0  28FE               	goto	l3064
  6276  00F1                     u2510:
  6277  00F1                     l3062:
  6278                           
  6279                           ;LCD_I2C.c: 156:     {;LCD_I2C.c: 157:         LCD_putc(0+48);
  6280  00F1  3030               	movlw	48
  6281  00F2  160A  118A  267A  120A  118A  	fcall	_LCD_putc
  6282                           
  6283                           ;LCD_I2C.c: 158:         LCD_putc((value+48));
  6284  00F7  0878               	movf	LCD_int@value,w
  6285  00F8  3E30               	addlw	48
  6286  00F9  160A  118A  267A  120A  118A  	fcall	_LCD_putc
  6287  00FE                     l3064:
  6288                           
  6289                           ;LCD_I2C.c: 160:     if(value>=10 && value <100)
  6290  00FE  3000               	movlw	0
  6291  00FF  0279               	subwf	LCD_int@value+1,w
  6292  0100  300A               	movlw	10
  6293  0101  1903               	skipnz
  6294  0102  0278               	subwf	LCD_int@value,w
  6295  0103  1C03               	skipc
  6296  0104  2906               	goto	u2521
  6297  0105  2907               	goto	u2520
  6298  0106                     u2521:
  6299  0106  2916               	goto	l486
  6300  0107                     u2520:
  6301  0107                     l3066:
  6302  0107  3000               	movlw	0
  6303  0108  0279               	subwf	LCD_int@value+1,w
  6304  0109  3064               	movlw	100
  6305  010A  1903               	skipnz
  6306  010B  0278               	subwf	LCD_int@value,w
  6307  010C  1803               	skipnc
  6308  010D  290F               	goto	u2531
  6309  010E  2910               	goto	u2530
  6310  010F                     u2531:
  6311  010F  2916               	goto	l486
  6312  0110                     u2530:
  6313  0110                     l3068:
  6314                           
  6315                           ;LCD_I2C.c: 161:         dem=2;
  6316  0110  3002               	movlw	2
  6317  0111  1283               	bcf	3,5	;RP0=0, select bank0
  6318  0112  1303               	bcf	3,6	;RP1=0, select bank0
  6319  0113  00C9               	movwf	LCD_int@dem
  6320  0114  3000               	movlw	0
  6321  0115  00CA               	movwf	LCD_int@dem+1
  6322  0116                     l486:
  6323                           
  6324                           ;LCD_I2C.c: 162:     if(value>=100 && value<1000)
  6325  0116  3000               	movlw	0
  6326  0117  0279               	subwf	LCD_int@value+1,w
  6327  0118  3064               	movlw	100
  6328  0119  1903               	skipnz
  6329  011A  0278               	subwf	LCD_int@value,w
  6330  011B  1C03               	skipc
  6331  011C  291E               	goto	u2541
  6332  011D  291F               	goto	u2540
  6333  011E                     u2541:
  6334  011E  292E               	goto	l487
  6335  011F                     u2540:
  6336  011F                     l3070:
  6337  011F  3003               	movlw	3
  6338  0120  0279               	subwf	LCD_int@value+1,w
  6339  0121  30E8               	movlw	232
  6340  0122  1903               	skipnz
  6341  0123  0278               	subwf	LCD_int@value,w
  6342  0124  1803               	skipnc
  6343  0125  2927               	goto	u2551
  6344  0126  2928               	goto	u2550
  6345  0127                     u2551:
  6346  0127  292E               	goto	l487
  6347  0128                     u2550:
  6348  0128                     l3072:
  6349                           
  6350                           ;LCD_I2C.c: 163:         dem=3;
  6351  0128  3003               	movlw	3
  6352  0129  1283               	bcf	3,5	;RP0=0, select bank0
  6353  012A  1303               	bcf	3,6	;RP1=0, select bank0
  6354  012B  00C9               	movwf	LCD_int@dem
  6355  012C  3000               	movlw	0
  6356  012D  00CA               	movwf	LCD_int@dem+1
  6357  012E                     l487:
  6358                           
  6359                           ;LCD_I2C.c: 164:     if(value>=1000 && value<10000)
  6360  012E  3003               	movlw	3
  6361  012F  0279               	subwf	LCD_int@value+1,w
  6362  0130  30E8               	movlw	232
  6363  0131  1903               	skipnz
  6364  0132  0278               	subwf	LCD_int@value,w
  6365  0133  1C03               	skipc
  6366  0134  2936               	goto	u2561
  6367  0135  2937               	goto	u2560
  6368  0136                     u2561:
  6369  0136  2946               	goto	l488
  6370  0137                     u2560:
  6371  0137                     l3074:
  6372  0137  3027               	movlw	39
  6373  0138  0279               	subwf	LCD_int@value+1,w
  6374  0139  3010               	movlw	16
  6375  013A  1903               	skipnz
  6376  013B  0278               	subwf	LCD_int@value,w
  6377  013C  1803               	skipnc
  6378  013D  293F               	goto	u2571
  6379  013E  2940               	goto	u2570
  6380  013F                     u2571:
  6381  013F  2946               	goto	l488
  6382  0140                     u2570:
  6383  0140                     l3076:
  6384                           
  6385                           ;LCD_I2C.c: 165:         dem=4;
  6386  0140  3004               	movlw	4
  6387  0141  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0142  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0143  00C9               	movwf	LCD_int@dem
  6390  0144  3000               	movlw	0
  6391  0145  00CA               	movwf	LCD_int@dem+1
  6392  0146                     l488:
  6393                           
  6394                           ;LCD_I2C.c: 166:     if(value>=10000 && value<32767)
  6395  0146  3027               	movlw	39
  6396  0147  0279               	subwf	LCD_int@value+1,w
  6397  0148  3010               	movlw	16
  6398  0149  1903               	skipnz
  6399  014A  0278               	subwf	LCD_int@value,w
  6400  014B  1C03               	skipc
  6401  014C  294E               	goto	u2581
  6402  014D  294F               	goto	u2580
  6403  014E                     u2581:
  6404  014E  295E               	goto	l3082
  6405  014F                     u2580:
  6406  014F                     l3078:
  6407  014F  307F               	movlw	127
  6408  0150  0279               	subwf	LCD_int@value+1,w
  6409  0151  30FF               	movlw	255
  6410  0152  1903               	skipnz
  6411  0153  0278               	subwf	LCD_int@value,w
  6412  0154  1803               	skipnc
  6413  0155  2957               	goto	u2591
  6414  0156  2958               	goto	u2590
  6415  0157                     u2591:
  6416  0157  295E               	goto	l3082
  6417  0158                     u2590:
  6418  0158                     l3080:
  6419                           
  6420                           ;LCD_I2C.c: 167:         dem=5;
  6421  0158  3005               	movlw	5
  6422  0159  1283               	bcf	3,5	;RP0=0, select bank0
  6423  015A  1303               	bcf	3,6	;RP1=0, select bank0
  6424  015B  00C9               	movwf	LCD_int@dem
  6425  015C  3000               	movlw	0
  6426  015D  00CA               	movwf	LCD_int@dem+1
  6427  015E                     l3082:
  6428                           
  6429                           ;LCD_I2C.c: 169:     if(dem>=2)
  6430  015E  1283               	bcf	3,5	;RP0=0, select bank0
  6431  015F  1303               	bcf	3,6	;RP1=0, select bank0
  6432  0160  084A               	movf	LCD_int@dem+1,w
  6433  0161  3A80               	xorlw	128
  6434  0162  00FF               	movwf	btemp+1
  6435  0163  3080               	movlw	128
  6436  0164  027F               	subwf	btemp+1,w
  6437  0165  1D03               	skipz
  6438  0166  2969               	goto	u2605
  6439  0167  3002               	movlw	2
  6440  0168  0249               	subwf	LCD_int@dem,w
  6441  0169                     u2605:
  6442  0169  1C03               	skipc
  6443  016A  296C               	goto	u2601
  6444  016B  296D               	goto	u2600
  6445  016C                     u2601:
  6446  016C  29E4               	goto	l496
  6447  016D                     u2600:
  6448  016D                     l3084:
  6449                           
  6450                           ;LCD_I2C.c: 172:         {;LCD_I2C.c: 173:             int a2=1;
  6451  016D  3001               	movlw	1
  6452  016E  1283               	bcf	3,5	;RP0=0, select bank0
  6453  016F  1303               	bcf	3,6	;RP1=0, select bank0
  6454  0170  00C7               	movwf	LCD_int@a2
  6455  0171  3000               	movlw	0
  6456  0172  00C8               	movwf	LCD_int@a2+1
  6457  0173                     l3086:
  6458                           
  6459                           ;LCD_I2C.c: 174:             for(int i=0; i<(dem-1); i++)
  6460  0173  01C5               	clrf	LCD_int@i
  6461  0174  01C6               	clrf	LCD_int@i+1
  6462  0175  2991               	goto	l3092
  6463  0176                     l3088:
  6464                           
  6465                           ;LCD_I2C.c: 175:             {;LCD_I2C.c: 176:                 a2*=10;
  6466  0176  300A               	movlw	10
  6467  0177  00F0               	movwf	___wmul@multiplier
  6468  0178  3000               	movlw	0
  6469  0179  00F1               	movwf	___wmul@multiplier+1
  6470  017A  1283               	bcf	3,5	;RP0=0, select bank0
  6471  017B  1303               	bcf	3,6	;RP1=0, select bank0
  6472  017C  0848               	movf	LCD_int@a2+1,w
  6473  017D  00F3               	movwf	___wmul@multiplicand+1
  6474  017E  0847               	movf	LCD_int@a2,w
  6475  017F  00F2               	movwf	___wmul@multiplicand
  6476  0180  160A  118A  22F9  120A  118A  	fcall	___wmul
  6477  0185  0871               	movf	?___wmul+1,w
  6478  0186  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0187  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0188  00C8               	movwf	LCD_int@a2+1
  6481  0189  0870               	movf	?___wmul,w
  6482  018A  00C7               	movwf	LCD_int@a2
  6483  018B                     l3090:
  6484                           
  6485                           ;LCD_I2C.c: 177:             }
  6486  018B  3001               	movlw	1
  6487  018C  07C5               	addwf	LCD_int@i,f
  6488  018D  1803               	skipnc
  6489  018E  0AC6               	incf	LCD_int@i+1,f
  6490  018F  3000               	movlw	0
  6491  0190  07C6               	addwf	LCD_int@i+1,f
  6492  0191                     l3092:
  6493  0191  0849               	movf	LCD_int@dem,w
  6494  0192  3EFF               	addlw	255
  6495  0193  00FA               	movwf	??_LCD_int
  6496  0194  084A               	movf	LCD_int@dem+1,w
  6497  0195  1803               	skipnc
  6498  0196  3E01               	addlw	1
  6499  0197  3EFF               	addlw	255
  6500  0198  00FB               	movwf	??_LCD_int+1
  6501  0199  0846               	movf	LCD_int@i+1,w
  6502  019A  3A80               	xorlw	128
  6503  019B  00FC               	movwf	??_LCD_int+2
  6504  019C  087B               	movf	??_LCD_int+1,w
  6505  019D  3A80               	xorlw	128
  6506  019E  027C               	subwf	??_LCD_int+2,w
  6507  019F  1D03               	skipz
  6508  01A0  29A3               	goto	u2615
  6509  01A1  087A               	movf	??_LCD_int,w
  6510  01A2  0245               	subwf	LCD_int@i,w
  6511  01A3                     u2615:
  6512  01A3  1C03               	skipc
  6513  01A4  29A6               	goto	u2611
  6514  01A5  29A7               	goto	u2610
  6515  01A6                     u2611:
  6516  01A6  2976               	goto	l3088
  6517  01A7                     u2610:
  6518  01A7                     l3094:
  6519                           
  6520                           ;LCD_I2C.c: 178:             a1=value/a2;
  6521  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  6522  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  6523  01A9  0848               	movf	LCD_int@a2+1,w
  6524  01AA  00F1               	movwf	___lwdiv@divisor+1
  6525  01AB  0847               	movf	LCD_int@a2,w
  6526  01AC  00F0               	movwf	___lwdiv@divisor
  6527  01AD  0879               	movf	LCD_int@value+1,w
  6528  01AE  00F3               	movwf	___lwdiv@dividend+1
  6529  01AF  0878               	movf	LCD_int@value,w
  6530  01B0  00F2               	movwf	___lwdiv@dividend
  6531  01B1  120A  158A  21F3  120A  118A  	fcall	___lwdiv
  6532  01B6  0871               	movf	?___lwdiv+1,w
  6533  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  6534  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  6535  01B9  00C4               	movwf	LCD_int@a1+1
  6536  01BA  0870               	movf	?___lwdiv,w
  6537  01BB  00C3               	movwf	LCD_int@a1
  6538                           
  6539                           ;LCD_I2C.c: 179:             LCD_putc((a1+48));
  6540  01BC  0843               	movf	LCD_int@a1,w
  6541  01BD  3E30               	addlw	48
  6542  01BE  160A  118A  267A  120A  118A  	fcall	_LCD_putc
  6543                           
  6544                           ;LCD_I2C.c: 180:             value %= a2;
  6545  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  6546  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  6547  01C5  0848               	movf	LCD_int@a2+1,w
  6548  01C6  00F1               	movwf	___lwmod@divisor+1
  6549  01C7  0847               	movf	LCD_int@a2,w
  6550  01C8  00F0               	movwf	___lwmod@divisor
  6551  01C9  0879               	movf	LCD_int@value+1,w
  6552  01CA  00F3               	movwf	___lwmod@dividend+1
  6553  01CB  0878               	movf	LCD_int@value,w
  6554  01CC  00F2               	movwf	___lwmod@dividend
  6555  01CD  160A  118A  23D6  120A  118A  	fcall	___lwmod
  6556  01D2  0871               	movf	?___lwmod+1,w
  6557  01D3  00F9               	movwf	LCD_int@value+1
  6558  01D4  0870               	movf	?___lwmod,w
  6559  01D5  00F8               	movwf	LCD_int@value
  6560  01D6                     l3096:
  6561                           
  6562                           ;LCD_I2C.c: 181:             dem--;
  6563  01D6  30FF               	movlw	255
  6564  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  6565  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  6566  01D9  07C9               	addwf	LCD_int@dem,f
  6567  01DA  1803               	skipnc
  6568  01DB  0ACA               	incf	LCD_int@dem+1,f
  6569  01DC  30FF               	movlw	255
  6570  01DD  07CA               	addwf	LCD_int@dem+1,f
  6571  01DE                     l3098:
  6572                           
  6573                           ;LCD_I2C.c: 182:         }while(dem!=0);
  6574  01DE  0849               	movf	LCD_int@dem,w
  6575  01DF  044A               	iorwf	LCD_int@dem+1,w
  6576  01E0  1D03               	btfss	3,2
  6577  01E1  29E3               	goto	u2621
  6578  01E2  29E4               	goto	u2620
  6579  01E3                     u2621:
  6580  01E3  296D               	goto	l3084
  6581  01E4                     u2620:
  6582  01E4                     l496:
  6583  01E4  0008               	return
  6584  01E5                     __end_of_LCD_int:
  6585                           
  6586                           	psect	text23
  6587  13D6                     __ptext23:	
  6588 ;; *************** function ___lwmod *****************
  6589 ;; Defined at:
  6590 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  divisor         2    0[COMMON] unsigned int 
  6593 ;;  dividend        2    2[COMMON] unsigned int 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  counter         1    5[COMMON] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  2    0[COMMON] unsigned int 
  6598 ;; Registers used:
  6599 ;;		wreg, status,2, status,0
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6605 ;;      Params:         4       0       0       0       0
  6606 ;;      Locals:         1       0       0       0       0
  6607 ;;      Temps:          1       0       0       0       0
  6608 ;;      Totals:         6       0       0       0       0
  6609 ;;Total ram usage:        6 bytes
  6610 ;; Hardware stack levels used: 1
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_LCD_int
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           
  6619                           ;psect for function ___lwmod
  6620  13D6                     ___lwmod:
  6621  13D6                     l2876:	
  6622                           ;incstack = 0
  6623                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6624                           
  6625  13D6  0870               	movf	___lwmod@divisor,w
  6626  13D7  0471               	iorwf	___lwmod@divisor+1,w
  6627  13D8  1903               	btfsc	3,2
  6628  13D9  2BDB               	goto	u2251
  6629  13DA  2BDC               	goto	u2250
  6630  13DB                     u2251:
  6631  13DB  2C0B               	goto	l2894
  6632  13DC                     u2250:
  6633  13DC                     l2878:
  6634  13DC  01F5               	clrf	___lwmod@counter
  6635  13DD  0AF5               	incf	___lwmod@counter,f
  6636  13DE  2BEA               	goto	l2884
  6637  13DF                     l2880:
  6638  13DF  3001               	movlw	1
  6639  13E0                     u2265:
  6640  13E0  1003               	clrc
  6641  13E1  0DF0               	rlf	___lwmod@divisor,f
  6642  13E2  0DF1               	rlf	___lwmod@divisor+1,f
  6643  13E3  3EFF               	addlw	-1
  6644  13E4  1D03               	skipz
  6645  13E5  2BE0               	goto	u2265
  6646  13E6                     l2882:
  6647  13E6  3001               	movlw	1
  6648  13E7  00F4               	movwf	??___lwmod
  6649  13E8  0874               	movf	??___lwmod,w
  6650  13E9  07F5               	addwf	___lwmod@counter,f
  6651  13EA                     l2884:
  6652  13EA  1FF1               	btfss	___lwmod@divisor+1,7
  6653  13EB  2BED               	goto	u2271
  6654  13EC  2BEE               	goto	u2270
  6655  13ED                     u2271:
  6656  13ED  2BDF               	goto	l2880
  6657  13EE                     u2270:
  6658  13EE                     l2886:
  6659  13EE  0871               	movf	___lwmod@divisor+1,w
  6660  13EF  0273               	subwf	___lwmod@dividend+1,w
  6661  13F0  1D03               	skipz
  6662  13F1  2BF4               	goto	u2285
  6663  13F2  0870               	movf	___lwmod@divisor,w
  6664  13F3  0272               	subwf	___lwmod@dividend,w
  6665  13F4                     u2285:
  6666  13F4  1C03               	skipc
  6667  13F5  2BF7               	goto	u2281
  6668  13F6  2BF8               	goto	u2280
  6669  13F7                     u2281:
  6670  13F7  2BFE               	goto	l2890
  6671  13F8                     u2280:
  6672  13F8                     l2888:
  6673  13F8  0870               	movf	___lwmod@divisor,w
  6674  13F9  02F2               	subwf	___lwmod@dividend,f
  6675  13FA  0871               	movf	___lwmod@divisor+1,w
  6676  13FB  1C03               	skipc
  6677  13FC  03F3               	decf	___lwmod@dividend+1,f
  6678  13FD  02F3               	subwf	___lwmod@dividend+1,f
  6679  13FE                     l2890:
  6680  13FE  3001               	movlw	1
  6681  13FF                     u2295:
  6682  13FF  1003               	clrc
  6683  1400  0CF1               	rrf	___lwmod@divisor+1,f
  6684  1401  0CF0               	rrf	___lwmod@divisor,f
  6685  1402  3EFF               	addlw	-1
  6686  1403  1D03               	skipz
  6687  1404  2BFF               	goto	u2295
  6688  1405                     l2892:
  6689  1405  3001               	movlw	1
  6690  1406  02F5               	subwf	___lwmod@counter,f
  6691  1407  1D03               	btfss	3,2
  6692  1408  2C0A               	goto	u2301
  6693  1409  2C0B               	goto	u2300
  6694  140A                     u2301:
  6695  140A  2BEE               	goto	l2886
  6696  140B                     u2300:
  6697  140B                     l2894:
  6698  140B  0873               	movf	___lwmod@dividend+1,w
  6699  140C  00F1               	movwf	?___lwmod+1
  6700  140D  0872               	movf	___lwmod@dividend,w
  6701  140E  00F0               	movwf	?___lwmod
  6702  140F                     l979:
  6703  140F  0008               	return
  6704  1410                     __end_of___lwmod:
  6705                           
  6706                           	psect	text24
  6707  01E5                     __ptext24:	
  6708 ;; *************** function _Display_Time *****************
  6709 ;; Defined at:
  6710 ;;		line 263 in file "RTC.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6724 ;;      Params:         0       0       0       0       0
  6725 ;;      Locals:         0       0       0       0       0
  6726 ;;      Temps:          0       6       0       0       0
  6727 ;;      Totals:         0       6       0       0       0
  6728 ;;Total ram usage:        6 bytes
  6729 ;; Hardware stack levels used: 1
  6730 ;; Hardware stack levels required when called: 5
  6731 ;; This function calls:
  6732 ;;		_LCD_gotoxy
  6733 ;;		_LCD_puts
  6734 ;;		_RTC_Read_DateTime
  6735 ;;		_sprintf
  6736 ;; This function is called by:
  6737 ;;		_Select_Menu
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           
  6742                           ;psect for function _Display_Time
  6743  01E5                     _Display_Time:
  6744  01E5                     l3130:	
  6745                           ;incstack = 0
  6746                           ; Regs used in _Display_Time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6747                           
  6748                           
  6749                           ;RTC.c: 265:     RTC_Read_DateTime(&RTCbits);
  6750  01E5  303C               	movlw	(low (_RTCbits| 0))& (0+255)
  6751  01E6  160A  118A  26E9  120A  118A  	fcall	_RTC_Read_DateTime
  6752                           
  6753                           ;RTC.c: 267:     switch(RTCbits.week)
  6754  01EB  2A39               	goto	l3148
  6755  01EC                     l3132:
  6756  01EC  30DA               	movlw	low (STR_1| (0+32768))
  6757  01ED  00C3               	movwf	sprintf@f
  6758  01EE  3089               	movlw	high (STR_1| (0+32768))
  6759  01EF  00C4               	movwf	sprintf@f+1
  6760  01F0  30A0               	movlw	(low (_str2| 0))& (0+255)
  6761  01F1  120A  118A  2473  120A  118A  	fcall	_sprintf
  6762  01F6  2A57               	goto	l3150
  6763  01F7                     l3134:
  6764  01F7  30D5               	movlw	low (STR_2| (0+32768))
  6765  01F8  00C3               	movwf	sprintf@f
  6766  01F9  3089               	movlw	high (STR_2| (0+32768))
  6767  01FA  00C4               	movwf	sprintf@f+1
  6768  01FB  30A0               	movlw	(low (_str2| 0))& (0+255)
  6769  01FC  120A  118A  2473  120A  118A  	fcall	_sprintf
  6770  0201  2A57               	goto	l3150
  6771  0202                     l3136:
  6772  0202  30CB               	movlw	low (STR_3| (0+32768))
  6773  0203  00C3               	movwf	sprintf@f
  6774  0204  3089               	movlw	high (STR_3| (0+32768))
  6775  0205  00C4               	movwf	sprintf@f+1
  6776  0206  30A0               	movlw	(low (_str2| 0))& (0+255)
  6777  0207  120A  118A  2473  120A  118A  	fcall	_sprintf
  6778  020C  2A57               	goto	l3150
  6779  020D                     l3138:
  6780  020D  30C6               	movlw	low (STR_4| (0+32768))
  6781  020E  00C3               	movwf	sprintf@f
  6782  020F  3089               	movlw	high (STR_4| (0+32768))
  6783  0210  00C4               	movwf	sprintf@f+1
  6784  0211  30A0               	movlw	(low (_str2| 0))& (0+255)
  6785  0212  120A  118A  2473  120A  118A  	fcall	_sprintf
  6786  0217  2A57               	goto	l3150
  6787  0218                     l3140:
  6788  0218  30DF               	movlw	low (STR_5| (0+32768))
  6789  0219  00C3               	movwf	sprintf@f
  6790  021A  3089               	movlw	high (STR_5| (0+32768))
  6791  021B  00C4               	movwf	sprintf@f+1
  6792  021C  30A0               	movlw	(low (_str2| 0))& (0+255)
  6793  021D  120A  118A  2473  120A  118A  	fcall	_sprintf
  6794  0222  2A57               	goto	l3150
  6795  0223                     l3142:
  6796  0223  30D0               	movlw	low (STR_6| (0+32768))
  6797  0224  00C3               	movwf	sprintf@f
  6798  0225  3089               	movlw	high (STR_6| (0+32768))
  6799  0226  00C4               	movwf	sprintf@f+1
  6800  0227  30A0               	movlw	(low (_str2| 0))& (0+255)
  6801  0228  120A  118A  2473  120A  118A  	fcall	_sprintf
  6802  022D  2A57               	goto	l3150
  6803  022E                     l3144:
  6804  022E  30E4               	movlw	low (STR_7| (0+32768))
  6805  022F  00C3               	movwf	sprintf@f
  6806  0230  3089               	movlw	high (STR_7| (0+32768))
  6807  0231  00C4               	movwf	sprintf@f+1
  6808  0232  30A0               	movlw	(low (_str2| 0))& (0+255)
  6809  0233  120A  118A  2473  120A  118A  	fcall	_sprintf
  6810  0238  2A57               	goto	l3150
  6811  0239                     l3148:
  6812  0239  1283               	bcf	3,5	;RP0=0, select bank0
  6813  023A  1303               	bcf	3,6	;RP1=0, select bank0
  6814  023B  083F               	movf	_RTCbits+3,w
  6815  023C  00D5               	movwf	??_Display_Time
  6816  023D  01D6               	clrf	??_Display_Time+1
  6817                           
  6818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6819                           ; Switch size 1, requested type "simple"
  6820                           ; Number of cases is 1, Range of values is 0 to 0
  6821                           ; switch strategies available:
  6822                           ; Name         Instructions Cycles
  6823                           ; simple_byte            4     3 (average)
  6824                           ; direct_byte           11     8 (fixed)
  6825                           ; jumptable            260     6 (fixed)
  6826                           ;	Chosen strategy is simple_byte
  6827  023E  0856               	movf	??_Display_Time+1,w
  6828  023F  3A00               	xorlw	0	; case 0
  6829  0240  1903               	skipnz
  6830  0241  2A43               	goto	l3968
  6831  0242  2A2E               	goto	l3144
  6832  0243                     l3968:
  6833                           
  6834                           ; Switch size 1, requested type "simple"
  6835                           ; Number of cases is 6, Range of values is 1 to 6
  6836                           ; switch strategies available:
  6837                           ; Name         Instructions Cycles
  6838                           ; simple_byte           19    10 (average)
  6839                           ; direct_byte           29    11 (fixed)
  6840                           ; jumptable            263     9 (fixed)
  6841                           ;	Chosen strategy is simple_byte
  6842  0243  0855               	movf	??_Display_Time,w
  6843  0244  3A01               	xorlw	1	; case 1
  6844  0245  1903               	skipnz
  6845  0246  29EC               	goto	l3132
  6846  0247  3A03               	xorlw	3	; case 2
  6847  0248  1903               	skipnz
  6848  0249  29F7               	goto	l3134
  6849  024A  3A01               	xorlw	1	; case 3
  6850  024B  1903               	skipnz
  6851  024C  2A02               	goto	l3136
  6852  024D  3A07               	xorlw	7	; case 4
  6853  024E  1903               	skipnz
  6854  024F  2A0D               	goto	l3138
  6855  0250  3A01               	xorlw	1	; case 5
  6856  0251  1903               	skipnz
  6857  0252  2A18               	goto	l3140
  6858  0253  3A03               	xorlw	3	; case 6
  6859  0254  1903               	skipnz
  6860  0255  2A23               	goto	l3142
  6861  0256  2A2E               	goto	l3144
  6862  0257                     l3150:
  6863                           
  6864                           ;RTC.c: 278:     AP = (RTCbits.hour & (1<<5));
  6865  0257  1283               	bcf	3,5	;RP0=0, select bank0
  6866  0258  1303               	bcf	3,6	;RP1=0, select bank0
  6867  0259  083E               	movf	_RTCbits+2,w
  6868  025A  3920               	andlw	32
  6869  025B  00D5               	movwf	??_Display_Time
  6870  025C  0855               	movf	??_Display_Time,w
  6871  025D  00EA               	movwf	_AP
  6872  025E                     l3152:
  6873                           
  6874                           ;RTC.c: 279:     if(MODE == 12)
  6875  025E  300C               	movlw	12
  6876  025F  0668               	xorwf	_MODE,w
  6877  0260  0469               	iorwf	_MODE+1,w
  6878  0261  1D03               	btfss	3,2
  6879  0262  2A64               	goto	u2661
  6880  0263  2A65               	goto	u2660
  6881  0264                     u2661:
  6882  0264  2AAC               	goto	l3160
  6883  0265                     u2660:
  6884  0265                     l3154:
  6885                           
  6886                           ;RTC.c: 281:         if(AP == 0)
  6887  0265  086A               	movf	_AP,w
  6888  0266  1D03               	btfss	3,2
  6889  0267  2A69               	goto	u2671
  6890  0268  2A6A               	goto	u2670
  6891  0269                     u2671:
  6892  0269  2A8B               	goto	l3158
  6893  026A                     u2670:
  6894  026A                     l3156:
  6895                           
  6896                           ;RTC.c: 282:         {;RTC.c: 283:             sprintf(&str1[0], " %02x:%02x:%02x AM    
      +                          ", (RTCbits.hour & 0x1F), RTCbits.min, RTCbits.sec);
  6897  026A  3031               	movlw	low (STR_8| (0+32768))
  6898  026B  00C3               	movwf	sprintf@f
  6899  026C  3088               	movlw	high (STR_8| (0+32768))
  6900  026D  00C4               	movwf	sprintf@f+1
  6901  026E  083E               	movf	_RTCbits+2,w
  6902  026F  391F               	andlw	31
  6903  0270  00D5               	movwf	??_Display_Time
  6904  0271  01D6               	clrf	??_Display_Time+1
  6905  0272  0855               	movf	??_Display_Time,w
  6906  0273  00C5               	movwf	?_sprintf+2
  6907  0274  0856               	movf	??_Display_Time+1,w
  6908  0275  00C6               	movwf	?_sprintf+3
  6909  0276  083D               	movf	_RTCbits+1,w
  6910  0277  00D7               	movwf	??_Display_Time+2
  6911  0278  01D8               	clrf	??_Display_Time+3
  6912  0279  0857               	movf	??_Display_Time+2,w
  6913  027A  00C7               	movwf	?_sprintf+4
  6914  027B  0858               	movf	??_Display_Time+3,w
  6915  027C  00C8               	movwf	?_sprintf+5
  6916  027D  083C               	movf	_RTCbits,w
  6917  027E  00D9               	movwf	??_Display_Time+4
  6918  027F  01DA               	clrf	??_Display_Time+5
  6919  0280  0859               	movf	??_Display_Time+4,w
  6920  0281  00C9               	movwf	?_sprintf+6
  6921  0282  085A               	movf	??_Display_Time+5,w
  6922  0283  00CA               	movwf	?_sprintf+7
  6923  0284  30B0               	movlw	(low (_str1| 0))& (0+255)
  6924  0285  120A  118A  2473  120A  118A  	fcall	_sprintf
  6925                           
  6926                           ;RTC.c: 284:         }
  6927  028A  2AD3               	goto	l148
  6928  028B                     l3158:
  6929                           
  6930                           ;RTC.c: 286:         {;RTC.c: 287:             sprintf(&str1[0], " %02x:%02x:%02x PM    
      +                          ", (RTCbits.hour & 0x1F), RTCbits.min, RTCbits.sec);
  6931  028B  3048               	movlw	low (STR_9| (0+32768))
  6932  028C  00C3               	movwf	sprintf@f
  6933  028D  3088               	movlw	high (STR_9| (0+32768))
  6934  028E  00C4               	movwf	sprintf@f+1
  6935  028F  083E               	movf	_RTCbits+2,w
  6936  0290  391F               	andlw	31
  6937  0291  00D5               	movwf	??_Display_Time
  6938  0292  01D6               	clrf	??_Display_Time+1
  6939  0293  0855               	movf	??_Display_Time,w
  6940  0294  00C5               	movwf	?_sprintf+2
  6941  0295  0856               	movf	??_Display_Time+1,w
  6942  0296  00C6               	movwf	?_sprintf+3
  6943  0297  083D               	movf	_RTCbits+1,w
  6944  0298  00D7               	movwf	??_Display_Time+2
  6945  0299  01D8               	clrf	??_Display_Time+3
  6946  029A  0857               	movf	??_Display_Time+2,w
  6947  029B  00C7               	movwf	?_sprintf+4
  6948  029C  0858               	movf	??_Display_Time+3,w
  6949  029D  00C8               	movwf	?_sprintf+5
  6950  029E  083C               	movf	_RTCbits,w
  6951  029F  00D9               	movwf	??_Display_Time+4
  6952  02A0  01DA               	clrf	??_Display_Time+5
  6953  02A1  0859               	movf	??_Display_Time+4,w
  6954  02A2  00C9               	movwf	?_sprintf+6
  6955  02A3  085A               	movf	??_Display_Time+5,w
  6956  02A4  00CA               	movwf	?_sprintf+7
  6957  02A5  30B0               	movlw	(low (_str1| 0))& (0+255)
  6958  02A6  120A  118A  2473  120A  118A  	fcall	_sprintf
  6959  02AB  2AD3               	goto	l148
  6960  02AC                     l3160:
  6961  02AC  3018               	movlw	24
  6962  02AD  0668               	xorwf	_MODE,w
  6963  02AE  0469               	iorwf	_MODE+1,w
  6964  02AF  1D03               	btfss	3,2
  6965  02B0  2AB2               	goto	u2681
  6966  02B1  2AB3               	goto	u2680
  6967  02B2                     u2681:
  6968  02B2  2AD3               	goto	l148
  6969  02B3                     u2680:
  6970  02B3                     l3162:
  6971                           
  6972                           ;RTC.c: 290:     {;RTC.c: 291:         sprintf(&str1[0], " %02x:%02x:%02x       ", (RTCb
      +                          its.hour & 0x3F), RTCbits.min, RTCbits.sec);
  6973  02B3  301A               	movlw	low (STR_10| (0+32768))
  6974  02B4  00C3               	movwf	sprintf@f
  6975  02B5  3088               	movlw	high (STR_10| (0+32768))
  6976  02B6  00C4               	movwf	sprintf@f+1
  6977  02B7  083E               	movf	_RTCbits+2,w
  6978  02B8  393F               	andlw	63
  6979  02B9  00D5               	movwf	??_Display_Time
  6980  02BA  01D6               	clrf	??_Display_Time+1
  6981  02BB  0855               	movf	??_Display_Time,w
  6982  02BC  00C5               	movwf	?_sprintf+2
  6983  02BD  0856               	movf	??_Display_Time+1,w
  6984  02BE  00C6               	movwf	?_sprintf+3
  6985  02BF  083D               	movf	_RTCbits+1,w
  6986  02C0  00D7               	movwf	??_Display_Time+2
  6987  02C1  01D8               	clrf	??_Display_Time+3
  6988  02C2  0857               	movf	??_Display_Time+2,w
  6989  02C3  00C7               	movwf	?_sprintf+4
  6990  02C4  0858               	movf	??_Display_Time+3,w
  6991  02C5  00C8               	movwf	?_sprintf+5
  6992  02C6  083C               	movf	_RTCbits,w
  6993  02C7  00D9               	movwf	??_Display_Time+4
  6994  02C8  01DA               	clrf	??_Display_Time+5
  6995  02C9  0859               	movf	??_Display_Time+4,w
  6996  02CA  00C9               	movwf	?_sprintf+6
  6997  02CB  085A               	movf	??_Display_Time+5,w
  6998  02CC  00CA               	movwf	?_sprintf+7
  6999  02CD  30B0               	movlw	(low (_str1| 0))& (0+255)
  7000  02CE  120A  118A  2473  120A  118A  	fcall	_sprintf
  7001  02D3                     l148:
  7002                           
  7003                           ;RTC.c: 294:     sprintf(&str2[4], ",%02x/%02x/20%02x", RTCbits.date, RTCbits.month, RTC
      +                          bits.year);
  7004  02D3  3071               	movlw	low (STR_11| (0+32768))
  7005  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  7006  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  7007  02D6  00C3               	movwf	sprintf@f
  7008  02D7  3088               	movlw	high (STR_11| (0+32768))
  7009  02D8  00C4               	movwf	sprintf@f+1
  7010  02D9  0840               	movf	_RTCbits+4,w
  7011  02DA  00D5               	movwf	??_Display_Time
  7012  02DB  01D6               	clrf	??_Display_Time+1
  7013  02DC  0855               	movf	??_Display_Time,w
  7014  02DD  00C5               	movwf	?_sprintf+2
  7015  02DE  0856               	movf	??_Display_Time+1,w
  7016  02DF  00C6               	movwf	?_sprintf+3
  7017  02E0  0841               	movf	_RTCbits+5,w
  7018  02E1  00D7               	movwf	??_Display_Time+2
  7019  02E2  01D8               	clrf	??_Display_Time+3
  7020  02E3  0857               	movf	??_Display_Time+2,w
  7021  02E4  00C7               	movwf	?_sprintf+4
  7022  02E5  0858               	movf	??_Display_Time+3,w
  7023  02E6  00C8               	movwf	?_sprintf+5
  7024  02E7  0842               	movf	_RTCbits+6,w
  7025  02E8  00D9               	movwf	??_Display_Time+4
  7026  02E9  01DA               	clrf	??_Display_Time+5
  7027  02EA  0859               	movf	??_Display_Time+4,w
  7028  02EB  00C9               	movwf	?_sprintf+6
  7029  02EC  085A               	movf	??_Display_Time+5,w
  7030  02ED  00CA               	movwf	?_sprintf+7
  7031  02EE  30A4               	movlw	(low ((_str2| 0+4)))& (0+255)
  7032  02EF  120A  118A  2473  120A  118A  	fcall	_sprintf
  7033  02F4                     l3164:
  7034                           
  7035                           ;RTC.c: 295:     LCD_gotoxy(1,1);
  7036  02F4  01F6               	clrf	LCD_gotoxy@y
  7037  02F5  0AF6               	incf	LCD_gotoxy@y,f
  7038  02F6  3001               	movlw	1
  7039  02F7  160A  118A  236A  120A  118A  	fcall	_LCD_gotoxy
  7040  02FC                     l3166:
  7041                           
  7042                           ;RTC.c: 296:     LCD_puts(&str2[0]);
  7043  02FC  30A0               	movlw	(low (_str2| 0))& (0+255)
  7044  02FD  00F6               	movwf	LCD_puts@str
  7045  02FE  3000               	movlw	0
  7046  02FF  00F7               	movwf	LCD_puts@str+1
  7047  0300  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  7048                           
  7049                           ;RTC.c: 297:     LCD_gotoxy(2,1);
  7050  0305  01F6               	clrf	LCD_gotoxy@y
  7051  0306  0AF6               	incf	LCD_gotoxy@y,f
  7052  0307  3002               	movlw	2
  7053  0308  160A  118A  236A  120A  118A  	fcall	_LCD_gotoxy
  7054  030D                     l3168:
  7055                           
  7056                           ;RTC.c: 298:     LCD_puts(&str1[0]);
  7057  030D  30B0               	movlw	(low (_str1| 0))& (0+255)
  7058  030E  00F6               	movwf	LCD_puts@str
  7059  030F  3000               	movlw	0
  7060  0310  00F7               	movwf	LCD_puts@str+1
  7061  0311  160A  118A  244B  120A  118A  	fcall	_LCD_puts
  7062  0316                     l150:
  7063  0316  0008               	return
  7064  0317                     __end_of_Display_Time:
  7065                           
  7066                           	psect	text25
  7067  0473                     __ptext25:	
  7068 ;; *************** function _sprintf *****************
  7069 ;; Defined at:
  7070 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  sp              1    wreg     PTR unsigned char 
  7073 ;;		 -> str1(16), str2(16), 
  7074 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  7075 ;;		 -> STR_11(18), STR_10(23), STR_9(23), STR_8(23), 
  7076 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  7077 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  sp              1   16[BANK0 ] PTR unsigned char 
  7080 ;;		 -> str1(16), str2(16), 
  7081 ;;  idx             1    8[BANK0 ] unsigned char 
  7082 ;;  tmpval          4    0        struct .
  7083 ;;  width           2   14[BANK0 ] int 
  7084 ;;  val             2   11[BANK0 ] unsigned int 
  7085 ;;  cp              2    0        PTR const unsigned char 
  7086 ;;  len             2    0        unsigned int 
  7087 ;;  c               1   17[BANK0 ] unsigned char 
  7088 ;;  prec            1   13[BANK0 ] char 
  7089 ;;  flag            1   10[BANK0 ] unsigned char 
  7090 ;;  ap              1    9[BANK0 ] PTR void [1]
  7091 ;;		 -> ?_sprintf(2), 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  2    0[BANK0 ] int 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7101 ;;      Params:         0       8       0       0       0
  7102 ;;      Locals:         0      10       0       0       0
  7103 ;;      Temps:          4       0       0       0       0
  7104 ;;      Totals:         4      18       0       0       0
  7105 ;;Total ram usage:       22 bytes
  7106 ;; Hardware stack levels used: 1
  7107 ;; Hardware stack levels required when called: 1
  7108 ;; This function calls:
  7109 ;;		___lwdiv
  7110 ;;		___wmul
  7111 ;;		_isdigit
  7112 ;; This function is called by:
  7113 ;;		_Display_Time
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           
  7118                           ;psect for function _sprintf
  7119  0473                     _sprintf:
  7120                           
  7121                           ;incstack = 0
  7122                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7123                           ;sprintf@sp stored from wreg
  7124  0473  1283               	bcf	3,5	;RP0=0, select bank0
  7125  0474  1303               	bcf	3,6	;RP1=0, select bank0
  7126  0475  00D3               	movwf	sprintf@sp
  7127  0476                     l2934:
  7128                           
  7129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  7130  0476  3045               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  7131  0477  00F8               	movwf	??_sprintf
  7132  0478  0878               	movf	??_sprintf,w
  7133  0479  00CC               	movwf	sprintf@ap
  7134                           
  7135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  7136  047A  2E06               	goto	l3018
  7137  047B                     l2936:
  7138                           
  7139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  7140  047B  3025               	movlw	37
  7141  047C  0654               	xorwf	sprintf@c,w
  7142  047D  1903               	btfsc	3,2
  7143  047E  2C80               	goto	u2351
  7144  047F  2C81               	goto	u2350
  7145  0480                     u2351:
  7146  0480  2C8D               	goto	l2942
  7147  0481                     u2350:
  7148  0481                     l2938:
  7149                           
  7150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  7151  0481  0854               	movf	sprintf@c,w
  7152  0482  00F8               	movwf	??_sprintf
  7153  0483  0853               	movf	sprintf@sp,w
  7154  0484  0084               	movwf	4
  7155  0485  0878               	movf	??_sprintf,w
  7156  0486  1383               	bcf	3,7	;select IRP bank0
  7157  0487  0080               	movwf	0
  7158  0488                     l2940:
  7159  0488  3001               	movlw	1
  7160  0489  00F8               	movwf	??_sprintf
  7161  048A  0878               	movf	??_sprintf,w
  7162  048B  07D3               	addwf	sprintf@sp,f
  7163                           
  7164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  7165  048C  2E06               	goto	l3018
  7166  048D                     l2942:
  7167                           
  7168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  7169  048D  01D1               	clrf	sprintf@width
  7170  048E  01D2               	clrf	sprintf@width+1
  7171                           
  7172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  7173  048F  01CD               	clrf	sprintf@flag
  7174  0490  2C98               	goto	l2948
  7175  0491                     l663:	
  7176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 596:    case '0':
  7177                           
  7178                           
  7179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  7180  0491  154D               	bsf	sprintf@flag,2
  7181  0492                     l2944:
  7182                           
  7183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 598:     f++;
  7184  0492  3001               	movlw	1
  7185  0493  07C3               	addwf	sprintf@f,f
  7186  0494  1803               	skipnc
  7187  0495  0AC4               	incf	sprintf@f+1,f
  7188  0496  3000               	movlw	0
  7189  0497  07C4               	addwf	sprintf@f+1,f
  7190  0498                     l2948:	
  7191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  7192                           
  7193  0498  0844               	movf	sprintf@f+1,w
  7194  0499  00FF               	movwf	btemp+1
  7195  049A  0843               	movf	sprintf@f,w
  7196  049B  0084               	movwf	4
  7197  049C  120A  158A  2000  120A  118A  	fcall	stringtab
  7198  04A1  00F8               	movwf	??_sprintf
  7199  04A2  01F9               	clrf	??_sprintf+1
  7200                           
  7201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7202                           ; Switch size 1, requested type "simple"
  7203                           ; Number of cases is 1, Range of values is 0 to 0
  7204                           ; switch strategies available:
  7205                           ; Name         Instructions Cycles
  7206                           ; simple_byte            4     3 (average)
  7207                           ; direct_byte           11     8 (fixed)
  7208                           ; jumptable            260     6 (fixed)
  7209                           ;	Chosen strategy is simple_byte
  7210  04A3  0879               	movf	??_sprintf+1,w
  7211  04A4  3A00               	xorlw	0	; case 0
  7212  04A5  1903               	skipnz
  7213  04A6  2CA8               	goto	l3970
  7214  04A7  2CAD               	goto	l2950
  7215  04A8                     l3970:
  7216                           
  7217                           ; Switch size 1, requested type "simple"
  7218                           ; Number of cases is 1, Range of values is 48 to 48
  7219                           ; switch strategies available:
  7220                           ; Name         Instructions Cycles
  7221                           ; simple_byte            4     3 (average)
  7222                           ; direct_byte           14    11 (fixed)
  7223                           ; jumptable            263     9 (fixed)
  7224                           ;	Chosen strategy is simple_byte
  7225  04A8  0878               	movf	??_sprintf,w
  7226  04A9  3A30               	xorlw	48	; case 48
  7227  04AA  1903               	skipnz
  7228  04AB  2C91               	goto	l663
  7229  04AC  2CAD               	goto	l2950
  7230  04AD                     l2950:
  7231                           
  7232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  7233  04AD  0844               	movf	sprintf@f+1,w
  7234  04AE  00FF               	movwf	btemp+1
  7235  04AF  0843               	movf	sprintf@f,w
  7236  04B0  0084               	movwf	4
  7237  04B1  120A  158A  2000  120A  118A  	fcall	stringtab
  7238  04B6  160A  118A  2239  120A  118A  	fcall	_isdigit
  7239  04BB  1C03               	btfss	3,0
  7240  04BC  2CBE               	goto	u2361
  7241  04BD  2CBF               	goto	u2360
  7242  04BE                     u2361:
  7243  04BE  2D05               	goto	l2964
  7244  04BF                     u2360:
  7245  04BF                     l2952:
  7246                           
  7247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  7248  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  7249  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  7250  04C1  01D1               	clrf	sprintf@width
  7251  04C2  01D2               	clrf	sprintf@width+1
  7252  04C3                     l2954:
  7253                           
  7254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  7255  04C3  300A               	movlw	10
  7256  04C4  00F0               	movwf	___wmul@multiplier
  7257  04C5  3000               	movlw	0
  7258  04C6  00F1               	movwf	___wmul@multiplier+1
  7259  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  7260  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  7261  04C9  0852               	movf	sprintf@width+1,w
  7262  04CA  00F3               	movwf	___wmul@multiplicand+1
  7263  04CB  0851               	movf	sprintf@width,w
  7264  04CC  00F2               	movwf	___wmul@multiplicand
  7265  04CD  160A  118A  22F9  120A  118A  	fcall	___wmul
  7266  04D2  0871               	movf	?___wmul+1,w
  7267  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  7268  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  7269  04D5  00D2               	movwf	sprintf@width+1
  7270  04D6  0870               	movf	?___wmul,w
  7271  04D7  00D1               	movwf	sprintf@width
  7272  04D8                     l2956:
  7273                           
  7274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  7275  04D8  0844               	movf	sprintf@f+1,w
  7276  04D9  00FF               	movwf	btemp+1
  7277  04DA  0843               	movf	sprintf@f,w
  7278  04DB  0084               	movwf	4
  7279  04DC  120A  158A  2000  120A  118A  	fcall	stringtab
  7280  04E1  3ED0               	addlw	208
  7281  04E2  00F8               	movwf	??_sprintf
  7282  04E3  30FF               	movlw	255
  7283  04E4  1803               	skipnc
  7284  04E5  3000               	movlw	0
  7285  04E6  00F9               	movwf	??_sprintf+1
  7286  04E7  0878               	movf	??_sprintf,w
  7287  04E8  07D1               	addwf	sprintf@width,f
  7288  04E9  1803               	skipnc
  7289  04EA  0AD2               	incf	sprintf@width+1,f
  7290  04EB  0879               	movf	??_sprintf+1,w
  7291  04EC  07D2               	addwf	sprintf@width+1,f
  7292  04ED                     l2958:
  7293  04ED  3001               	movlw	1
  7294  04EE  07C3               	addwf	sprintf@f,f
  7295  04EF  1803               	skipnc
  7296  04F0  0AC4               	incf	sprintf@f+1,f
  7297  04F1  3000               	movlw	0
  7298  04F2  07C4               	addwf	sprintf@f+1,f
  7299  04F3                     l2960:
  7300                           
  7301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  7302  04F3  0844               	movf	sprintf@f+1,w
  7303  04F4  00FF               	movwf	btemp+1
  7304  04F5  0843               	movf	sprintf@f,w
  7305  04F6  0084               	movwf	4
  7306  04F7  120A  158A  2000  120A  118A  	fcall	stringtab
  7307  04FC  160A  118A  2239  120A  118A  	fcall	_isdigit
  7308  0501  1803               	btfsc	3,0
  7309  0502  2D04               	goto	u2371
  7310  0503  2D05               	goto	u2370
  7311  0504                     u2371:
  7312  0504  2CC3               	goto	l2954
  7313  0505                     u2370:
  7314  0505                     l2964:
  7315  0505  1283               	bcf	3,5	;RP0=0, select bank0
  7316  0506  1303               	bcf	3,6	;RP1=0, select bank0
  7317  0507  0844               	movf	sprintf@f+1,w
  7318  0508  00F9               	movwf	??_sprintf+1
  7319  0509  0843               	movf	sprintf@f,w
  7320  050A  00F8               	movwf	??_sprintf
  7321  050B  0AC3               	incf	sprintf@f,f
  7322  050C  1903               	skipnz
  7323  050D  0AC4               	incf	sprintf@f+1,f
  7324  050E  0879               	movf	??_sprintf+1,w
  7325  050F  00FF               	movwf	btemp+1
  7326  0510  0878               	movf	??_sprintf,w
  7327  0511  0084               	movwf	4
  7328  0512  120A  158A  2000  120A  118A  	fcall	stringtab
  7329  0517  00D4               	movwf	sprintf@c
  7330  0518  00FA               	movwf	??_sprintf+2
  7331  0519  01FB               	clrf	??_sprintf+3
  7332                           
  7333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7334                           ; Switch size 1, requested type "simple"
  7335                           ; Number of cases is 1, Range of values is 0 to 0
  7336                           ; switch strategies available:
  7337                           ; Name         Instructions Cycles
  7338                           ; simple_byte            4     3 (average)
  7339                           ; direct_byte           11     8 (fixed)
  7340                           ; jumptable            260     6 (fixed)
  7341                           ;	Chosen strategy is simple_byte
  7342  051A  087B               	movf	??_sprintf+3,w
  7343  051B  3A00               	xorlw	0	; case 0
  7344  051C  1903               	skipnz
  7345  051D  2D1F               	goto	l3972
  7346  051E  2E06               	goto	l3018
  7347  051F                     l3972:
  7348                           
  7349                           ; Switch size 1, requested type "simple"
  7350                           ; Number of cases is 2, Range of values is 0 to 120
  7351                           ; switch strategies available:
  7352                           ; Name         Instructions Cycles
  7353                           ; simple_byte            7     4 (average)
  7354                           ; jumptable            260     6 (fixed)
  7355                           ;	Chosen strategy is simple_byte
  7356  051F  087A               	movf	??_sprintf+2,w
  7357  0520  3A00               	xorlw	0	; case 0
  7358  0521  1903               	skipnz
  7359  0522  2E1E               	goto	l3020
  7360  0523  3A78               	xorlw	120	; case 120
  7361  0524  1903               	skipnz
  7362  0525  2D27               	goto	l2966
  7363  0526  2E06               	goto	l3018
  7364  0527                     l2966:
  7365                           
  7366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7367  0527  084C               	movf	sprintf@ap,w
  7368  0528  0084               	movwf	4
  7369  0529  1383               	bcf	3,7	;select IRP bank0
  7370  052A  0800               	movf	0,w
  7371  052B  00CE               	movwf	sprintf@val
  7372  052C  0A84               	incf	4,f
  7373  052D  0800               	movf	0,w
  7374  052E  00CF               	movwf	sprintf@val+1
  7375  052F                     l2968:
  7376  052F  3002               	movlw	2
  7377  0530  00F8               	movwf	??_sprintf
  7378  0531  0878               	movf	??_sprintf,w
  7379  0532  07CC               	addwf	sprintf@ap,f
  7380  0533                     l2970:
  7381                           
  7382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1342:    for(c = 1 ; c !=
      +                           sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7383  0533  01D4               	clrf	sprintf@c
  7384  0534  0AD4               	incf	sprintf@c,f
  7385  0535                     l2976:
  7386                           
  7387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  7388  0535  0854               	movf	sprintf@c,w
  7389  0536  00F8               	movwf	??_sprintf
  7390  0537  0778               	addwf	??_sprintf,w
  7391  0538  3E12               	addlw	low (_hexpowers| (0+32768))
  7392  0539  0084               	movwf	4
  7393  053A  3088               	movlw	high (_hexpowers| (0+32768))
  7394  053B  1803               	skipnc
  7395  053C  3E01               	addlw	1
  7396  053D  00FF               	movwf	btemp+1
  7397  053E  120A  158A  2000  120A  118A  	fcall	stringtab
  7398  0543  00F9               	movwf	??_sprintf+1
  7399  0544  120A  158A  2000  120A  118A  	fcall	stringtab
  7400  0549  00FA               	movwf	??_sprintf+2
  7401  054A  087A               	movf	??_sprintf+2,w
  7402  054B  024F               	subwf	sprintf@val+1,w
  7403  054C  1D03               	skipz
  7404  054D  2D50               	goto	u2385
  7405  054E  0879               	movf	??_sprintf+1,w
  7406  054F  024E               	subwf	sprintf@val,w
  7407  0550                     u2385:
  7408  0550  1803               	skipnc
  7409  0551  2D53               	goto	u2381
  7410  0552  2D54               	goto	u2380
  7411  0553                     u2381:
  7412  0553  2D55               	goto	l2980
  7413  0554                     u2380:
  7414  0554  2D5F               	goto	l2982
  7415  0555                     l2980:
  7416  0555  3001               	movlw	1
  7417  0556  00F8               	movwf	??_sprintf
  7418  0557  0878               	movf	??_sprintf,w
  7419  0558  07D4               	addwf	sprintf@c,f
  7420  0559  3004               	movlw	4
  7421  055A  0654               	xorwf	sprintf@c,w
  7422  055B  1D03               	btfss	3,2
  7423  055C  2D5E               	goto	u2391
  7424  055D  2D5F               	goto	u2390
  7425  055E                     u2391:
  7426  055E  2D35               	goto	l2976
  7427  055F                     u2390:
  7428  055F                     l2982:
  7429                           
  7430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  7431  055F  0852               	movf	sprintf@width+1,w
  7432  0560  3A80               	xorlw	128
  7433  0561  3C80               	sublw	128
  7434  0562  1D03               	skipz
  7435  0563  2D66               	goto	u2405
  7436  0564  0851               	movf	sprintf@width,w
  7437  0565  0254               	subwf	sprintf@c,w
  7438  0566                     u2405:
  7439  0566  1803               	skipnc
  7440  0567  2D69               	goto	u2401
  7441  0568  2D6A               	goto	u2400
  7442  0569                     u2401:
  7443  0569  2D76               	goto	l2986
  7444  056A                     u2400:
  7445  056A                     l2984:
  7446                           
  7447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  7448  056A  1283               	bcf	3,5	;RP0=0, select bank0
  7449  056B  1303               	bcf	3,6	;RP1=0, select bank0
  7450  056C  0854               	movf	sprintf@c,w
  7451  056D  00F8               	movwf	??_sprintf
  7452  056E  01F9               	clrf	??_sprintf+1
  7453  056F  0878               	movf	??_sprintf,w
  7454  0570  02D1               	subwf	sprintf@width,f
  7455  0571  0879               	movf	??_sprintf+1,w
  7456  0572  1C03               	skipc
  7457  0573  03D2               	decf	sprintf@width+1,f
  7458  0574  02D2               	subwf	sprintf@width+1,f
  7459  0575  2D7A               	goto	l2988
  7460  0576                     l2986:
  7461                           
  7462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  7463  0576  1283               	bcf	3,5	;RP0=0, select bank0
  7464  0577  1303               	bcf	3,6	;RP1=0, select bank0
  7465  0578  01D1               	clrf	sprintf@width
  7466  0579  01D2               	clrf	sprintf@width+1
  7467  057A                     l2988:
  7468                           
  7469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  7470  057A  1D4D               	btfss	sprintf@flag,2
  7471  057B  2D7D               	goto	u2411
  7472  057C  2D7E               	goto	u2410
  7473  057D                     u2411:
  7474  057D  2D9C               	goto	l2998
  7475  057E                     u2410:
  7476  057E                     l2990:
  7477                           
  7478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  7479  057E  0851               	movf	sprintf@width,w
  7480  057F  0452               	iorwf	sprintf@width+1,w
  7481  0580  1903               	btfsc	3,2
  7482  0581  2D83               	goto	u2421
  7483  0582  2D84               	goto	u2420
  7484  0583                     u2421:
  7485  0583  2DB9               	goto	l3006
  7486  0584                     u2420:
  7487  0584                     l2992:
  7488                           
  7489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  7490  0584  3030               	movlw	48
  7491  0585  00F8               	movwf	??_sprintf
  7492  0586  0853               	movf	sprintf@sp,w
  7493  0587  0084               	movwf	4
  7494  0588  0878               	movf	??_sprintf,w
  7495  0589  1383               	bcf	3,7	;select IRP bank0
  7496  058A  0080               	movwf	0
  7497  058B                     l2994:
  7498  058B  3001               	movlw	1
  7499  058C  00F8               	movwf	??_sprintf
  7500  058D  0878               	movf	??_sprintf,w
  7501  058E  07D3               	addwf	sprintf@sp,f
  7502  058F                     l2996:
  7503  058F  30FF               	movlw	255
  7504  0590  07D1               	addwf	sprintf@width,f
  7505  0591  1803               	skipnc
  7506  0592  0AD2               	incf	sprintf@width+1,f
  7507  0593  30FF               	movlw	255
  7508  0594  07D2               	addwf	sprintf@width+1,f
  7509  0595  0851               	movf	sprintf@width,w
  7510  0596  0452               	iorwf	sprintf@width+1,w
  7511  0597  1D03               	btfss	3,2
  7512  0598  2D9A               	goto	u2431
  7513  0599  2D9B               	goto	u2430
  7514  059A                     u2431:
  7515  059A  2D84               	goto	l2992
  7516  059B                     u2430:
  7517  059B  2DB9               	goto	l3006
  7518  059C                     l2998:
  7519                           
  7520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1450:    if(width
  7521  059C  0851               	movf	sprintf@width,w
  7522  059D  0452               	iorwf	sprintf@width+1,w
  7523  059E  1903               	btfsc	3,2
  7524  059F  2DA1               	goto	u2441
  7525  05A0  2DA2               	goto	u2440
  7526  05A1                     u2441:
  7527  05A1  2DB9               	goto	l3006
  7528  05A2                     u2440:
  7529  05A2                     l3000:
  7530                           
  7531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  7532  05A2  3020               	movlw	32
  7533  05A3  00F8               	movwf	??_sprintf
  7534  05A4  0853               	movf	sprintf@sp,w
  7535  05A5  0084               	movwf	4
  7536  05A6  0878               	movf	??_sprintf,w
  7537  05A7  1383               	bcf	3,7	;select IRP bank0
  7538  05A8  0080               	movwf	0
  7539  05A9                     l3002:
  7540  05A9  3001               	movlw	1
  7541  05AA  00F8               	movwf	??_sprintf
  7542  05AB  0878               	movf	??_sprintf,w
  7543  05AC  07D3               	addwf	sprintf@sp,f
  7544  05AD                     l3004:
  7545  05AD  30FF               	movlw	255
  7546  05AE  07D1               	addwf	sprintf@width,f
  7547  05AF  1803               	skipnc
  7548  05B0  0AD2               	incf	sprintf@width+1,f
  7549  05B1  30FF               	movlw	255
  7550  05B2  07D2               	addwf	sprintf@width+1,f
  7551  05B3  0851               	movf	sprintf@width,w
  7552  05B4  0452               	iorwf	sprintf@width+1,w
  7553  05B5  1D03               	btfss	3,2
  7554  05B6  2DB8               	goto	u2451
  7555  05B7  2DB9               	goto	u2450
  7556  05B8                     u2451:
  7557  05B8  2DA2               	goto	l3000
  7558  05B9                     u2450:
  7559  05B9                     l3006:
  7560                           
  7561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  7562  05B9  0854               	movf	sprintf@c,w
  7563  05BA  00F8               	movwf	??_sprintf
  7564  05BB  0878               	movf	??_sprintf,w
  7565  05BC  00D0               	movwf	sprintf@prec
  7566                           
  7567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  7568  05BD  2DFD               	goto	l3016
  7569  05BE                     l3008:
  7570                           
  7571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Program Fi
      +                          les\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1526:     unsigned char idx = (
      +                          val / hexpowers[(unsigned char)prec]) & 0xF;
  7572  05BE  0850               	movf	sprintf@prec,w
  7573  05BF  00F8               	movwf	??_sprintf
  7574  05C0  0778               	addwf	??_sprintf,w
  7575  05C1  3E12               	addlw	low (_hexpowers| (0+32768))
  7576  05C2  0084               	movwf	4
  7577  05C3  3088               	movlw	high (_hexpowers| (0+32768))
  7578  05C4  1803               	skipnc
  7579  05C5  3E01               	addlw	1
  7580  05C6  00FF               	movwf	btemp+1
  7581  05C7  120A  158A  2000  120A  118A  	fcall	stringtab
  7582  05CC  00F0               	movwf	___lwdiv@divisor
  7583  05CD  120A  158A  2000  120A  118A  	fcall	stringtab
  7584  05D2  00F1               	movwf	___lwdiv@divisor+1
  7585  05D3  084F               	movf	sprintf@val+1,w
  7586  05D4  00F3               	movwf	___lwdiv@dividend+1
  7587  05D5  084E               	movf	sprintf@val,w
  7588  05D6  00F2               	movwf	___lwdiv@dividend
  7589  05D7  120A  158A  21F3  120A  118A  	fcall	___lwdiv
  7590  05DC  0870               	movf	?___lwdiv,w
  7591  05DD  390F               	andlw	15
  7592  05DE  00F9               	movwf	??_sprintf+1
  7593  05DF  0879               	movf	??_sprintf+1,w
  7594  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  7595  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  7596  05E2  00CB               	movwf	sprintf@idx
  7597  05E3                     l3010:
  7598                           
  7599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1532:     c = "01
      +                          23456789abcdef"[idx];
  7600  05E3  084B               	movf	sprintf@idx,w
  7601  05E4  3E83               	addlw	low (STR_52| (0+32768))
  7602  05E5  0084               	movwf	4
  7603  05E6  3088               	movlw	high (STR_52| (0+32768))
  7604  05E7  1803               	skipnc
  7605  05E8  3E01               	addlw	1
  7606  05E9  00FF               	movwf	btemp+1
  7607  05EA  120A  158A  2000  120A  118A  	fcall	stringtab
  7608  05EF  00F8               	movwf	??_sprintf
  7609  05F0  0878               	movf	??_sprintf,w
  7610  05F1  00D4               	movwf	sprintf@c
  7611  05F2                     l3012:
  7612                           
  7613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Program Fi
      +                          les\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  7614  05F2  0854               	movf	sprintf@c,w
  7615  05F3  00F8               	movwf	??_sprintf
  7616  05F4  0853               	movf	sprintf@sp,w
  7617  05F5  0084               	movwf	4
  7618  05F6  0878               	movf	??_sprintf,w
  7619  05F7  1383               	bcf	3,7	;select IRP bank0
  7620  05F8  0080               	movwf	0
  7621  05F9                     l3014:
  7622  05F9  3001               	movlw	1
  7623  05FA  00F8               	movwf	??_sprintf
  7624  05FB  0878               	movf	??_sprintf,w
  7625  05FC  07D3               	addwf	sprintf@sp,f
  7626  05FD                     l3016:
  7627                           
  7628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  7629  05FD  30FF               	movlw	255
  7630  05FE  00F8               	movwf	??_sprintf
  7631  05FF  0878               	movf	??_sprintf,w
  7632  0600  07D0               	addwf	sprintf@prec,f
  7633  0601  0A50               	incf	sprintf@prec,w
  7634  0602  1D03               	btfss	3,2
  7635  0603  2E05               	goto	u2461
  7636  0604  2E06               	goto	u2460
  7637  0605                     u2461:
  7638  0605  2DBE               	goto	l3008
  7639  0606                     u2460:
  7640  0606                     l3018:
  7641                           
  7642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  7643  0606  0844               	movf	sprintf@f+1,w
  7644  0607  00F9               	movwf	??_sprintf+1
  7645  0608  0843               	movf	sprintf@f,w
  7646  0609  00F8               	movwf	??_sprintf
  7647  060A  0AC3               	incf	sprintf@f,f
  7648  060B  1903               	skipnz
  7649  060C  0AC4               	incf	sprintf@f+1,f
  7650  060D  0879               	movf	??_sprintf+1,w
  7651  060E  00FF               	movwf	btemp+1
  7652  060F  0878               	movf	??_sprintf,w
  7653  0610  0084               	movwf	4
  7654  0611  120A  158A  2000  120A  118A  	fcall	stringtab
  7655  0616  00FA               	movwf	??_sprintf+2
  7656  0617  087A               	movf	??_sprintf+2,w
  7657  0618  00D4               	movwf	sprintf@c
  7658  0619  0854               	movf	sprintf@c,w
  7659  061A  1D03               	btfss	3,2
  7660  061B  2E1D               	goto	u2471
  7661  061C  2E1E               	goto	u2470
  7662  061D                     u2471:
  7663  061D  2C7B               	goto	l2936
  7664  061E                     u2470:
  7665  061E                     l3020:
  7666                           
  7667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  7668  061E  0853               	movf	sprintf@sp,w
  7669  061F  0084               	movwf	4
  7670  0620  1383               	bcf	3,7	;select IRP bank0
  7671  0621  0180               	clrf	0
  7672  0622                     l693:
  7673  0622  0008               	return
  7674  0623                     __end_of_sprintf:
  7675                           
  7676                           	psect	text26
  7677  1239                     __ptext26:	
  7678 ;; *************** function _isdigit *****************
  7679 ;; Defined at:
  7680 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  c               1    wreg     unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  c               1    1[COMMON] unsigned char 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;		None               void
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7694 ;;      Params:         0       0       0       0       0
  7695 ;;      Locals:         2       0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0
  7697 ;;      Totals:         2       0       0       0       0
  7698 ;;Total ram usage:        2 bytes
  7699 ;; Hardware stack levels used: 1
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_sprintf
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           
  7708                           ;psect for function _isdigit
  7709  1239                     _isdigit:
  7710                           
  7711                           ;incstack = 0
  7712                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7713                           ;isdigit@c stored from wreg
  7714  1239  00F1               	movwf	isdigit@c
  7715  123A                     l2824:
  7716  123A  01F0               	clrf	_isdigit$1090
  7717  123B                     l2826:
  7718  123B  303A               	movlw	58
  7719  123C  0271               	subwf	isdigit@c,w
  7720  123D  1803               	skipnc
  7721  123E  2A40               	goto	u2121
  7722  123F  2A41               	goto	u2120
  7723  1240                     u2121:
  7724  1240  2A49               	goto	l2832
  7725  1241                     u2120:
  7726  1241                     l2828:
  7727  1241  3030               	movlw	48
  7728  1242  0271               	subwf	isdigit@c,w
  7729  1243  1C03               	skipc
  7730  1244  2A46               	goto	u2131
  7731  1245  2A47               	goto	u2130
  7732  1246                     u2131:
  7733  1246  2A49               	goto	l2832
  7734  1247                     u2130:
  7735  1247                     l2830:
  7736  1247  01F0               	clrf	_isdigit$1090
  7737  1248  0AF0               	incf	_isdigit$1090,f
  7738  1249                     l2832:
  7739  1249  0C70               	rrf	_isdigit$1090,w
  7740  124A                     l1150:
  7741  124A  0008               	return
  7742  124B                     __end_of_isdigit:
  7743                           
  7744                           	psect	text27
  7745  12F9                     __ptext27:	
  7746 ;; *************** function ___wmul *****************
  7747 ;; Defined at:
  7748 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  multiplier      2    0[COMMON] unsigned int 
  7751 ;;  multiplicand    2    2[COMMON] unsigned int 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  product         2    4[COMMON] unsigned int 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  2    0[COMMON] unsigned int 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7763 ;;      Params:         4       0       0       0       0
  7764 ;;      Locals:         2       0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0
  7766 ;;      Totals:         6       0       0       0       0
  7767 ;;Total ram usage:        6 bytes
  7768 ;; Hardware stack levels used: 1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_LCD_int
  7773 ;;		_sprintf
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           
  7778                           ;psect for function ___wmul
  7779  12F9                     ___wmul:
  7780  12F9                     l2836:	
  7781                           ;incstack = 0
  7782                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7783                           
  7784  12F9  01F4               	clrf	___wmul@product
  7785  12FA  01F5               	clrf	___wmul@product+1
  7786  12FB                     l2838:
  7787  12FB  1C70               	btfss	___wmul@multiplier,0
  7788  12FC  2AFE               	goto	u2141
  7789  12FD  2AFF               	goto	u2140
  7790  12FE                     u2141:
  7791  12FE  2B05               	goto	l697
  7792  12FF                     u2140:
  7793  12FF                     l2840:
  7794  12FF  0872               	movf	___wmul@multiplicand,w
  7795  1300  07F4               	addwf	___wmul@product,f
  7796  1301  1803               	skipnc
  7797  1302  0AF5               	incf	___wmul@product+1,f
  7798  1303  0873               	movf	___wmul@multiplicand+1,w
  7799  1304  07F5               	addwf	___wmul@product+1,f
  7800  1305                     l697:
  7801  1305  3001               	movlw	1
  7802  1306                     u2155:
  7803  1306  1003               	clrc
  7804  1307  0DF2               	rlf	___wmul@multiplicand,f
  7805  1308  0DF3               	rlf	___wmul@multiplicand+1,f
  7806  1309  3EFF               	addlw	-1
  7807  130A  1D03               	skipz
  7808  130B  2B06               	goto	u2155
  7809  130C                     l2842:
  7810  130C  3001               	movlw	1
  7811  130D                     u2165:
  7812  130D  1003               	clrc
  7813  130E  0CF1               	rrf	___wmul@multiplier+1,f
  7814  130F  0CF0               	rrf	___wmul@multiplier,f
  7815  1310  3EFF               	addlw	-1
  7816  1311  1D03               	skipz
  7817  1312  2B0D               	goto	u2165
  7818  1313                     l2844:
  7819  1313  0870               	movf	___wmul@multiplier,w
  7820  1314  0471               	iorwf	___wmul@multiplier+1,w
  7821  1315  1D03               	btfss	3,2
  7822  1316  2B18               	goto	u2171
  7823  1317  2B19               	goto	u2170
  7824  1318                     u2171:
  7825  1318  2AFB               	goto	l2838
  7826  1319                     u2170:
  7827  1319                     l2846:
  7828  1319  0875               	movf	___wmul@product+1,w
  7829  131A  00F1               	movwf	?___wmul+1
  7830  131B  0874               	movf	___wmul@product,w
  7831  131C  00F0               	movwf	?___wmul
  7832  131D                     l699:
  7833  131D  0008               	return
  7834  131E                     __end_of___wmul:
  7835                           
  7836                           	psect	text28
  7837  09F3                     __ptext28:	
  7838 ;; *************** function ___lwdiv *****************
  7839 ;; Defined at:
  7840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  divisor         2    0[COMMON] unsigned int 
  7843 ;;  dividend        2    2[COMMON] unsigned int 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  quotient        2    5[COMMON] unsigned int 
  7846 ;;  counter         1    7[COMMON] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  2    0[COMMON] unsigned int 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7856 ;;      Params:         4       0       0       0       0
  7857 ;;      Locals:         3       0       0       0       0
  7858 ;;      Temps:          1       0       0       0       0
  7859 ;;      Totals:         8       0       0       0       0
  7860 ;;Total ram usage:        8 bytes
  7861 ;; Hardware stack levels used: 1
  7862 ;; This function calls:
  7863 ;;		Nothing
  7864 ;; This function is called by:
  7865 ;;		_LCD_int
  7866 ;;		_sprintf
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           
  7871                           ;psect for function ___lwdiv
  7872  09F3                     ___lwdiv:
  7873  09F3                     l2850:	
  7874                           ;incstack = 0
  7875                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7876                           
  7877  09F3  01F5               	clrf	___lwdiv@quotient
  7878  09F4  01F6               	clrf	___lwdiv@quotient+1
  7879  09F5                     l2852:
  7880  09F5  0870               	movf	___lwdiv@divisor,w
  7881  09F6  0471               	iorwf	___lwdiv@divisor+1,w
  7882  09F7  1903               	btfsc	3,2
  7883  09F8  29FA               	goto	u2181
  7884  09F9  29FB               	goto	u2180
  7885  09FA                     u2181:
  7886  09FA  2A32               	goto	l2872
  7887  09FB                     u2180:
  7888  09FB                     l2854:
  7889  09FB  01F7               	clrf	___lwdiv@counter
  7890  09FC  0AF7               	incf	___lwdiv@counter,f
  7891  09FD  2A09               	goto	l2860
  7892  09FE                     l2856:
  7893  09FE  3001               	movlw	1
  7894  09FF                     u2195:
  7895  09FF  1003               	clrc
  7896  0A00  0DF0               	rlf	___lwdiv@divisor,f
  7897  0A01  0DF1               	rlf	___lwdiv@divisor+1,f
  7898  0A02  3EFF               	addlw	-1
  7899  0A03  1D03               	skipz
  7900  0A04  29FF               	goto	u2195
  7901  0A05                     l2858:
  7902  0A05  3001               	movlw	1
  7903  0A06  00F4               	movwf	??___lwdiv
  7904  0A07  0874               	movf	??___lwdiv,w
  7905  0A08  07F7               	addwf	___lwdiv@counter,f
  7906  0A09                     l2860:
  7907  0A09  1FF1               	btfss	___lwdiv@divisor+1,7
  7908  0A0A  2A0C               	goto	u2201
  7909  0A0B  2A0D               	goto	u2200
  7910  0A0C                     u2201:
  7911  0A0C  29FE               	goto	l2856
  7912  0A0D                     u2200:
  7913  0A0D                     l2862:
  7914  0A0D  3001               	movlw	1
  7915  0A0E                     u2215:
  7916  0A0E  1003               	clrc
  7917  0A0F  0DF5               	rlf	___lwdiv@quotient,f
  7918  0A10  0DF6               	rlf	___lwdiv@quotient+1,f
  7919  0A11  3EFF               	addlw	-1
  7920  0A12  1D03               	skipz
  7921  0A13  2A0E               	goto	u2215
  7922  0A14  0871               	movf	___lwdiv@divisor+1,w
  7923  0A15  0273               	subwf	___lwdiv@dividend+1,w
  7924  0A16  1D03               	skipz
  7925  0A17  2A1A               	goto	u2225
  7926  0A18  0870               	movf	___lwdiv@divisor,w
  7927  0A19  0272               	subwf	___lwdiv@dividend,w
  7928  0A1A                     u2225:
  7929  0A1A  1C03               	skipc
  7930  0A1B  2A1D               	goto	u2221
  7931  0A1C  2A1E               	goto	u2220
  7932  0A1D                     u2221:
  7933  0A1D  2A25               	goto	l2868
  7934  0A1E                     u2220:
  7935  0A1E                     l2864:
  7936  0A1E  0870               	movf	___lwdiv@divisor,w
  7937  0A1F  02F2               	subwf	___lwdiv@dividend,f
  7938  0A20  0871               	movf	___lwdiv@divisor+1,w
  7939  0A21  1C03               	skipc
  7940  0A22  03F3               	decf	___lwdiv@dividend+1,f
  7941  0A23  02F3               	subwf	___lwdiv@dividend+1,f
  7942  0A24                     l2866:
  7943  0A24  1475               	bsf	___lwdiv@quotient,0
  7944  0A25                     l2868:
  7945  0A25  3001               	movlw	1
  7946  0A26                     u2235:
  7947  0A26  1003               	clrc
  7948  0A27  0CF1               	rrf	___lwdiv@divisor+1,f
  7949  0A28  0CF0               	rrf	___lwdiv@divisor,f
  7950  0A29  3EFF               	addlw	-1
  7951  0A2A  1D03               	skipz
  7952  0A2B  2A26               	goto	u2235
  7953  0A2C                     l2870:
  7954  0A2C  3001               	movlw	1
  7955  0A2D  02F7               	subwf	___lwdiv@counter,f
  7956  0A2E  1D03               	btfss	3,2
  7957  0A2F  2A31               	goto	u2241
  7958  0A30  2A32               	goto	u2240
  7959  0A31                     u2241:
  7960  0A31  2A0D               	goto	l2862
  7961  0A32                     u2240:
  7962  0A32                     l2872:
  7963  0A32  0876               	movf	___lwdiv@quotient+1,w
  7964  0A33  00F1               	movwf	?___lwdiv+1
  7965  0A34  0875               	movf	___lwdiv@quotient,w
  7966  0A35  00F0               	movwf	?___lwdiv
  7967  0A36                     l969:
  7968  0A36  0008               	return
  7969  0A37                     __end_of___lwdiv:
  7970                           
  7971                           	psect	text29
  7972  16E9                     __ptext29:	
  7973 ;; *************** function _RTC_Read_DateTime *****************
  7974 ;; Defined at:
  7975 ;;		line 185 in file "RTC.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  rtc             1    wreg     PTR struct .
  7978 ;;		 -> RTCbits(7), 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  rtc             1    6[COMMON] PTR struct .
  7981 ;;		 -> RTCbits(7), 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7991 ;;      Params:         0       0       0       0       0
  7992 ;;      Locals:         1       0       0       0       0
  7993 ;;      Temps:          1       0       0       0       0
  7994 ;;      Totals:         2       0       0       0       0
  7995 ;;Total ram usage:        2 bytes
  7996 ;; Hardware stack levels used: 1
  7997 ;; Hardware stack levels required when called: 3
  7998 ;; This function calls:
  7999 ;;		_I2C_read
  8000 ;;		_I2C_start
  8001 ;;		_I2C_stop
  8002 ;;		_I2C_write
  8003 ;; This function is called by:
  8004 ;;		_Display_Time
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           
  8009                           ;psect for function _RTC_Read_DateTime
  8010  16E9                     _RTC_Read_DateTime:
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in _RTC_Read_DateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8014                           ;RTC_Read_DateTime@rtc stored from wreg
  8015  16E9  00F6               	movwf	RTC_Read_DateTime@rtc
  8016  16EA                     l2898:
  8017                           
  8018                           ;RTC.c: 185: void RTC_Read_DateTime(RTC *rtc);RTC.c: 186: {;RTC.c: 187:     I2C_start();
  8019  16EA  160A  118A  21D9  160A  118A  	fcall	_I2C_start
  8020                           
  8021                           ;RTC.c: 189:     I2C_write(0xD0);
  8022  16EF  30D0               	movlw	208
  8023  16F0  160A  118A  2214  160A  118A  	fcall	_I2C_write
  8024                           
  8025                           ;RTC.c: 191:     I2C_write(0x00);
  8026  16F5  3000               	movlw	0
  8027  16F6  160A  118A  2214  160A  118A  	fcall	_I2C_write
  8028                           
  8029                           ;RTC.c: 193:     I2C_stop();
  8030  16FB  160A  118A  21E2  160A  118A  	fcall	_I2C_stop
  8031                           
  8032                           ;RTC.c: 196:     I2C_start();
  8033  1700  160A  118A  21D9  160A  118A  	fcall	_I2C_start
  8034                           
  8035                           ;RTC.c: 198:     I2C_write(0xD1);
  8036  1705  30D1               	movlw	209
  8037  1706  160A  118A  2214  160A  118A  	fcall	_I2C_write
  8038  170B                     l2900:
  8039                           
  8040                           ;RTC.c: 201:     rtc->sec = I2C_read(1);
  8041  170B  3001               	movlw	1
  8042  170C  160A  118A  2344  160A  118A  	fcall	_I2C_read
  8043  1711  00F5               	movwf	??_RTC_Read_DateTime
  8044  1712  0876               	movf	RTC_Read_DateTime@rtc,w
  8045  1713  0084               	movwf	4
  8046  1714  0875               	movf	??_RTC_Read_DateTime,w
  8047  1715  1383               	bcf	3,7	;select IRP bank0
  8048  1716  0080               	movwf	0
  8049  1717                     l2902:
  8050                           
  8051                           ;RTC.c: 203:     rtc->min = I2C_read(1);
  8052  1717  3001               	movlw	1
  8053  1718  160A  118A  2344  160A  118A  	fcall	_I2C_read
  8054  171D  00F5               	movwf	??_RTC_Read_DateTime
  8055  171E  0A76               	incf	RTC_Read_DateTime@rtc,w
  8056  171F  0084               	movwf	4
  8057  1720  0875               	movf	??_RTC_Read_DateTime,w
  8058  1721  1383               	bcf	3,7	;select IRP bank0
  8059  1722  0080               	movwf	0
  8060  1723                     l2904:
  8061                           
  8062                           ;RTC.c: 205:     rtc->hour = I2C_read(1);
  8063  1723  3001               	movlw	1
  8064  1724  160A  118A  2344  160A  118A  	fcall	_I2C_read
  8065  1729  00F5               	movwf	??_RTC_Read_DateTime
  8066  172A  0876               	movf	RTC_Read_DateTime@rtc,w
  8067  172B  3E02               	addlw	2
  8068  172C  0084               	movwf	4
  8069  172D  0875               	movf	??_RTC_Read_DateTime,w
  8070  172E  1383               	bcf	3,7	;select IRP bank0
  8071  172F  0080               	movwf	0
  8072  1730                     l2906:
  8073                           
  8074                           ;RTC.c: 207:     rtc->week = I2C_read(1);
  8075  1730  3001               	movlw	1
  8076  1731  160A  118A  2344  160A  118A  	fcall	_I2C_read
  8077  1736  00F5               	movwf	??_RTC_Read_DateTime
  8078  1737  0876               	movf	RTC_Read_DateTime@rtc,w
  8079  1738  3E03               	addlw	3
  8080  1739  0084               	movwf	4
  8081  173A  0875               	movf	??_RTC_Read_DateTime,w
  8082  173B  1383               	bcf	3,7	;select IRP bank0
  8083  173C  0080               	movwf	0
  8084  173D                     l2908:
  8085                           
  8086                           ;RTC.c: 209:     rtc->date = I2C_read(1);
  8087  173D  3001               	movlw	1
  8088  173E  160A  118A  2344  160A  118A  	fcall	_I2C_read
  8089  1743  00F5               	movwf	??_RTC_Read_DateTime
  8090  1744  0876               	movf	RTC_Read_DateTime@rtc,w
  8091  1745  3E04               	addlw	4
  8092  1746  0084               	movwf	4
  8093  1747  0875               	movf	??_RTC_Read_DateTime,w
  8094  1748  1383               	bcf	3,7	;select IRP bank0
  8095  1749  0080               	movwf	0
  8096  174A                     l2910:
  8097                           
  8098                           ;RTC.c: 211:     rtc->month = I2C_read(1);
  8099  174A  3001               	movlw	1
  8100  174B  160A  118A  2344  160A  118A  	fcall	_I2C_read
  8101  1750  00F5               	movwf	??_RTC_Read_DateTime
  8102  1751  0876               	movf	RTC_Read_DateTime@rtc,w
  8103  1752  3E05               	addlw	5
  8104  1753  0084               	movwf	4
  8105  1754  0875               	movf	??_RTC_Read_DateTime,w
  8106  1755  1383               	bcf	3,7	;select IRP bank0
  8107  1756  0080               	movwf	0
  8108  1757                     l2912:
  8109                           
  8110                           ;RTC.c: 213:     rtc->year = I2C_read(0);
  8111  1757  3000               	movlw	0
  8112  1758  160A  118A  2344  160A  118A  	fcall	_I2C_read
  8113  175D  00F5               	movwf	??_RTC_Read_DateTime
  8114  175E  0876               	movf	RTC_Read_DateTime@rtc,w
  8115  175F  3E06               	addlw	6
  8116  1760  0084               	movwf	4
  8117  1761  0875               	movf	??_RTC_Read_DateTime,w
  8118  1762  1383               	bcf	3,7	;select IRP bank0
  8119  1763  0080               	movwf	0
  8120  1764                     l2914:
  8121                           
  8122                           ;RTC.c: 216:     I2C_stop();
  8123  1764  160A  118A  21E2  160A  118A  	fcall	_I2C_stop
  8124  1769                     l116:
  8125  1769  0008               	return
  8126  176A                     __end_of_RTC_Read_DateTime:
  8127                           
  8128                           	psect	text30
  8129  1344                     __ptext30:	
  8130 ;; *************** function _I2C_read *****************
  8131 ;; Defined at:
  8132 ;;		line 111 in file "I2C_Master.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  ACK             1    wreg     unsigned char 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;  ACK             1    3[COMMON] unsigned char 
  8137 ;;  read            1    4[COMMON] unsigned char 
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      unsigned char 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2, status,0, pclath, cstack
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8147 ;;      Params:         0       0       0       0       0
  8148 ;;      Locals:         2       0       0       0       0
  8149 ;;      Temps:          1       0       0       0       0
  8150 ;;      Totals:         3       0       0       0       0
  8151 ;;Total ram usage:        3 bytes
  8152 ;; Hardware stack levels used: 1
  8153 ;; Hardware stack levels required when called: 2
  8154 ;; This function calls:
  8155 ;;		_I2C_Send_ACK
  8156 ;;		_I2C_Send_NACK
  8157 ;;		_I2C_wait
  8158 ;; This function is called by:
  8159 ;;		_RTC_Read_DateTime
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           
  8164                           ;psect for function _I2C_read
  8165  1344                     _I2C_read:
  8166                           
  8167                           ;incstack = 0
  8168                           ; Regs used in _I2C_read: [wreg+status,2+status,0+pclath+cstack]
  8169                           ;I2C_read@ACK stored from wreg
  8170  1344  00F3               	movwf	I2C_read@ACK
  8171  1345                     l2744:
  8172  1345                     l2746:
  8173                           
  8174                           ;I2C_Master.c: 116:     SSPCON2bits.RCEN=1;
  8175  1345  1683               	bsf	3,5	;RP0=1, select bank1
  8176  1346  1303               	bcf	3,6	;RP1=0, select bank1
  8177  1347  1591               	bsf	17,3	;volatile
  8178  1348                     l2748:
  8179                           
  8180                           ;I2C_Master.c: 117:     I2C_wait();
  8181  1348  160A  118A  2272  160A  118A  	fcall	_I2C_wait
  8182  134D                     l2750:
  8183                           
  8184                           ;I2C_Master.c: 120:     read=SSPBUF;
  8185  134D  1283               	bcf	3,5	;RP0=0, select bank0
  8186  134E  1303               	bcf	3,6	;RP1=0, select bank0
  8187  134F  0813               	movf	19,w	;volatile
  8188  1350  00F2               	movwf	??_I2C_read
  8189  1351  0872               	movf	??_I2C_read,w
  8190  1352  00F4               	movwf	I2C_read@read
  8191  1353                     l2752:
  8192                           
  8193                           ;I2C_Master.c: 121:     I2C_wait();
  8194  1353  160A  118A  2272  160A  118A  	fcall	_I2C_wait
  8195  1358                     l2754:
  8196                           
  8197                           ;I2C_Master.c: 123:     if(ACK == 1)
  8198  1358  0373               	decf	I2C_read@ACK,w
  8199  1359  1D03               	btfss	3,2
  8200  135A  2B5C               	goto	u2081
  8201  135B  2B5D               	goto	u2080
  8202  135C                     u2081:
  8203  135C  2B63               	goto	l2758
  8204  135D                     u2080:
  8205  135D                     l2756:
  8206                           
  8207                           ;I2C_Master.c: 124:     {;I2C_Master.c: 126:         I2C_Send_ACK();
  8208  135D  160A  118A  21EB  160A  118A  	fcall	_I2C_Send_ACK
  8209                           
  8210                           ;I2C_Master.c: 127:     }
  8211  1362  2B68               	goto	l2760
  8212  1363                     l2758:
  8213                           
  8214                           ;I2C_Master.c: 129:     {;I2C_Master.c: 131:         I2C_Send_NACK();
  8215  1363  160A  118A  21F5  160A  118A  	fcall	_I2C_Send_NACK
  8216  1368                     l2760:
  8217                           
  8218                           ;I2C_Master.c: 134:     return read;
  8219  1368  0874               	movf	I2C_read@read,w
  8220  1369                     l565:
  8221  1369  0008               	return
  8222  136A                     __end_of_I2C_read:
  8223                           
  8224                           	psect	text31
  8225  11F5                     __ptext31:	
  8226 ;; *************** function _I2C_Send_NACK *****************
  8227 ;; Defined at:
  8228 ;;		line 104 in file "I2C_Master.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8242 ;;      Params:         0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0
  8245 ;;      Totals:         0       0       0       0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; Hardware stack levels required when called: 1
  8249 ;; This function calls:
  8250 ;;		_I2C_wait
  8251 ;; This function is called by:
  8252 ;;		_I2C_read
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           
  8257                           ;psect for function _I2C_Send_NACK
  8258  11F5                     _I2C_Send_NACK:
  8259  11F5                     l2640:	
  8260                           ;incstack = 0
  8261                           ; Regs used in _I2C_Send_NACK: [wreg+status,2+status,0+pclath+cstack]
  8262                           
  8263                           
  8264                           ;I2C_Master.c: 106:     ACKDT = 1;
  8265  11F5  1683               	bsf	3,5	;RP0=1, select bank1
  8266  11F6  1303               	bcf	3,6	;RP1=0, select bank1
  8267  11F7  1691               	bsf	17,5	;volatile
  8268                           
  8269                           ;I2C_Master.c: 107:     ACKEN = 1;
  8270  11F8  1611               	bsf	17,4	;volatile
  8271  11F9                     l2642:
  8272                           
  8273                           ;I2C_Master.c: 109:     I2C_wait();
  8274  11F9  160A  118A  2272  160A  118A  	fcall	_I2C_wait
  8275  11FE                     l560:
  8276  11FE  0008               	return
  8277  11FF                     __end_of_I2C_Send_NACK:
  8278                           
  8279                           	psect	text32
  8280  11EB                     __ptext32:	
  8281 ;; *************** function _I2C_Send_ACK *****************
  8282 ;; Defined at:
  8283 ;;		line 96 in file "I2C_Master.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;		None
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0, pclath, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8297 ;;      Params:         0       0       0       0       0
  8298 ;;      Locals:         0       0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0
  8300 ;;      Totals:         0       0       0       0       0
  8301 ;;Total ram usage:        0 bytes
  8302 ;; Hardware stack levels used: 1
  8303 ;; Hardware stack levels required when called: 1
  8304 ;; This function calls:
  8305 ;;		_I2C_wait
  8306 ;; This function is called by:
  8307 ;;		_I2C_read
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           
  8312                           ;psect for function _I2C_Send_ACK
  8313  11EB                     _I2C_Send_ACK:
  8314  11EB                     l2636:	
  8315                           ;incstack = 0
  8316                           ; Regs used in _I2C_Send_ACK: [wreg+status,2+status,0+pclath+cstack]
  8317                           
  8318                           
  8319                           ;I2C_Master.c: 98:     ACKDT = 0;
  8320  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  8321  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  8322  11ED  1291               	bcf	17,5	;volatile
  8323                           
  8324                           ;I2C_Master.c: 99:     ACKEN = 1;
  8325  11EE  1611               	bsf	17,4	;volatile
  8326  11EF                     l2638:
  8327                           
  8328                           ;I2C_Master.c: 101:     I2C_wait();
  8329  11EF  160A  118A  2272  160A  118A  	fcall	_I2C_wait
  8330  11F4                     l557:
  8331  11F4  0008               	return
  8332  11F5                     __end_of_I2C_Send_ACK:
  8333                           
  8334                           	psect	text33
  8335  144B                     __ptext33:	
  8336 ;; *************** function _LCD_puts *****************
  8337 ;; Defined at:
  8338 ;;		line 136 in file "LCD_I2C.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  str             2    6[COMMON] PTR unsigned char 
  8341 ;;		 -> STR_51(17), STR_50(17), STR_49(17), STR_48(5), 
  8342 ;;		 -> STR_47(3), STR_46(3), STR_45(3), STR_44(5), 
  8343 ;;		 -> STR_43(17), STR_42(17), STR_41(5), STR_40(11), 
  8344 ;;		 -> STR_39(17), STR_38(5), STR_37(11), STR_36(17), 
  8345 ;;		 -> STR_35(5), STR_34(11), STR_33(16), STR_32(5), 
  8346 ;;		 -> STR_31(11), STR_30(16), STR_29(5), STR_28(11), 
  8347 ;;		 -> STR_27(16), STR_26(5), STR_25(11), STR_24(18), 
  8348 ;;		 -> STR_23(6), STR_22(11), STR_21(17), STR_20(10), 
  8349 ;;		 -> STR_19(10), STR_18(10), STR_17(10), STR_16(10), 
  8350 ;;		 -> STR_15(10), STR_14(10), STR_13(8), STR_12(17), 
  8351 ;;		 -> str1(16), str2(16), 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  i               2   11[COMMON] int 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8363 ;;      Params:         2       0       0       0       0
  8364 ;;      Locals:         2       0       0       0       0
  8365 ;;      Temps:          3       0       0       0       0
  8366 ;;      Totals:         7       0       0       0       0
  8367 ;;Total ram usage:        7 bytes
  8368 ;; Hardware stack levels used: 1
  8369 ;; Hardware stack levels required when called: 4
  8370 ;; This function calls:
  8371 ;;		_LCD_putc
  8372 ;; This function is called by:
  8373 ;;		_Display_Time
  8374 ;;		_SetThu
  8375 ;;		_SetNgay
  8376 ;;		_SetThang
  8377 ;;		_SetNamchuc
  8378 ;;		_SetNamdv
  8379 ;;		_SetGio
  8380 ;;		_SetPhut
  8381 ;;		_SetGiay
  8382 ;;		_Select_Menu
  8383 ;;		_Display_Alarm
  8384 ;;		_Setup_Alarm
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           
  8389                           ;psect for function _LCD_puts
  8390  144B                     _LCD_puts:
  8391  144B                     l3048:	
  8392                           ;incstack = 0
  8393                           ; Regs used in _LCD_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8394                           
  8395                           
  8396                           ;LCD_I2C.c: 136: void LCD_puts(char *str);LCD_I2C.c: 137: {;LCD_I2C.c: 138:     for(int 
      +                          i=0; str[i]!='\0'; i++)
  8397  144B  01FB               	clrf	LCD_puts@i
  8398  144C  01FC               	clrf	LCD_puts@i+1
  8399  144D  2C70               	goto	l3054
  8400  144E                     l3050:
  8401                           
  8402                           ;LCD_I2C.c: 139:     {;LCD_I2C.c: 140:         LCD_putc(str[i]);
  8403  144E  087B               	movf	LCD_puts@i,w
  8404  144F  0776               	addwf	LCD_puts@str,w
  8405  1450  00F9               	movwf	??_LCD_puts+1
  8406  1451  0877               	movf	LCD_puts@str+1,w
  8407  1452  00F8               	movwf	??_LCD_puts
  8408  1453  1803               	skipnc
  8409  1454  0AF8               	incf	??_LCD_puts,f
  8410  1455  1FFB               	btfss	LCD_puts@i,7
  8411  1456  2C58               	goto	u2480
  8412  1457  03F8               	decf	??_LCD_puts,f
  8413  1458                     u2480:
  8414  1458  0878               	movf	??_LCD_puts,w
  8415  1459  00FA               	movwf	??_LCD_puts+2
  8416  145A  087A               	movf	??_LCD_puts+2,w
  8417  145B  1283               	bcf	3,5	;RP0=0, select bank0
  8418  145C  1303               	bcf	3,6	;RP1=0, select bank0
  8419  145D  00FF               	movwf	btemp+1
  8420  145E  0879               	movf	??_LCD_puts+1,w
  8421  145F  0084               	movwf	4
  8422  1460  120A  158A  2000  160A  118A  	fcall	stringtab
  8423  1465  160A  118A  267A  160A  118A  	fcall	_LCD_putc
  8424  146A                     l3052:
  8425                           
  8426                           ;LCD_I2C.c: 141:     }
  8427  146A  3001               	movlw	1
  8428  146B  07FB               	addwf	LCD_puts@i,f
  8429  146C  1803               	skipnc
  8430  146D  0AFC               	incf	LCD_puts@i+1,f
  8431  146E  3000               	movlw	0
  8432  146F  07FC               	addwf	LCD_puts@i+1,f
  8433  1470                     l3054:
  8434  1470  087B               	movf	LCD_puts@i,w
  8435  1471  0776               	addwf	LCD_puts@str,w
  8436  1472  00F9               	movwf	??_LCD_puts+1
  8437  1473  0877               	movf	LCD_puts@str+1,w
  8438  1474  00F8               	movwf	??_LCD_puts
  8439  1475  1803               	skipnc
  8440  1476  0AF8               	incf	??_LCD_puts,f
  8441  1477  1FFB               	btfss	LCD_puts@i,7
  8442  1478  2C7A               	goto	u2490
  8443  1479  03F8               	decf	??_LCD_puts,f
  8444  147A                     u2490:
  8445  147A  0878               	movf	??_LCD_puts,w
  8446  147B  00FA               	movwf	??_LCD_puts+2
  8447  147C  087A               	movf	??_LCD_puts+2,w
  8448  147D  1283               	bcf	3,5	;RP0=0, select bank0
  8449  147E  1303               	bcf	3,6	;RP1=0, select bank0
  8450  147F  00FF               	movwf	btemp+1
  8451  1480  0879               	movf	??_LCD_puts+1,w
  8452  1481  0084               	movwf	4
  8453  1482  120A  158A  2000  160A  118A  	fcall	stringtab
  8454  1487  3A00               	xorlw	0
  8455  1488  1D03               	skipz
  8456  1489  2C8B               	goto	u2501
  8457  148A  2C8C               	goto	u2500
  8458  148B                     u2501:
  8459  148B  2C4E               	goto	l3050
  8460  148C                     u2500:
  8461  148C                     l481:
  8462  148C  0008               	return
  8463  148D                     __end_of_LCD_puts:
  8464                           
  8465                           	psect	text34
  8466  167A                     __ptext34:	
  8467 ;; *************** function _LCD_putc *****************
  8468 ;; Defined at:
  8469 ;;		line 116 in file "LCD_I2C.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  data            1    wreg     unsigned char 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  data            1    4[COMMON] unsigned char 
  8474 ;;  n               1    5[COMMON] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8484 ;;      Params:         0       0       0       0       0
  8485 ;;      Locals:         2       0       0       0       0
  8486 ;;      Temps:          2       0       0       0       0
  8487 ;;      Totals:         4       0       0       0       0
  8488 ;;Total ram usage:        4 bytes
  8489 ;; Hardware stack levels used: 1
  8490 ;; Hardware stack levels required when called: 3
  8491 ;; This function calls:
  8492 ;;		_i2c_LCD_write
  8493 ;; This function is called by:
  8494 ;;		_Display_Alarm
  8495 ;;		_LCD_puts
  8496 ;;		_LCD_int
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           
  8501                           ;psect for function _LCD_putc
  8502  167A                     _LCD_putc:
  8503                           
  8504                           ;incstack = 0
  8505                           ; Regs used in _LCD_putc: [wreg+status,2+status,0+pclath+cstack]
  8506                           ;LCD_putc@data stored from wreg
  8507  167A  00F4               	movwf	LCD_putc@data
  8508  167B                     l2770:
  8509                           
  8510                           ;LCD_I2C.c: 116: void LCD_putc(unsigned char data);LCD_I2C.c: 117: {;LCD_I2C.c: 118:    
      +                           unsigned char n=0x01;
  8511  167B  01F5               	clrf	LCD_putc@n
  8512  167C  0AF5               	incf	LCD_putc@n,f
  8513  167D                     l2772:
  8514                           
  8515                           ;LCD_I2C.c: 119:     i2c_LCD_write(n);
  8516  167D  3001               	movlw	1
  8517  167E  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  8518  1683                     l2774:
  8519                           
  8520                           ;LCD_I2C.c: 121:     n=(n & 0x0F)|(data & 0xF0);
  8521  1683  30F0               	movlw	240
  8522  1684  0574               	andwf	LCD_putc@data,w
  8523  1685  00F2               	movwf	??_LCD_putc
  8524  1686  0875               	movf	LCD_putc@n,w
  8525  1687  390F               	andlw	15
  8526  1688  0472               	iorwf	??_LCD_putc,w
  8527  1689  00F3               	movwf	??_LCD_putc+1
  8528  168A  0873               	movf	??_LCD_putc+1,w
  8529  168B  00F5               	movwf	LCD_putc@n
  8530  168C                     l2776:
  8531                           
  8532                           ;LCD_I2C.c: 122:     i2c_LCD_write(n);
  8533  168C  0875               	movf	LCD_putc@n,w
  8534  168D  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  8535  1692                     l2778:
  8536                           
  8537                           ;LCD_I2C.c: 123:     i2c_LCD_write(n |= 0x04);
  8538  1692  1575               	bsf	LCD_putc@n,2
  8539  1693  0875               	movf	LCD_putc@n,w
  8540  1694  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  8541  1699                     l2780:
  8542                           
  8543                           ;LCD_I2C.c: 124:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8544  1699  3007               	movlw	7
  8545  169A  00F3               	movwf	??_LCD_putc+1
  8546  169B  307D               	movlw	125
  8547  169C  00F2               	movwf	??_LCD_putc
  8548  169D                     u3717:
  8549  169D  0BF2               	decfsz	??_LCD_putc,f
  8550  169E  2E9D               	goto	u3717
  8551  169F  0BF3               	decfsz	??_LCD_putc+1,f
  8552  16A0  2E9D               	goto	u3717
  8553  16A1                     l2782:
  8554                           
  8555                           ;LCD_I2C.c: 125:     i2c_LCD_write(n &= 0xFB);
  8556  16A1  30FB               	movlw	251
  8557  16A2  00F2               	movwf	??_LCD_putc
  8558  16A3  0872               	movf	??_LCD_putc,w
  8559  16A4  05F5               	andwf	LCD_putc@n,f
  8560  16A5  0875               	movf	LCD_putc@n,w
  8561  16A6  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  8562  16AB                     l2784:
  8563                           
  8564                           ;LCD_I2C.c: 126:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8565  16AB  3007               	movlw	7
  8566  16AC  00F3               	movwf	??_LCD_putc+1
  8567  16AD  307D               	movlw	125
  8568  16AE  00F2               	movwf	??_LCD_putc
  8569  16AF                     u3727:
  8570  16AF  0BF2               	decfsz	??_LCD_putc,f
  8571  16B0  2EAF               	goto	u3727
  8572  16B1  0BF3               	decfsz	??_LCD_putc+1,f
  8573  16B2  2EAF               	goto	u3727
  8574                           
  8575                           ;LCD_I2C.c: 128:     n=(n & 0x0F)|(data << 4);
  8576  16B3  0874               	movf	LCD_putc@data,w
  8577  16B4  00F2               	movwf	??_LCD_putc
  8578  16B5  3004               	movlw	4
  8579  16B6                     u2105:
  8580  16B6  1003               	clrc
  8581  16B7  0DF2               	rlf	??_LCD_putc,f
  8582  16B8  3EFF               	addlw	-1
  8583  16B9  1D03               	skipz
  8584  16BA  2EB6               	goto	u2105
  8585  16BB  0875               	movf	LCD_putc@n,w
  8586  16BC  390F               	andlw	15
  8587  16BD  0472               	iorwf	??_LCD_putc,w
  8588  16BE  00F3               	movwf	??_LCD_putc+1
  8589  16BF  0873               	movf	??_LCD_putc+1,w
  8590  16C0  00F5               	movwf	LCD_putc@n
  8591  16C1                     l2786:
  8592                           
  8593                           ;LCD_I2C.c: 129:     i2c_LCD_write(n);
  8594  16C1  0875               	movf	LCD_putc@n,w
  8595  16C2  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  8596  16C7                     l2788:
  8597                           
  8598                           ;LCD_I2C.c: 130:     i2c_LCD_write(n |= 0x04);
  8599  16C7  1575               	bsf	LCD_putc@n,2
  8600  16C8  0875               	movf	LCD_putc@n,w
  8601  16C9  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  8602  16CE                     l2790:
  8603                           
  8604                           ;LCD_I2C.c: 131:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8605  16CE  3007               	movlw	7
  8606  16CF  00F3               	movwf	??_LCD_putc+1
  8607  16D0  307D               	movlw	125
  8608  16D1  00F2               	movwf	??_LCD_putc
  8609  16D2                     u3737:
  8610  16D2  0BF2               	decfsz	??_LCD_putc,f
  8611  16D3  2ED2               	goto	u3737
  8612  16D4  0BF3               	decfsz	??_LCD_putc+1,f
  8613  16D5  2ED2               	goto	u3737
  8614  16D6                     l2792:
  8615                           
  8616                           ;LCD_I2C.c: 132:     i2c_LCD_write(n &= 0xFB);
  8617  16D6  30FB               	movlw	251
  8618  16D7  00F2               	movwf	??_LCD_putc
  8619  16D8  0872               	movf	??_LCD_putc,w
  8620  16D9  05F5               	andwf	LCD_putc@n,f
  8621  16DA  0875               	movf	LCD_putc@n,w
  8622  16DB  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  8623  16E0                     l2794:
  8624                           
  8625                           ;LCD_I2C.c: 133:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8626  16E0  3007               	movlw	7
  8627  16E1  00F3               	movwf	??_LCD_putc+1
  8628  16E2  307D               	movlw	125
  8629  16E3  00F2               	movwf	??_LCD_putc
  8630  16E4                     u3747:
  8631  16E4  0BF2               	decfsz	??_LCD_putc,f
  8632  16E5  2EE4               	goto	u3747
  8633  16E6  0BF3               	decfsz	??_LCD_putc+1,f
  8634  16E7  2EE4               	goto	u3747
  8635  16E8                     l475:
  8636  16E8  0008               	return
  8637  16E9                     __end_of_LCD_putc:
  8638                           
  8639                           	psect	text35
  8640  136A                     __ptext35:	
  8641 ;; *************** function _LCD_gotoxy *****************
  8642 ;; Defined at:
  8643 ;;		line 225 in file "LCD_I2C.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  x               1    wreg     unsigned char 
  8646 ;;  y               1    6[COMMON] unsigned char 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  x               1    9[COMMON] unsigned char 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8658 ;;      Params:         1       0       0       0       0
  8659 ;;      Locals:         1       0       0       0       0
  8660 ;;      Temps:          2       0       0       0       0
  8661 ;;      Totals:         4       0       0       0       0
  8662 ;;Total ram usage:        4 bytes
  8663 ;; Hardware stack levels used: 1
  8664 ;; Hardware stack levels required when called: 4
  8665 ;; This function calls:
  8666 ;;		_LCD_command
  8667 ;; This function is called by:
  8668 ;;		_Display_Time
  8669 ;;		_SetThu
  8670 ;;		_SetNgay
  8671 ;;		_SetThang
  8672 ;;		_SetNamchuc
  8673 ;;		_SetNamdv
  8674 ;;		_SetGio
  8675 ;;		_SetPhut
  8676 ;;		_SetGiay
  8677 ;;		_Select_Menu
  8678 ;;		_Display_Alarm
  8679 ;;		_Setup_Alarm
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           
  8684                           ;psect for function _LCD_gotoxy
  8685  136A                     _LCD_gotoxy:
  8686                           
  8687                           ;incstack = 0
  8688                           ; Regs used in _LCD_gotoxy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8689                           ;LCD_gotoxy@x stored from wreg
  8690  136A  00F9               	movwf	LCD_gotoxy@x
  8691  136B                     l3032:
  8692                           
  8693                           ;LCD_I2C.c: 225: void LCD_gotoxy(unsigned char x, unsigned char y);LCD_I2C.c: 226: {;LCD
      +                          _I2C.c: 227:     switch(x)
  8694  136B  2B8C               	goto	l3042
  8695  136C                     l3034:
  8696                           
  8697                           ;LCD_I2C.c: 230:             LCD_command(0x80 + (y-1));
  8698  136C  0876               	movf	LCD_gotoxy@y,w
  8699  136D  3E7F               	addlw	127
  8700  136E  160A  118A  260C  160A  118A  	fcall	_LCD_command
  8701                           
  8702                           ;LCD_I2C.c: 231:             break;
  8703  1373  2B9F               	goto	l505
  8704  1374                     l3036:
  8705                           
  8706                           ;LCD_I2C.c: 233:             LCD_command(0xC0 + (y-1));
  8707  1374  0876               	movf	LCD_gotoxy@y,w
  8708  1375  3EBF               	addlw	191
  8709  1376  160A  118A  260C  160A  118A  	fcall	_LCD_command
  8710                           
  8711                           ;LCD_I2C.c: 234:             break;
  8712  137B  2B9F               	goto	l505
  8713  137C                     l3038:
  8714                           
  8715                           ;LCD_I2C.c: 236:             LCD_command(0x90 + (y-1));
  8716  137C  0876               	movf	LCD_gotoxy@y,w
  8717  137D  3E8F               	addlw	143
  8718  137E  160A  118A  260C  160A  118A  	fcall	_LCD_command
  8719                           
  8720                           ;LCD_I2C.c: 237:             break;
  8721  1383  2B9F               	goto	l505
  8722  1384                     l3040:
  8723                           
  8724                           ;LCD_I2C.c: 240:             LCD_command(0xD0 + (y-1));
  8725  1384  0876               	movf	LCD_gotoxy@y,w
  8726  1385  3ECF               	addlw	207
  8727  1386  160A  118A  260C  160A  118A  	fcall	_LCD_command
  8728                           
  8729                           ;LCD_I2C.c: 241:     }
  8730  138B  2B9F               	goto	l505
  8731  138C                     l3042:
  8732  138C  0879               	movf	LCD_gotoxy@x,w
  8733  138D  00F7               	movwf	??_LCD_gotoxy
  8734  138E  01F8               	clrf	??_LCD_gotoxy+1
  8735                           
  8736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8737                           ; Switch size 1, requested type "simple"
  8738                           ; Number of cases is 1, Range of values is 0 to 0
  8739                           ; switch strategies available:
  8740                           ; Name         Instructions Cycles
  8741                           ; simple_byte            4     3 (average)
  8742                           ; direct_byte           11     8 (fixed)
  8743                           ; jumptable            260     6 (fixed)
  8744                           ;	Chosen strategy is simple_byte
  8745  138F  0878               	movf	??_LCD_gotoxy+1,w
  8746  1390  3A00               	xorlw	0	; case 0
  8747  1391  1903               	skipnz
  8748  1392  2B94               	goto	l3974
  8749  1393  2B84               	goto	l3040
  8750  1394                     l3974:
  8751                           
  8752                           ; Switch size 1, requested type "simple"
  8753                           ; Number of cases is 3, Range of values is 1 to 3
  8754                           ; switch strategies available:
  8755                           ; Name         Instructions Cycles
  8756                           ; simple_byte           10     6 (average)
  8757                           ; direct_byte           20    11 (fixed)
  8758                           ; jumptable            263     9 (fixed)
  8759                           ;	Chosen strategy is simple_byte
  8760  1394  0877               	movf	??_LCD_gotoxy,w
  8761  1395  3A01               	xorlw	1	; case 1
  8762  1396  1903               	skipnz
  8763  1397  2B6C               	goto	l3034
  8764  1398  3A03               	xorlw	3	; case 2
  8765  1399  1903               	skipnz
  8766  139A  2B74               	goto	l3036
  8767  139B  3A01               	xorlw	1	; case 3
  8768  139C  1903               	skipnz
  8769  139D  2B7C               	goto	l3038
  8770  139E  2B84               	goto	l3040
  8771  139F                     l505:
  8772  139F  0008               	return
  8773  13A0                     __end_of_LCD_gotoxy:
  8774                           
  8775                           	psect	text36
  8776  12D7                     __ptext36:	
  8777 ;; *************** function _RTC_init *****************
  8778 ;; Defined at:
  8779 ;;		line 144 in file "RTC.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, status,2, status,0, pclath, cstack
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8793 ;;      Params:         0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0
  8795 ;;      Temps:          0       0       0       0       0
  8796 ;;      Totals:         0       0       0       0       0
  8797 ;;Total ram usage:        0 bytes
  8798 ;; Hardware stack levels used: 1
  8799 ;; Hardware stack levels required when called: 2
  8800 ;; This function calls:
  8801 ;;		_I2C_init
  8802 ;;		_I2C_start
  8803 ;;		_I2C_stop
  8804 ;;		_I2C_write
  8805 ;; This function is called by:
  8806 ;;		_main
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           
  8811                           ;psect for function _RTC_init
  8812  12D7                     _RTC_init:
  8813  12D7                     l3526:	
  8814                           ;incstack = 0
  8815                           ; Regs used in _RTC_init: [wreg+status,2+status,0+pclath+cstack]
  8816                           
  8817                           
  8818                           ;RTC.c: 146:     I2C_init();
  8819  12D7  160A  118A  225E  160A  118A  	fcall	_I2C_init
  8820                           
  8821                           ;RTC.c: 147:     I2C_start();
  8822  12DC  160A  118A  21D9  160A  118A  	fcall	_I2C_start
  8823                           
  8824                           ;RTC.c: 149:     I2C_write(0xD0);
  8825  12E1  30D0               	movlw	208
  8826  12E2  160A  118A  2214  160A  118A  	fcall	_I2C_write
  8827                           
  8828                           ;RTC.c: 151:     I2C_write(0x07);
  8829  12E7  3007               	movlw	7
  8830  12E8  160A  118A  2214  160A  118A  	fcall	_I2C_write
  8831                           
  8832                           ;RTC.c: 153:     I2C_write(0x00);
  8833  12ED  3000               	movlw	0
  8834  12EE  160A  118A  2214  160A  118A  	fcall	_I2C_write
  8835                           
  8836                           ;RTC.c: 155:     I2C_stop();
  8837  12F3  160A  118A  21E2  160A  118A  	fcall	_I2C_stop
  8838  12F8                     l110:
  8839  12F8  0008               	return
  8840  12F9                     __end_of_RTC_init:
  8841                           
  8842                           	psect	text37
  8843  1214                     __ptext37:	
  8844 ;; *************** function _I2C_write *****************
  8845 ;; Defined at:
  8846 ;;		line 88 in file "I2C_Master.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  a               1    wreg     unsigned char 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  a               1    2[COMMON] unsigned char 
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0, pclath, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8860 ;;      Params:         0       0       0       0       0
  8861 ;;      Locals:         1       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0
  8863 ;;      Totals:         1       0       0       0       0
  8864 ;;Total ram usage:        1 bytes
  8865 ;; Hardware stack levels used: 1
  8866 ;; Hardware stack levels required when called: 1
  8867 ;; This function calls:
  8868 ;;		_I2C_wait
  8869 ;; This function is called by:
  8870 ;;		_RTC_init
  8871 ;;		_RTC_Set_DateTime
  8872 ;;		_RTC_Read_DateTime
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           
  8877                           ;psect for function _I2C_write
  8878  1214                     _I2C_write:
  8879                           
  8880                           ;incstack = 0
  8881                           ; Regs used in _I2C_write: [wreg+status,2+status,0+pclath+cstack]
  8882                           ;I2C_write@a stored from wreg
  8883  1214  00F2               	movwf	I2C_write@a
  8884  1215                     l2626:
  8885                           
  8886                           ;I2C_Master.c: 88: void I2C_write(unsigned char a);I2C_Master.c: 89: {;I2C_Master.c: 91:
      +                               SSPBUF=a;
  8887  1215  0872               	movf	I2C_write@a,w
  8888  1216  1283               	bcf	3,5	;RP0=0, select bank0
  8889  1217  1303               	bcf	3,6	;RP1=0, select bank0
  8890  1218  0093               	movwf	19	;volatile
  8891  1219                     l2628:
  8892                           
  8893                           ;I2C_Master.c: 93:     I2C_wait();
  8894  1219  160A  118A  2272  160A  118A  	fcall	_I2C_wait
  8895  121E                     l554:
  8896  121E  0008               	return
  8897  121F                     __end_of_I2C_write:
  8898                           
  8899                           	psect	text38
  8900  11E2                     __ptext38:	
  8901 ;; *************** function _I2C_stop *****************
  8902 ;; Defined at:
  8903 ;;		line 80 in file "I2C_Master.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;		None
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		wreg, status,2, status,0, pclath, cstack
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8917 ;;      Params:         0       0       0       0       0
  8918 ;;      Locals:         0       0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0
  8920 ;;      Totals:         0       0       0       0       0
  8921 ;;Total ram usage:        0 bytes
  8922 ;; Hardware stack levels used: 1
  8923 ;; Hardware stack levels required when called: 1
  8924 ;; This function calls:
  8925 ;;		_I2C_wait
  8926 ;; This function is called by:
  8927 ;;		_RTC_init
  8928 ;;		_RTC_Set_DateTime
  8929 ;;		_RTC_Read_DateTime
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function _I2C_stop
  8935  11E2                     _I2C_stop:
  8936  11E2                     l2630:	
  8937                           ;incstack = 0
  8938                           ; Regs used in _I2C_stop: [wreg+status,2+status,0+pclath+cstack]
  8939                           
  8940                           
  8941                           ;I2C_Master.c: 83:     SSPCON2bits.PEN=1;
  8942  11E2  1683               	bsf	3,5	;RP0=1, select bank1
  8943  11E3  1303               	bcf	3,6	;RP1=0, select bank1
  8944  11E4  1511               	bsf	17,2	;volatile
  8945  11E5                     l2632:
  8946                           
  8947                           ;I2C_Master.c: 85:     I2C_wait();
  8948  11E5  160A  118A  2272  160A  118A  	fcall	_I2C_wait
  8949  11EA                     l551:
  8950  11EA  0008               	return
  8951  11EB                     __end_of_I2C_stop:
  8952                           
  8953                           	psect	text39
  8954  11D9                     __ptext39:	
  8955 ;; *************** function _I2C_start *****************
  8956 ;; Defined at:
  8957 ;;		line 64 in file "I2C_Master.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, pclath, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8971 ;;      Params:         0       0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0
  8973 ;;      Temps:          0       0       0       0       0
  8974 ;;      Totals:         0       0       0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 1
  8978 ;; This function calls:
  8979 ;;		_I2C_wait
  8980 ;; This function is called by:
  8981 ;;		_RTC_init
  8982 ;;		_RTC_Set_DateTime
  8983 ;;		_RTC_Read_DateTime
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           
  8988                           ;psect for function _I2C_start
  8989  11D9                     _I2C_start:
  8990  11D9                     l2622:	
  8991                           ;incstack = 0
  8992                           ; Regs used in _I2C_start: [wreg+status,2+status,0+pclath+cstack]
  8993                           
  8994                           
  8995                           ;I2C_Master.c: 67:     SSPCON2bits.SEN=1;
  8996  11D9  1683               	bsf	3,5	;RP0=1, select bank1
  8997  11DA  1303               	bcf	3,6	;RP1=0, select bank1
  8998  11DB  1411               	bsf	17,0	;volatile
  8999  11DC                     l2624:
  9000                           
  9001                           ;I2C_Master.c: 69:     I2C_wait();
  9002  11DC  160A  118A  2272  160A  118A  	fcall	_I2C_wait
  9003  11E1                     l545:
  9004  11E1  0008               	return
  9005  11E2                     __end_of_I2C_start:
  9006                           
  9007                           	psect	text40
  9008  1272                     __ptext40:	
  9009 ;; *************** function _I2C_wait *****************
  9010 ;; Defined at:
  9011 ;;		line 56 in file "I2C_Master.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;		None
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;		None
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, status,2
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9025 ;;      Params:         0       0       0       0       0
  9026 ;;      Locals:         0       0       0       0       0
  9027 ;;      Temps:          2       0       0       0       0
  9028 ;;      Totals:         2       0       0       0       0
  9029 ;;Total ram usage:        2 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_I2C_start
  9035 ;;		_I2C_stop
  9036 ;;		_I2C_write
  9037 ;;		_I2C_Send_ACK
  9038 ;;		_I2C_Send_NACK
  9039 ;;		_I2C_read
  9040 ;;		_I2C_restart
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           
  9045                           ;psect for function _I2C_wait
  9046  1272                     _I2C_wait:
  9047  1272                     l2616:	
  9048                           ;incstack = 0
  9049                           ; Regs used in _I2C_wait: [wreg+status,2]
  9050                           
  9051  1272                     l539:	
  9052                           ;I2C_Master.c: 60:     while((SSPSTATbits.R_W!=0) || ((SSPCON2 & 0x1F)!=0));
  9053                           
  9054  1272  1683               	bsf	3,5	;RP0=1, select bank1
  9055  1273  1303               	bcf	3,6	;RP1=0, select bank1
  9056  1274  1914               	btfsc	20,2	;volatile
  9057  1275  2A77               	goto	u1871
  9058  1276  2A78               	goto	u1870
  9059  1277                     u1871:
  9060  1277  2A72               	goto	l539
  9061  1278                     u1870:
  9062  1278                     l2618:
  9063  1278  0811               	movf	17,w	;volatile
  9064  1279  391F               	andlw	31
  9065  127A  1D03               	btfss	3,2
  9066  127B  2A7D               	goto	u1881
  9067  127C  2A7E               	goto	u1880
  9068  127D                     u1881:
  9069  127D  2A72               	goto	l539
  9070  127E                     u1880:
  9071  127E                     l2620:
  9072                           
  9073                           ;I2C_Master.c: 61:     _delay((unsigned long)((1)*(20000000/4000.0)));
  9074  127E  3007               	movlw	7
  9075  127F  00F1               	movwf	??_I2C_wait+1
  9076  1280  307D               	movlw	125
  9077  1281  00F0               	movwf	??_I2C_wait
  9078  1282                     u3757:
  9079  1282  0BF0               	decfsz	??_I2C_wait,f
  9080  1283  2A82               	goto	u3757
  9081  1284  0BF1               	decfsz	??_I2C_wait+1,f
  9082  1285  2A82               	goto	u3757
  9083  1286                     l542:
  9084  1286  0008               	return
  9085  1287                     __end_of_I2C_wait:
  9086                           
  9087                           	psect	text41
  9088  125E                     __ptext41:	
  9089 ;; *************** function _I2C_init *****************
  9090 ;; Defined at:
  9091 ;;		line 30 in file "I2C_Master.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;		None
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      void 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9105 ;;      Params:         0       0       0       0       0
  9106 ;;      Locals:         0       0       0       0       0
  9107 ;;      Temps:          0       0       0       0       0
  9108 ;;      Totals:         0       0       0       0       0
  9109 ;;Total ram usage:        0 bytes
  9110 ;; Hardware stack levels used: 1
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_RTC_init
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           
  9119                           ;psect for function _I2C_init
  9120  125E                     _I2C_init:
  9121  125E                     l3122:	
  9122                           ;incstack = 0
  9123                           ; Regs used in _I2C_init: [wreg+status,2+status,0]
  9124                           
  9125                           
  9126                           ;I2C_Master.c: 33:     TRISC3=1;
  9127  125E  1683               	bsf	3,5	;RP0=1, select bank1
  9128  125F  1303               	bcf	3,6	;RP1=0, select bank1
  9129  1260  1587               	bsf	7,3	;volatile
  9130                           
  9131                           ;I2C_Master.c: 34:     TRISC4=1;
  9132  1261  1607               	bsf	7,4	;volatile
  9133                           
  9134                           ;I2C_Master.c: 37:     SSPSTATbits.SMP=0;
  9135  1262  1394               	bcf	20,7	;volatile
  9136                           
  9137                           ;I2C_Master.c: 39:     SSPSTATbits.CKE=0;
  9138  1263  1314               	bcf	20,6	;volatile
  9139                           
  9140                           ;I2C_Master.c: 43:     SSPCONbits.SSPEN=1;
  9141  1264  1283               	bcf	3,5	;RP0=0, select bank0
  9142  1265  1303               	bcf	3,6	;RP1=0, select bank0
  9143  1266  1694               	bsf	20,5	;volatile
  9144                           
  9145                           ;I2C_Master.c: 45:     SSPCONbits.CKP=0;
  9146  1267  1214               	bcf	20,4	;volatile
  9147  1268                     l3124:
  9148                           
  9149                           ;I2C_Master.c: 48:     SSPCONbits.SSPM=0b1000;
  9150  1268  0814               	movf	20,w	;volatile
  9151  1269  39F0               	andlw	-16
  9152  126A  3808               	iorlw	8
  9153  126B  0094               	movwf	20	;volatile
  9154  126C                     l3126:
  9155                           
  9156                           ;I2C_Master.c: 51:     SSPCON2=0x00;
  9157  126C  1683               	bsf	3,5	;RP0=1, select bank1
  9158  126D  1303               	bcf	3,6	;RP1=0, select bank1
  9159  126E  0191               	clrf	17	;volatile
  9160  126F                     l3128:
  9161                           
  9162                           ;I2C_Master.c: 53:     SSPADD=(20000000/(4*100000))-1;
  9163  126F  3031               	movlw	49
  9164  1270  0093               	movwf	19	;volatile
  9165  1271                     l536:
  9166  1271  0008               	return
  9167  1272                     __end_of_I2C_init:
  9168                           
  9169                           	psect	text42
  9170  131E                     __ptext42:	
  9171 ;; *************** function _LCD_init *****************
  9172 ;; Defined at:
  9173 ;;		line 244 in file "LCD_I2C.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  I2C_Addr        1    wreg     unsigned char 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  I2C_Addr        1    7[COMMON] unsigned char 
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, status,2, status,0, pclath, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9187 ;;      Params:         0       0       0       0       0
  9188 ;;      Locals:         1       0       0       0       0
  9189 ;;      Temps:          1       0       0       0       0
  9190 ;;      Totals:         2       0       0       0       0
  9191 ;;Total ram usage:        2 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; Hardware stack levels required when called: 4
  9194 ;; This function calls:
  9195 ;;		_LCD_command
  9196 ;;		_i2c_LCD_write
  9197 ;; This function is called by:
  9198 ;;		_main
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           
  9203                           ;psect for function _LCD_init
  9204  131E                     _LCD_init:
  9205                           
  9206                           ;incstack = 0
  9207                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  9208                           ;LCD_init@I2C_Addr stored from wreg
  9209  131E  00F7               	movwf	LCD_init@I2C_Addr
  9210  131F                     l3528:
  9211                           
  9212                           ;LCD_I2C.c: 244: void LCD_init(unsigned char I2C_Addr);LCD_I2C.c: 245: {;LCD_I2C.c: 246:
      +                               LCD_command(0x01);
  9213  131F  3001               	movlw	1
  9214  1320  160A  118A  260C  160A  118A  	fcall	_LCD_command
  9215  1325                     l3530:
  9216                           
  9217                           ;LCD_I2C.c: 247:     i2c_addr=I2C_Addr;
  9218  1325  0877               	movf	LCD_init@I2C_Addr,w
  9219  1326  00F6               	movwf	??_LCD_init
  9220  1327  0876               	movf	??_LCD_init,w
  9221  1328  1283               	bcf	3,5	;RP0=0, select bank0
  9222  1329  1303               	bcf	3,6	;RP1=0, select bank0
  9223  132A  00BA               	movwf	_i2c_addr
  9224  132B                     l3532:
  9225                           
  9226                           ;LCD_I2C.c: 248:     i2c_LCD_write(0);
  9227  132B  3000               	movlw	0
  9228  132C  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  9229  1331                     l3534:
  9230                           
  9231                           ;LCD_I2C.c: 250:     LCD_command(0x02);
  9232  1331  3002               	movlw	2
  9233  1332  160A  118A  260C  160A  118A  	fcall	_LCD_command
  9234  1337                     l3536:
  9235                           
  9236                           ;LCD_I2C.c: 252:     LCD_command(0x20 | (2 << 2));
  9237  1337  3028               	movlw	40
  9238  1338  160A  118A  260C  160A  118A  	fcall	_LCD_command
  9239  133D                     l3538:
  9240                           
  9241                           ;LCD_I2C.c: 253:     LCD_command(0x0C);
  9242  133D  300C               	movlw	12
  9243  133E  160A  118A  260C  160A  118A  	fcall	_LCD_command
  9244  1343                     l508:
  9245  1343  0008               	return
  9246  1344                     __end_of_LCD_init:
  9247                           
  9248                           	psect	text43
  9249  160C                     __ptext43:	
  9250 ;; *************** function _LCD_command *****************
  9251 ;; Defined at:
  9252 ;;		line 96 in file "LCD_I2C.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;  command         1    wreg     unsigned char 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;  command         1    4[COMMON] unsigned char 
  9257 ;;  n               1    5[COMMON] unsigned char 
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      void 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, pclath, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9267 ;;      Params:         0       0       0       0       0
  9268 ;;      Locals:         2       0       0       0       0
  9269 ;;      Temps:          2       0       0       0       0
  9270 ;;      Totals:         4       0       0       0       0
  9271 ;;Total ram usage:        4 bytes
  9272 ;; Hardware stack levels used: 1
  9273 ;; Hardware stack levels required when called: 3
  9274 ;; This function calls:
  9275 ;;		_i2c_LCD_write
  9276 ;; This function is called by:
  9277 ;;		_LCD_gotoxy
  9278 ;;		_LCD_init
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function _LCD_command
  9284  160C                     _LCD_command:
  9285                           
  9286                           ;incstack = 0
  9287                           ; Regs used in _LCD_command: [wreg+status,2+status,0+pclath+cstack]
  9288                           ;LCD_command@command stored from wreg
  9289  160C  00F4               	movwf	LCD_command@command
  9290  160D                     l2796:
  9291                           
  9292                           ;LCD_I2C.c: 96: void LCD_command(unsigned char command);LCD_I2C.c: 97: {;LCD_I2C.c: 98: 
      +                              unsigned char n=0x00;
  9293  160D  01F5               	clrf	LCD_command@n
  9294  160E                     l2798:
  9295                           
  9296                           ;LCD_I2C.c: 99:     i2c_LCD_write(n);
  9297  160E  3000               	movlw	0
  9298  160F  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  9299  1614                     l2800:
  9300                           
  9301                           ;LCD_I2C.c: 101:     n=(n & 0x0F)|(command & 0xF0);
  9302  1614  30F0               	movlw	240
  9303  1615  0574               	andwf	LCD_command@command,w
  9304  1616  00F2               	movwf	??_LCD_command
  9305  1617  0875               	movf	LCD_command@n,w
  9306  1618  390F               	andlw	15
  9307  1619  0472               	iorwf	??_LCD_command,w
  9308  161A  00F3               	movwf	??_LCD_command+1
  9309  161B  0873               	movf	??_LCD_command+1,w
  9310  161C  00F5               	movwf	LCD_command@n
  9311  161D                     l2802:
  9312                           
  9313                           ;LCD_I2C.c: 102:     i2c_LCD_write(n);
  9314  161D  0875               	movf	LCD_command@n,w
  9315  161E  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  9316  1623                     l2804:
  9317                           
  9318                           ;LCD_I2C.c: 103:     i2c_LCD_write(n |= 0x04);
  9319  1623  1575               	bsf	LCD_command@n,2
  9320  1624  0875               	movf	LCD_command@n,w
  9321  1625  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  9322  162A                     l2806:
  9323                           
  9324                           ;LCD_I2C.c: 104:     _delay((unsigned long)((1)*(20000000/4000.0)));
  9325  162A  3007               	movlw	7
  9326  162B  00F3               	movwf	??_LCD_command+1
  9327  162C  307D               	movlw	125
  9328  162D  00F2               	movwf	??_LCD_command
  9329  162E                     u3767:
  9330  162E  0BF2               	decfsz	??_LCD_command,f
  9331  162F  2E2E               	goto	u3767
  9332  1630  0BF3               	decfsz	??_LCD_command+1,f
  9333  1631  2E2E               	goto	u3767
  9334  1632                     l2808:
  9335                           
  9336                           ;LCD_I2C.c: 105:     i2c_LCD_write(n &= 0xFB);
  9337  1632  30FB               	movlw	251
  9338  1633  00F2               	movwf	??_LCD_command
  9339  1634  0872               	movf	??_LCD_command,w
  9340  1635  05F5               	andwf	LCD_command@n,f
  9341  1636  0875               	movf	LCD_command@n,w
  9342  1637  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  9343  163C                     l2810:
  9344                           
  9345                           ;LCD_I2C.c: 106:     _delay((unsigned long)((1)*(20000000/4000.0)));
  9346  163C  3007               	movlw	7
  9347  163D  00F3               	movwf	??_LCD_command+1
  9348  163E  307D               	movlw	125
  9349  163F  00F2               	movwf	??_LCD_command
  9350  1640                     u3777:
  9351  1640  0BF2               	decfsz	??_LCD_command,f
  9352  1641  2E40               	goto	u3777
  9353  1642  0BF3               	decfsz	??_LCD_command+1,f
  9354  1643  2E40               	goto	u3777
  9355  1644                     l2812:
  9356                           
  9357                           ;LCD_I2C.c: 108:     n=(n & 0x0F)|(command << 4);
  9358  1644  0874               	movf	LCD_command@command,w
  9359  1645  00F2               	movwf	??_LCD_command
  9360  1646  3004               	movlw	4
  9361  1647                     u2115:
  9362  1647  1003               	clrc
  9363  1648  0DF2               	rlf	??_LCD_command,f
  9364  1649  3EFF               	addlw	-1
  9365  164A  1D03               	skipz
  9366  164B  2E47               	goto	u2115
  9367  164C  0875               	movf	LCD_command@n,w
  9368  164D  390F               	andlw	15
  9369  164E  0472               	iorwf	??_LCD_command,w
  9370  164F  00F3               	movwf	??_LCD_command+1
  9371  1650  0873               	movf	??_LCD_command+1,w
  9372  1651  00F5               	movwf	LCD_command@n
  9373  1652                     l2814:
  9374                           
  9375                           ;LCD_I2C.c: 109:     i2c_LCD_write(n);
  9376  1652  0875               	movf	LCD_command@n,w
  9377  1653  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  9378  1658                     l2816:
  9379                           
  9380                           ;LCD_I2C.c: 110:     i2c_LCD_write(n |= 0x04);
  9381  1658  1575               	bsf	LCD_command@n,2
  9382  1659  0875               	movf	LCD_command@n,w
  9383  165A  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  9384  165F                     l2818:
  9385                           
  9386                           ;LCD_I2C.c: 111:     _delay((unsigned long)((1)*(20000000/4000.0)));
  9387  165F  3007               	movlw	7
  9388  1660  00F3               	movwf	??_LCD_command+1
  9389  1661  307D               	movlw	125
  9390  1662  00F2               	movwf	??_LCD_command
  9391  1663                     u3787:
  9392  1663  0BF2               	decfsz	??_LCD_command,f
  9393  1664  2E63               	goto	u3787
  9394  1665  0BF3               	decfsz	??_LCD_command+1,f
  9395  1666  2E63               	goto	u3787
  9396  1667                     l2820:
  9397                           
  9398                           ;LCD_I2C.c: 112:     i2c_LCD_write(n &= 0xFB);
  9399  1667  30FB               	movlw	251
  9400  1668  00F2               	movwf	??_LCD_command
  9401  1669  0872               	movf	??_LCD_command,w
  9402  166A  05F5               	andwf	LCD_command@n,f
  9403  166B  0875               	movf	LCD_command@n,w
  9404  166C  160A  118A  229C  160A  118A  	fcall	_i2c_LCD_write
  9405  1671                     l2822:
  9406                           
  9407                           ;LCD_I2C.c: 113:     _delay((unsigned long)((1)*(20000000/4000.0)));
  9408  1671  3007               	movlw	7
  9409  1672  00F3               	movwf	??_LCD_command+1
  9410  1673  307D               	movlw	125
  9411  1674  00F2               	movwf	??_LCD_command
  9412  1675                     u3797:
  9413  1675  0BF2               	decfsz	??_LCD_command,f
  9414  1676  2E75               	goto	u3797
  9415  1677  0BF3               	decfsz	??_LCD_command+1,f
  9416  1678  2E75               	goto	u3797
  9417  1679                     l472:
  9418  1679  0008               	return
  9419  167A                     __end_of_LCD_command:
  9420                           
  9421                           	psect	text44
  9422  129C                     __ptext44:	
  9423 ;; *************** function _i2c_LCD_write *****************
  9424 ;; Defined at:
  9425 ;;		line 83 in file "LCD_I2C.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;  data            1    wreg     unsigned char 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  data            1    1[COMMON] unsigned char 
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1    wreg      void 
  9432 ;; Registers used:
  9433 ;;		wreg, status,2, status,0, pclath, cstack
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9439 ;;      Params:         0       0       0       0       0
  9440 ;;      Locals:         1       0       0       0       0
  9441 ;;      Temps:          0       0       0       0       0
  9442 ;;      Totals:         1       0       0       0       0
  9443 ;;Total ram usage:        1 bytes
  9444 ;; Hardware stack levels used: 1
  9445 ;; Hardware stack levels required when called: 2
  9446 ;; This function calls:
  9447 ;;		_i2c_start
  9448 ;;		_i2c_stop
  9449 ;;		_i2c_write
  9450 ;; This function is called by:
  9451 ;;		_LCD_command
  9452 ;;		_LCD_putc
  9453 ;;		_LCD_init
  9454 ;;		_TurnOn_Led
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           
  9459                           ;psect for function _i2c_LCD_write
  9460  129C                     _i2c_LCD_write:
  9461                           
  9462                           ;incstack = 0
  9463                           ; Regs used in _i2c_LCD_write: [wreg+status,2+status,0+pclath+cstack]
  9464                           ;i2c_LCD_write@data stored from wreg
  9465  129C  00F1               	movwf	i2c_LCD_write@data
  9466  129D                     l2634:
  9467                           
  9468                           ;LCD_I2C.c: 83: void i2c_LCD_write(unsigned char data);LCD_I2C.c: 84: {;LCD_I2C.c: 85:  
      +                             i2c_start();
  9469  129D  160A  118A  21C7  160A  118A  	fcall	_i2c_start
  9470                           
  9471                           ;LCD_I2C.c: 87:     i2c_write(i2c_addr);
  9472  12A2  1283               	bcf	3,5	;RP0=0, select bank0
  9473  12A3  1303               	bcf	3,6	;RP1=0, select bank0
  9474  12A4  083A               	movf	_i2c_addr,w
  9475  12A5  160A  118A  2209  160A  118A  	fcall	_i2c_write
  9476                           
  9477                           ;LCD_I2C.c: 89:     i2c_write(data | BackLight_State);
  9478  12AA  0871               	movf	i2c_LCD_write@data,w
  9479  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  9480  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  9481  12AD  043B               	iorwf	_BackLight_State,w
  9482  12AE  160A  118A  2209  160A  118A  	fcall	_i2c_write
  9483                           
  9484                           ;LCD_I2C.c: 90:     i2c_stop();
  9485  12B3  160A  118A  21D0  160A  118A  	fcall	_i2c_stop
  9486  12B8                     l469:
  9487  12B8  0008               	return
  9488  12B9                     __end_of_i2c_LCD_write:
  9489                           
  9490                           	psect	text45
  9491  1209                     __ptext45:	
  9492 ;; *************** function _i2c_write *****************
  9493 ;; Defined at:
  9494 ;;		line 74 in file "LCD_I2C.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  a               1    wreg     unsigned char 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  a               1    0[COMMON] unsigned char 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      void 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2, status,0, pclath, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9508 ;;      Params:         0       0       0       0       0
  9509 ;;      Locals:         1       0       0       0       0
  9510 ;;      Temps:          0       0       0       0       0
  9511 ;;      Totals:         1       0       0       0       0
  9512 ;;Total ram usage:        1 bytes
  9513 ;; Hardware stack levels used: 1
  9514 ;; Hardware stack levels required when called: 1
  9515 ;; This function calls:
  9516 ;;		_i2c_wait
  9517 ;; This function is called by:
  9518 ;;		_i2c_LCD_write
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           
  9523                           ;psect for function _i2c_write
  9524  1209                     _i2c_write:
  9525                           
  9526                           ;incstack = 0
  9527                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  9528                           ;i2c_write@a stored from wreg
  9529  1209  00F0               	movwf	i2c_write@a
  9530  120A                     l2612:
  9531                           
  9532                           ;LCD_I2C.c: 74: void i2c_write(unsigned char a);LCD_I2C.c: 75: {;LCD_I2C.c: 76:     SSPB
      +                          UF=a;
  9533  120A  0870               	movf	i2c_write@a,w
  9534  120B  1283               	bcf	3,5	;RP0=0, select bank0
  9535  120C  1303               	bcf	3,6	;RP1=0, select bank0
  9536  120D  0093               	movwf	19	;volatile
  9537  120E                     l2614:
  9538                           
  9539                           ;LCD_I2C.c: 77:     i2c_wait();
  9540  120E  160A  118A  221F  160A  118A  	fcall	_i2c_wait
  9541  1213                     l466:
  9542  1213  0008               	return
  9543  1214                     __end_of_i2c_write:
  9544                           
  9545                           	psect	text46
  9546  11D0                     __ptext46:	
  9547 ;; *************** function _i2c_stop *****************
  9548 ;; Defined at:
  9549 ;;		line 68 in file "LCD_I2C.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0, pclath, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9563 ;;      Params:         0       0       0       0       0
  9564 ;;      Locals:         0       0       0       0       0
  9565 ;;      Temps:          0       0       0       0       0
  9566 ;;      Totals:         0       0       0       0       0
  9567 ;;Total ram usage:        0 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; Hardware stack levels required when called: 1
  9570 ;; This function calls:
  9571 ;;		_i2c_wait
  9572 ;; This function is called by:
  9573 ;;		_i2c_LCD_write
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           
  9578                           ;psect for function _i2c_stop
  9579  11D0                     _i2c_stop:
  9580  11D0                     l2608:	
  9581                           ;incstack = 0
  9582                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  9583                           
  9584                           
  9585                           ;LCD_I2C.c: 70:     SSPCON2bits.PEN=1;
  9586  11D0  1683               	bsf	3,5	;RP0=1, select bank1
  9587  11D1  1303               	bcf	3,6	;RP1=0, select bank1
  9588  11D2  1511               	bsf	17,2	;volatile
  9589  11D3                     l2610:
  9590                           
  9591                           ;LCD_I2C.c: 71:     i2c_wait();
  9592  11D3  160A  118A  221F  160A  118A  	fcall	_i2c_wait
  9593  11D8                     l463:
  9594  11D8  0008               	return
  9595  11D9                     __end_of_i2c_stop:
  9596                           
  9597                           	psect	text47
  9598  11C7                     __ptext47:	
  9599 ;; *************** function _i2c_start *****************
  9600 ;; Defined at:
  9601 ;;		line 62 in file "LCD_I2C.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;		None
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0, pclath, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9615 ;;      Params:         0       0       0       0       0
  9616 ;;      Locals:         0       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0
  9618 ;;      Totals:         0       0       0       0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used: 1
  9621 ;; Hardware stack levels required when called: 1
  9622 ;; This function calls:
  9623 ;;		_i2c_wait
  9624 ;; This function is called by:
  9625 ;;		_i2c_LCD_write
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           
  9630                           ;psect for function _i2c_start
  9631  11C7                     _i2c_start:
  9632  11C7                     l2604:	
  9633                           ;incstack = 0
  9634                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  9635                           
  9636                           
  9637                           ;LCD_I2C.c: 64:     SSPCON2bits.SEN=1;
  9638  11C7  1683               	bsf	3,5	;RP0=1, select bank1
  9639  11C8  1303               	bcf	3,6	;RP1=0, select bank1
  9640  11C9  1411               	bsf	17,0	;volatile
  9641  11CA                     l2606:
  9642                           
  9643                           ;LCD_I2C.c: 65:     i2c_wait();
  9644  11CA  160A  118A  221F  160A  118A  	fcall	_i2c_wait
  9645  11CF                     l460:
  9646  11CF  0008               	return
  9647  11D0                     __end_of_i2c_start:
  9648                           
  9649                           	psect	text48
  9650  121F                     __ptext48:	
  9651 ;; *************** function _i2c_wait *****************
  9652 ;; Defined at:
  9653 ;;		line 57 in file "LCD_I2C.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;		None
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9667 ;;      Params:         0       0       0       0       0
  9668 ;;      Locals:         0       0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0
  9670 ;;      Totals:         0       0       0       0       0
  9671 ;;Total ram usage:        0 bytes
  9672 ;; Hardware stack levels used: 1
  9673 ;; This function calls:
  9674 ;;		Nothing
  9675 ;; This function is called by:
  9676 ;;		_i2c_start
  9677 ;;		_i2c_stop
  9678 ;;		_i2c_write
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           
  9683                           ;psect for function _i2c_wait
  9684  121F                     _i2c_wait:
  9685  121F                     l2600:	
  9686                           ;incstack = 0
  9687                           ; Regs used in _i2c_wait: [wreg+status,2]
  9688                           
  9689  121F                     l454:	
  9690                           ;LCD_I2C.c: 59:     while(SSPSTATbits.R_W!=0 || (SSPCON2 & 0x1F)!=0);
  9691                           
  9692  121F  1683               	bsf	3,5	;RP0=1, select bank1
  9693  1220  1303               	bcf	3,6	;RP1=0, select bank1
  9694  1221  1914               	btfsc	20,2	;volatile
  9695  1222  2A24               	goto	u1851
  9696  1223  2A25               	goto	u1850
  9697  1224                     u1851:
  9698  1224  2A1F               	goto	l454
  9699  1225                     u1850:
  9700  1225                     l2602:
  9701  1225  0811               	movf	17,w	;volatile
  9702  1226  391F               	andlw	31
  9703  1227  1D03               	btfss	3,2
  9704  1228  2A2A               	goto	u1861
  9705  1229  2A2B               	goto	u1860
  9706  122A                     u1861:
  9707  122A  2A1F               	goto	l454
  9708  122B                     u1860:
  9709  122B                     l457:
  9710  122B  0008               	return
  9711  122C                     __end_of_i2c_wait:
  9712  007E                     btemp	set	126	;btemp
  9713  007E                     wtemp0	set	126
  9714                           
  9715                           	psect	config
  9716                           
  9717                           ;Config register CONFIG @ 0x2007
  9718                           ;	Oscillator Selection bits
  9719                           ;	FOSC = HS, HS oscillator
  9720                           ;	Watchdog Timer Enable bit
  9721                           ;	WDTE = OFF, WDT disabled
  9722                           ;	Power-up Timer Enable bit
  9723                           ;	PWRTE = OFF, PWRT disabled
  9724                           ;	Brown-out Reset Enable bit
  9725                           ;	BOREN = OFF, BOR disabled
  9726                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9727                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9728                           ;	Data EEPROM Memory Code Protection bit
  9729                           ;	CPD = OFF, Data EEPROM code protection off
  9730                           ;	Flash Program Memory Write Enable bits
  9731                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9732                           ;	In-Circuit Debugger Mode bit
  9733                           ;	DEBUG = 0x1, unprogrammed default
  9734                           ;	Flash Program Memory Code Protection bit
  9735                           ;	CP = OFF, Code protection off
  9736  2007                     	org	8199
  9737  2007  3F3A               	dw	16186

Data Sizes:
    Strings     466
    Constant    8
    Data        10
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      76
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_11(CODE[18]), STR_10(CODE[23]), STR_9(CODE[23]), STR_8(CODE[23]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> str1(BANK1[16]), str2(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_puts@str	PTR unsigned char  size(2) Largest target is 18
		 -> STR_51(CODE[17]), STR_50(CODE[17]), STR_49(CODE[17]), STR_48(CODE[5]), 
		 -> STR_47(CODE[3]), STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[5]), 
		 -> STR_43(CODE[17]), STR_42(CODE[17]), STR_41(CODE[5]), STR_40(CODE[11]), 
		 -> STR_39(CODE[17]), STR_38(CODE[5]), STR_37(CODE[11]), STR_36(CODE[17]), 
		 -> STR_35(CODE[5]), STR_34(CODE[11]), STR_33(CODE[16]), STR_32(CODE[5]), 
		 -> STR_31(CODE[11]), STR_30(CODE[16]), STR_29(CODE[5]), STR_28(CODE[11]), 
		 -> STR_27(CODE[16]), STR_26(CODE[5]), STR_25(CODE[11]), STR_24(CODE[18]), 
		 -> STR_23(CODE[6]), STR_22(CODE[11]), STR_21(CODE[17]), STR_20(CODE[10]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[10]), 
		 -> STR_15(CODE[10]), STR_14(CODE[10]), STR_13(CODE[8]), STR_12(CODE[17]), 
		 -> str1(BANK1[16]), str2(BANK1[16]), 

    RTC_Read_DateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> RTCbits(BANK0[7]), 

    RTC_Set_DateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> RTCbits(BANK0[7]), 


Critical Paths under _main in COMMON

    _TurnOn_Led->_i2c_LCD_write
    _Setup_Alarm->_Display_Alarm
    _Display_Alarm->_LCD_int
    _Display_Alarm->_LCD_puts
    _SetMode->_SetTime
    _BCDtoDec->___bmul
    _SetThu->_SetDate
    _SetThang->_SetDate
    _SetPhut->_SetTime
    _SetNgay->_SetDate
    _SetNamdv->_SetDate
    _SetNamchuc->_SetDate
    _SetDate->_DecToBCD
    _SetGio->_SetTime
    _SetGiay->_SetTime
    _SetTime->_DecToBCD
    _RTC_Set_DateTime->_I2C_write
    _DecToBCD->___awdiv
    _LCD_int->___lwdiv
    _Display_Time->_LCD_puts
    _sprintf->___lwdiv
    _RTC_Read_DateTime->_I2C_read
    _I2C_read->_I2C_wait
    _I2C_Send_NACK->_I2C_wait
    _I2C_Send_ACK->_I2C_wait
    _LCD_puts->_LCD_putc
    _LCD_putc->_i2c_LCD_write
    _LCD_gotoxy->_LCD_command
    _RTC_init->_I2C_write
    _I2C_write->_I2C_wait
    _I2C_stop->_I2C_wait
    _I2C_start->_I2C_wait
    _LCD_init->_LCD_command
    _LCD_command->_i2c_LCD_write
    _i2c_LCD_write->_i2c_write

Critical Paths under _main in BANK0

    _main->_Select_Menu
    _Setup_Alarm->_Display_Alarm
    _Display_Alarm->_LCD_int
    _SetMode->_SetTime
    _Select_Menu->_Display_Time
    _SetThu->_SetDate
    _SetThang->_LCD_int
    _SetPhut->_LCD_int
    _SetNgay->_LCD_int
    _SetNamdv->_LCD_int
    _SetNamchuc->_LCD_int
    _SetDate->_DecToBCD
    _SetGio->_LCD_int
    _SetGiay->_LCD_int
    _SetTime->_DecToBCD
    _Display_Time->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  138012
                                             27 BANK0      4     4      0
                           _BCDtoDec
                           _LCD_init
                           _RTC_init
                        _Select_Menu
                            _SetMode
                        _Setup_Alarm
                         _TurnOn_Led
 ---------------------------------------------------------------------------------
 (1) _TurnOn_Led                                           1     1      0      44
                                              2 COMMON     1     1      0
                      _i2c_LCD_write
 ---------------------------------------------------------------------------------
 (1) _Setup_Alarm                                          7     7      0   17668
                                             10 BANK0      7     7      0
                      _Display_Alarm
                         _LCD_gotoxy
                           _LCD_puts
 ---------------------------------------------------------------------------------
 (2) _Display_Alarm                                        3     1      2   10443
                                             13 COMMON     1     1      0
                                              8 BANK0      2     0      2
                         _LCD_gotoxy
                            _LCD_int
                           _LCD_putc
                           _LCD_puts
 ---------------------------------------------------------------------------------
 (1) _SetMode                                              2     2      0    3752
                                              7 BANK0      2     2      0
                           _BCDtoDec
                           _DecToBCD
                            _SetTime
 ---------------------------------------------------------------------------------
 (2) _BCDtoDec                                             6     6      0     638
                                              4 COMMON     6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Select_Menu                                          3     3      0  115508
                                             24 BANK0      3     3      0
                       _Display_Time
                         _LCD_gotoxy
                           _LCD_puts
                            _SetGiay
                             _SetGio
                         _SetNamchuc
                           _SetNamdv
                            _SetNgay
                            _SetPhut
                           _SetThang
                             _SetThu
 ---------------------------------------------------------------------------------
 (2) _SetThu                                               4     4      0   10094
                                              7 BANK0      4     4      0
                         _LCD_gotoxy
                           _LCD_puts
                            _SetDate
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _SetThang                                             4     4      0   12944
                                              8 BANK0      4     4      0
                         _LCD_gotoxy
                            _LCD_int
                           _LCD_puts
                            _SetDate
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _SetPhut                                              2     2      0   12060
                                              8 BANK0      2     2      0
                         _LCD_gotoxy
                            _LCD_int
                           _LCD_puts
                            _SetTime
 ---------------------------------------------------------------------------------
 (2) _SetNgay                                              4     4      0   12944
                                              8 BANK0      4     4      0
                         _LCD_gotoxy
                            _LCD_int
                           _LCD_puts
                            _SetDate
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _SetNamdv                                             4     4      0   12944
                                              8 BANK0      4     4      0
                         _LCD_gotoxy
                            _LCD_int
                           _LCD_puts
                            _SetDate
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _SetNamchuc                                           4     4      0   12944
                                              8 BANK0      4     4      0
                         _LCD_gotoxy
                            _LCD_int
                           _LCD_puts
                            _SetDate
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     548
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _SetDate                                              5     2      3    2460
                                             13 COMMON     1     1      0
                                              3 BANK0      4     1      3
                           _DecToBCD
                   _RTC_Set_DateTime
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetGio                                               2     2      0   12060
                                              8 BANK0      2     2      0
                         _LCD_gotoxy
                            _LCD_int
                           _LCD_puts
                            _SetTime
 ---------------------------------------------------------------------------------
 (2) _SetGiay                                              2     2      0   12060
                                              8 BANK0      2     2      0
                         _LCD_gotoxy
                            _LCD_int
                           _LCD_puts
                            _SetTime
 ---------------------------------------------------------------------------------
 (2) _SetTime                                              5     3      2    2124
                                             13 COMMON     1     1      0
                                              3 BANK0      4     2      2
                           _DecToBCD
                   _RTC_Set_DateTime
 ---------------------------------------------------------------------------------
 (3) _RTC_Set_DateTime                                     1     1      0     242
                                              3 COMMON     1     1      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (3) _DecToBCD                                             7     7      0     990
                                              9 COMMON     4     4      0
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_int                                             13    11      2    2850
                                              8 COMMON     5     3      2
                                              0 BANK0      8     8      0
                           _LCD_putc
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Display_Time                                         6     6      0   10372
                                             18 BANK0      6     6      0
                         _LCD_gotoxy
                           _LCD_puts
                  _RTC_Read_DateTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             30    22      8    3031
                                              8 COMMON     4     4      0
                                              0 BANK0     18    10      8
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RTC_Read_DateTime                                    2     2      0     255
                                              5 COMMON     2     2      0
                           _I2C_read
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (4) _I2C_read                                             3     3      0      46
                                              2 COMMON     3     3      0
                       _I2C_Send_ACK
                      _I2C_Send_NACK
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_NACK                                        0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_ACK                                         0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _LCD_puts                                             7     5      2    3571
                                              6 COMMON     7     5      2
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             4     4      0     289
                                              2 COMMON     4     4      0
                      _i2c_LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_gotoxy                                           4     3      1    3515
                                              6 COMMON     4     3      1
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _RTC_init                                             0     0      0      22
                           _I2C_init
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (4) _I2C_write                                            1     1      0      22
                                              2 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (4) _I2C_stop                                             0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (4) _I2C_start                                            0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (5) _I2C_wait                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     355
                                              6 COMMON     2     2      0
                        _LCD_command
                      _i2c_LCD_write
 ---------------------------------------------------------------------------------
 (3) _LCD_command                                          4     4      0     289
                                              2 COMMON     4     4      0
                      _i2c_LCD_write
 ---------------------------------------------------------------------------------
 (2) _i2c_LCD_write                                        1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BCDtoDec
     ___bmul
   _LCD_init
     _LCD_command
       _i2c_LCD_write
         _i2c_start
           _i2c_wait
         _i2c_stop
           _i2c_wait
         _i2c_write
           _i2c_wait
     _i2c_LCD_write
   _RTC_init
     _I2C_init
     _I2C_start
       _I2C_wait
     _I2C_stop
       _I2C_wait
     _I2C_write
       _I2C_wait
   _Select_Menu
     _Display_Time
       _LCD_gotoxy
         _LCD_command
       _LCD_puts
         _LCD_putc
           _i2c_LCD_write
       _RTC_Read_DateTime
         _I2C_read
           _I2C_Send_ACK
             _I2C_wait
           _I2C_Send_NACK
             _I2C_wait
           _I2C_wait
         _I2C_start
         _I2C_stop
         _I2C_write
       _sprintf
         ___lwdiv
         ___wmul
         _isdigit
     _LCD_gotoxy
     _LCD_puts
     _SetGiay
       _LCD_gotoxy
       _LCD_int
         _LCD_putc
         ___lwdiv
         ___lwmod
         ___wmul
       _LCD_puts
       _SetTime
         _DecToBCD
           ___awdiv
           ___awmod
         _RTC_Set_DateTime
           _I2C_start
           _I2C_stop
           _I2C_write
     _SetGio
       _LCD_gotoxy
       _LCD_int
       _LCD_puts
       _SetTime
     _SetNamchuc
       _LCD_gotoxy
       _LCD_int
       _LCD_puts
       _SetDate
         _DecToBCD
         _RTC_Set_DateTime
         ___bmul (ARG)
       ___bmul
     _SetNamdv
       _LCD_gotoxy
       _LCD_int
       _LCD_puts
       _SetDate
       ___bmul
     _SetNgay
       _LCD_gotoxy
       _LCD_int
       _LCD_puts
       _SetDate
       ___bmul
     _SetPhut
       _LCD_gotoxy
       _LCD_int
       _LCD_puts
       _SetTime
     _SetThang
       _LCD_gotoxy
       _LCD_int
       _LCD_puts
       _SetDate
       ___bmul
     _SetThu
       _LCD_gotoxy
       _LCD_puts
       _SetDate
       ___bmul
   _SetMode
     _BCDtoDec
     _DecToBCD
     _SetTime
   _Setup_Alarm
     _Display_Alarm
       _LCD_gotoxy
       _LCD_int
       _LCD_putc
       _LCD_puts
     _LCD_gotoxy
     _LCD_puts
   _TurnOn_Led
     _i2c_LCD_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7A      12        0.0%
ABS                  0      0      7A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 05 07:31:07 2022

                         _g 0026                           pc 0002              ___bmul@product 0072  
               _SSPSTATbits 0094                          _AP 006A                ___awdiv@sign 0076  
                        _gi 0022                          _ph 0024                          _tt 0020  
                        fsr 0004         ___wmul@multiplicand 0072          __size_of_I2C_start 0009  
        __size_of_I2C_write 000B                         l100 0FE9                         l110 12F8  
                       l113 1541                         l201 0DFB                         l130 15A4  
                       l122 12D6                         l116 1769                         l220 0C07  
                       l133 13D5                         l150 0316                         l119 144A  
                       l311 17FF                         l128 1588                         l304 178A  
                       l216 0E9C                         l400 046A                         l209 0E17  
                       l401 0417                         l162 0028                         l154 000C  
                       l330 0F46                         l235 0CA6                         l315 0EA3  
                       l148 02D3                         l228 0C21                         l254 0D4C  
                       l190 0D6F                         l182 0D53                         l350 071D  
                       l342 062F                         l422 046E                         l247 0CC7  
                       l239 0CAD                         l511 1238                         l505 139F  
                       l273 0ACC                         l345 0662                         l266 0A57  
                       l258 0A3D                         l178 00E3                         l346 069C  
                       l426 0472                         l347 06C3                         l460 11CF  
                       l508 1343                         l292 0B62                         l356 07AD  
                       l348 06E1                         l380 03C3                         l197 0DF4  
                       l285 0AED                         l277 0AD3                         l357 07DD  
                       l373 03BD                         l454 121F                         l542 1286  
                       l366 0C00                         l374 0374                         l463 11D8  
                       l551 11EA                         l472 1679                         l536 1271  
                       l560 11FE                         l296 1770                         l457 122B  
                       l545 11E1                         l481 148C                         l466 1213  
                       l554 121E                         l539 1272                         l475 16E8  
                       l723 129B                         l379 0413                         l469 12B8  
                       l557 11F4                         l565 1369                         l486 0116  
                       l663 0491                         l487 012E                         l496 01E4  
                       l488 0146                         l850 160B                         l693 0622  
                       l863 14E5                         l697 1305                         l699 131D  
                       l969 0A36                         l979 140F                         _RB0 0030  
                       _RB1 0031                         _RB2 0032                         _RB3 0033  
                       _RD0 0040                         _RB4 0034                 ?_LCD_gotoxy 0076  
                       _gio 0032                         _thu 0066                         fsr0 0004  
                       indf 0000                ___awmod@sign 0076             __end_of_LCD_int 01E5  
                      l1150 124A                        l3000 05A2                        l3010 05E3  
                      l3002 05A9                        l3012 05F2                        l3004 05AD  
                      l3020 061E                        l3100 1288                        l3014 05F9  
                      l3006 05B9                        l3110 129A                        l3102 1289  
                      l3040 1384                        l3032 136B                        l3008 05BE  
                      l3016 05FD                        l3104 128D                        l3200 0058  
                      l3122 125E                        l3034 136C                        l3042 138C  
                      l3050 144E                        l3018 0606                        l3130 01E5  
                      l3106 1291                        l3210 008A                        l3202 0062  
                      l3114 12BA                        l3124 1268                        l3036 1374  
                      l3052 146A                        l3140 0218                        l3132 01EC  
                      l3060 00E8                        l3108 1293                        l3300 0E7C  
                      l3212 0094                        l3204 006C                        l3220 00C3  
                      l3116 12CF                        l3126 126C                        l3038 137C  
                      l3054 1470                        l3142 0223                        l3134 01F7  
                      l3150 0257                        l3070 011F                        l3062 00F1  
                      l3310 0C1B                        l3302 0C01                        l3230 0D57  
                      l3214 009E                        l3206 0076                        l3118 12D4  
                      l2600 121F                        l3128 126F                        l3048 144B  
                      l3160 02AC                        l3152 025E                        l3144 022E  
                      l3136 0202                        l3080 0158                        l3072 0128  
                      l3064 00FE                        l3056 00E4                        l3400 0A76  
                      l3320 0C34                        l3312 0C1D                        l3240 0D73  
                      l3232 0D5E                        l3208 0080                        l2602 1225  
                      l2610 11D3                        l3162 02B3                        l3154 0265  
                      l3138 020D                        l3090 018B                        l3082 015E  
                      l3074 0137                        l3066 0107                        l3410 0AA7  
                      l3402 0A7F                        l3330 0C5A                        l3322 0C38  
                      l3306 0C0B                        l3250 0D97                        l3242 0D79  
                      l3234 0D67                        l3226 0D4D                        l3218 00A8  
                      l2604 11C7                        l2612 120A                        l2620 127E  
                      l3164 02F4                        l3156 026A                        l3148 0239  
                      l3092 0191                        l3084 016D                        l3076 0140  
                      l3068 0110                        l2700 14A2                        l3412 0AB3  
                      l3404 0A87                        l3332 0C66                        l3324 0C40  
                      l3316 0C25                        l3308 0C12                        l3340 0CA7  
                      l3260 0DCB                        l3252 0D9F                        l3244 0D82  
                      l3236 0D6B                        l3420 0AD7                        l3180 0017  
                      l3500 0B86                        l2606 11CA                        l2614 120E  
                      l2622 11D9                        l2630 11E2                        l3166 02FC  
                      l3158 028B                        l3094 01A7                        l3086 0173  
                      l3078 014F                        l2710 14BA                        l2702 14A8  
                      l3414 0ABC                        l3406 0A90                        l3334 0C71  
                      l3326 0C49                        l3318 0C2B                        l3350 0CC3  
                      l3262 0DD4                        l3254 0DA8                        l3246 0D86  
                      l3430 0AF1                        l3422 0ADE                        l3270 0E06  
                      l3190 0032                        l3182 0020                        l3174 0006  
                      l3510 0BB4                        l3502 0B90                        l2608 11D0  
                      l2800 1614                        l2616 1272                        l2624 11DC  
                      l2632 11E5                        l2640 11F5                        l3168 030D  
                      l3096 01D6                        l3088 0176                        l2720 14DC  
                      l2712 14C4                        l2704 14AB                        l3408 0A9C  
                      l3336 0C7D                        l3328 0C51                        l3360 0CDE  
                      l3344 0CB1                        l3256 0DB4                        l3248 0D8E  
                      l3440 0B15                        l3432 0AF7                        l3424 0AE7  
                      l3416 0ACD                        l3280 0E21                        l3272 0E0F  
                      l3264 0DF5                        l3192 003B                        l3184 0024  
                      l3600 0653                        l3520 0BE2                        l3512 0BBE  
                      l3504 0B9B                        l2634 129D                        l2810 163C  
                      l2802 161D                        l3530 1325                        l2618 1278  
                      l2626 1215                        l2642 11F9                        l3098 01DE  
                      l2650 15AF                        l2722 14E1                        l2714 14CA  
                      l2706 14B2                        l2730 1501                        l3338 0C86  
                      l3370 0D0C                        l3362 0CE6                        l3354 0CCB  
                      l3346 0CB8                        l3258 0DBF                        l3450 0B49  
                      l3442 0B1D                        l3434 0B00                        l3426 0AE9  
                      l3290 0E47                        l3282 0E2A                        l3274 0E13  
                      l3194 003F                        l3178 0010                        l3610 06FF  
                      l3602 0673                        l3522 0BEC                        l3514 0BC9  
                      l3506 0BA1                        l2820 1667                        l2812 1644  
                      l2804 1623                        l3532 132B                        l2628 1219  
                      l2636 11EB                        l2900 170B                        l2660 15C0  
                      l2652 15B1                        l2644 15A5                        l2716 14D1  
                      l2708 14B6                        l2740 1532                        l2732 150A  
                      l3460 177B                        l3372 0D17                        l3364 0CEF  
                      l3356 0CD1                        l3348 0CC1                        l3452 0B52  
                      l3444 0B26                        l3436 0B04                        l3292 0E50  
                      l3284 0E2E                        l3268 0DFF                        l3196 0047  
                      l3188 002C                        l3620 0721                        l3612 070D  
                      l3604 0682                        l3524 0BF7                        l3516 0BCF  
                      l3508 0BAA                        l3700 03ED                        l3540 122C  
                      l2822 1671                        l2814 1652                        l2806 162A  
                      l3534 1331                        l3526 12D7                        l2638 11EF  
                      l2750 134D                        l2910 174A                        l2902 1717  
                      l2830 1247                        l2670 15D8                        l2662 15C6  
                      l2654 15B5                        l2646 15A6                        l2718 14D7  
                      l2742 153C                        l2734 1514                        l2726 14E7  
                      l3470 1794                        l3462 1784                        l3454 176A  
                      l3382 0A41                        l3374 0D23                        l3366 0CF7  
                      l3358 0CDA                        l3446 0B32                        l3438 0B0C  
                      l3294 0E5C                        l3286 0E36                        l3278 0E1B  
                      l3198 0050                        l3550 0EAF                        l3630 074A  
                      l3622 0723                        l3606 06A7                        l3614 0713  
                      l3518 0BD8                        l3702 03F0                        l3710 0403  
                      l3542 1232                        l2816 1658                        l2808 1632  
                      l3536 1337                        l3528 131F                        l2760 1368  
                      l2752 1353                        l2744 1345                        l2912 1757  
                      l2904 1723                        l2840 12FF                        l2832 1249  
                      l2824 123A                        l2672 15E9                        l2664 15C9  
                      l2680 15FD                        l2656 15BA                        l2648 15AA  
                      l2736 151E                        l2728 14F8                        l2920 1552  
                      l3480 17BA                        l3472 179D                        l3464 1786  
                      l3392 0A5B                        l3384 0A48                        l3376 0D2C  
                      l3368 0D00                        l3448 0B3D                        l3296 0E67  
                      l3288 0E3F                        l3560 0EE9                        l3552 0EB8  
                      l3544 0E9D                        l3640 078C                        l3632 0756  
                      l3624 0727                        l3616 0717                        l3608 06D0  
                      l3720 042D                        l3704 03F7                        l2818 165F  
                      l3538 133D                        l2770 167B                        l2754 1358  
                      l2746 1345                        l2914 1764                        l2906 1730  
                      l2850 09F3                        l2842 130C                        l2826 123B  
                      l2682 1602                        l2674 15EF                        l2666 15D0  
                      l2658 15BE                        l2690 148E                        l2738 1528  
                      l2922 155F                        l3490 17EF                        l3482 17C3  
                      l3474 17A1                        l3458 1774                        l3394 0A61  
                      l3386 0A51                        l3378 0A37                        l2930 13A3  
                      l3298 0E73                        l3570 0F06                        l3562 0EEE  
                      l3554 0EC0                        l3642 0790                        l3634 0767  
                      l3626 0737                        l3730 044C                        l3722 0432  
                      l3714 041B                        l3706 0400                        l3650 0317  
                      l2780 1699                        l2772 167D                        l2756 135D  
                      l2748 1348                        l2908 173D                        l2860 0A09  
                      l2852 09F5                        l2844 1313                        l2836 12F9  
                      l2828 1241                        l2940 0488                        l2684 1607  
                      l2676 15F0                        l2668 15D4                        l2692 1492  
                      l2764 1413                        l2924 1576                        l2916 1543  
                      l3484 17CF                        l3476 17A9                        l3468 178E  
                      l3396 0A6A                        l3388 0A53                        l2932 13CF  
                      l3572 0F0C                        l3564 0EF4                        l3556 0EC9  
                      l3548 0EA7                        l3644 079C                        l3636 076D  
                      l3628 0746                        l3492 0B63                        l3732 0455  
                      l3724 0438                        l3716 041E                        l3660 033F  
                      l3652 031D                        l2790 16CE                        l2782 16A1  
                      l2774 1683                        l2758 1363                        l2870 0A2C  
                      l2862 0A0D                        l2854 09FB                        l2846 1319  
                      l2838 12FB                        l2950 04AD                        l2942 048D  
                      l2934 0476                        l2678 15F7                        l2694 1497  
                      l2766 1448                        l2926 157D                        l2918 154C  
                      l3486 17DA                        l3478 17B2                        l3398 0A6E  
                      l3574 0F12                        l3566 0EFA                        l3558 0EDA  
                      l3582 0F24                        l3646 07CB                        l3638 077D  
                      l3590 0629                        l3494 0B6B                        l3726 0441  
                      l3718 0424                        l3670 036E                        l3662 034A  
                      l3654 031F                        l3750 0F4B                        l2792 16D6  
                      l2784 16AB                        l2776 168C                        l2864 0A1E  
                      l2856 09FE                        l2872 0A32                        l2960 04F3  
                      l2952 04BF                        l2944 0492                        l2936 047B  
                      l2880 13DF                        l2696 1499                        l2688 148D  
                      l2928 159E                        l3488 17E6                        l3576 0F18  
                      l3568 0F00                        l3648 07CF                        l3496 0B74  
                      l3728 0446                        l3736 045A                        l3680 0393  
                      l3664 0355                        l3656 0327                        l3760 0F59  
                      l3752 0F4F                        l2794 16E0                        l2786 16C1  
                      l2778 1692                        l2866 0A24                        l2858 0A05  
                      l2970 0533                        l2954 04C3                        l2938 0481  
                      l2890 13FE                        l2882 13E6                        l2698 149D  
                      l3578 0F1E                        l3594 0633                        l3498 0B7C  
                      l3690 03CA                        l3682 039C                        l3674 0378  
                      l3666 035D                        l3658 0330                        l3770 0F84  
                      l3762 0F5F                        l3754 0F50                        l2796 160D  
                      l2788 16C7                        l2868 0A25                        l2980 0555  
                      l2956 04D8                        l2964 0505                        l2948 0498  
                      l2892 1405                        l2884 13EA                        l2876 13D6  
                      l3596 0637                        l3588 0623                        l3692 03D1  
                      l3684 03AD                        l3676 037E                        l3668 036A  
                      l3780 0FE0                        l3772 0F9D                        l3764 0F64  
                      l3756 0F51                        l3748 0F47                        l2798 160E  
                      l2990 057E                        l2982 055F                        l2966 0527  
                      l2958 04ED                        l2886 13EE                        l2878 13DC  
                      l2894 140B                        l3598 0642                        l3694 03DA  
                      l3678 038B                        l3790 0FF3                        l3782 0FE1  
                      l3774 0FB2                        l3766 0F69                        l3758 0F54  
                      l2992 0584                        l2984 056A                        l2976 0535  
                      l2968 052F                        l2888 13F8                        l3960 0408  
                      l3696 03DD                        l3688 03C7                        l3792 0FF4  
                      l3776 0FC6                        l3784 0FE5                        l3768 0F6E  
                      l2898 16EA                        l2994 058B                        l2986 0576  
                      l3970 04A8                        l3962 045F                        l3698 03E4  
                      l3794 0FF7                        l3778 0FDA                        l2996 058F  
                      l2988 057A                        l3972 051F                        l3964 0F29  
                      l3788 0FED                        l3974 1394                        l2998 059C  
                      l3966 00AF                        l3968 0243                        STR_1 09DA  
                      STR_2 09D5                        STR_3 09CB                        STR_4 09C6  
                      STR_5 09DF                        STR_6 09D0                        STR_7 09E4  
                      STR_8 0831                        STR_9 0848                ?_LCD_command 0070  
                      u2000 149D                        u2001 149C                        u2010 14A8  
                      u2011 14A7                        u2030 14BA                        u2031 14B9  
                      u2200 0A0D                        u2120 1241                        u2040 14C4  
                      u3000 0A41                        u2105 16B6                        u2201 0A0C  
                      u2121 1240                        u2041 14C3                        u2025 14AC  
                      u3001 0A40                        u2130 1247                        u3010 0A48  
                      u2115 1647                        u2131 1246                        u3011 0A47  
                      u2220 0A1E                        u2140 12FF                        u2300 140B  
                      u2060 14D7                        u3020 0A57                        u3100 0AF7  
                      u2221 0A1D                        u2141 12FE                        u2301 140A  
                      u2061 14D6                        u2045 14C0                        u3021 0A56  
                      u3101 0AF6                        u2070 14DC                        u2310 154C  
                      u3110 1770                        u3030 0A5B                        u2215 0A0E  
                      u2071 14DB                        u2055 14CB                        u2311 154B  
                      u3111 176F                        u3031 0A5A                        u2080 135D  
                      u2240 0A32                        u2400 056A                        u2320 1552  
                      u3120 1774                        u3040 0A61                        u3200 0EA3  
                      u2081 135C                        u2241 0A31                        u2225 0A1A  
                      u2401 0569                        u2321 1551                        u3121 1773  
                      u3041 0A60                        u3201 0EA2                        u2170 1319  
                      u2410 057E                        u2250 13DC                        u3130 177B  
                      u3050 0AD3                        u3210 0EA7                        u2235 0A26  
                      u2171 1318                        u2155 1306                        u2411 057D  
                      u2251 13DB                        u3131 177A                        u3051 0AD2  
                      u3211 0EA6                        u2500 148C                        u2180 09FB  
                      u2420 0584                        u2340 157D                        u3140 178A  
                      u3060 0AD7                        u3220 0EB8                        u3300 06A7  
                      u2501 148B                        u2181 09FA                        u2165 130D  
                      u2421 0583                        u2405 0566                        u2341 157C  
                      u3141 1789                        u3061 0AD6                        u3221 0EB7  
                      u3301 06A6                        u2430 059B                        u2350 0481  
                      u2270 13EE                        u2510 00F1                        u3150 178E  
                      u3070 0ADE                        u3310 06D0                        u3230 0629  
                      u2431 059A                        u2351 0480                        u2271 13ED  
                      u2511 00F0                        u2095 1426                        u2335 1562  
                      u3151 178D                        u3071 0ADD                        u3311 06CF  
                      u3231 0628                        u2440 05A2                        u2360 04BF  
                      u2280 13F8                        u2600 016D                        u2520 0107  
                      u3160 1794                        u3080 0AED                        u3400 077D  
                      u3320 0717                        u3240 062F                        u2441 05A1  
                      u2361 04BE                        u2281 13F7                        u2265 13E0  
                      u2601 016C                        u2521 0106                        u3161 1793  
                      u3081 0AEC                        u3401 077C                        u3321 0716  
                      u3241 062E                        u2450 05B9                        u2370 0505  
                      u2610 01A7                        u2530 0110                        u3090 0AF1  
                      u3410 0790                        u3330 071D                        u3250 0633  
                      u3170 0B7C                        u2195 09FF                        u2451 05B8  
                      u2371 0504                        u2611 01A6                        u2531 010F  
                      u3091 0AF0                        u3411 078F                        u3331 071C  
                      u3251 0632                        u3171 0B7B                        u2460 0606  
                      u2380 0554                        u2620 01E4                        u2540 011F  
                      u1900 15B5                        u2700 0010                        u3420 079C  
                      u3340 0721                        u3260 0642                        u3180 0BAA  
                      u3500 03D1                        u2461 0605                        u2381 0553  
                      u2285 13F4                        u2621 01E3                        u2605 0169  
                      u2541 011E                        u1901 15B4                        u2701 000F  
                      u3421 079B                        u3341 0720                        u3261 0641  
                      u3181 0BA9                        u3501 03D0                        u2470 061E  
                      u2390 055F                        u2550 0128                        u1910 15C6  
                      u2630 128D                        u2710 0017                        u3350 0727  
                      u3270 0653                        u3190 0BD8                        u3510 03E4  
                      u3430 033F                        u2471 061D                        u2391 055E  
                      u2295 13FF                        u2615 01A3                        u2551 0127  
                      u1911 15C5                        u2631 128C                        u2711 0016  
                      u3351 0726                        u3271 0652                        u3191 0BD7  
                      u3511 03E3                        u3431 033E                        u2480 1458  
                      u2560 0137                        u2640 129A                        u2800 0D79  
                      u2720 0028                        u3360 0737                        u3280 0673  
                      u3520 03F7                        u3440 036A                        u3600 0F84  
                      u2385 0550                        u2561 0136                        u2641 1299  
                      u2801 0D78                        u2721 0027                        u3361 0736  
                      u3281 0672                        u3521 03F6                        u3441 0369  
                      u3601 0F83                        u1850 1225                        u2490 147A  
                      u2570 0140                        u1930 15D8                        u2810 0DFB  
                      u2730 002C                        u3370 074A                        u3290 0682  
                      u3530 0417                        u3450 0374                        u3610 0F9D  
                      u1851 1224                        u2571 013F                        u1931 15D7  
                      u2811 0DFA                        u2731 002B                        u3371 0749  
                      u3291 0681                        u3531 0416                        u3451 0373  
                      u3435 033B                        u3611 0F9C                        u1860 122B  
                      u2660 0265                        u2580 014F                        u2900 0C21  
                      u2820 0DFF                        u2740 0032                        u3380 0756  
                      u3540 041B                        u3460 0378                        u3620 0FB2  
                      u1861 122A                        u2661 0264                        u2581 014E  
                      u1925 15CA                        u2901 0C20                        u2821 0DFE  
                      u2741 0031                        u3381 0755                        u3541 041A  
                      u3461 0377                        u3445 0366                        u3621 0FB1  
                      u3605 0F80                        u1870 1278                        u2670 026A  
                      u2590 0158                        u1950 15E9                        u2910 0C25  
                      u2750 0D53                        u2830 0E06                        u3390 076D  
                      u3550 0424                        u3470 038B                        u3630 0FC6  
                      u1871 1277                        u2671 0269                        u2591 0157  
                      u1951 15E8                        u2911 0C24                        u2751 0D52  
                      u2831 0E05                        u2655 12C1                        u3391 076C  
                      u3551 0423                        u3471 038A                        u3631 0FC5  
                      u3615 0F99                        u1880 127E                        u2680 02B3  
                      u2920 0C2B                        u2760 0D57                        u2840 0E17  
                      u3560 0438                        u3480 03C3                        u3640 0FDA  
                      u1881 127D                        u2681 02B2                        u1945 15D9  
                      u2921 0C2A                        u2761 0D56                        u2841 0E16  
                      u3561 0437                        u3481 03C2                        u3641 0FD9  
                      u3625 0FAE                        u1970 15FD                        u1890 15AA  
                      u2930 0CAD                        u2770 0D5E                        u2850 0E1B  
                      u2690 000C                        u3570 044C                        u3490 03C7  
                      u3650 0FE0                        u1971 15FC                        u1955 15E5  
                      u1891 15A9                        u2931 0CAC                        u2771 0D5D  
                      u2851 0E1A                        u2691 000B                        u3707 0EE2  
                      u3571 044B                        u3491 03C6                        u3475 0387  
                      u3651 0FDF                        u3635 0FC2                        u1980 1602  
                      u2940 0CB1                        u2780 0D6F                        u2860 0E21  
                      u3580 046E                        u3660 0FE9                        u3717 169D  
                      u1981 1601                        u1965 15F1                        u2941 0CB0  
                      u2781 0D6E                        u2861 0E20                        u3581 046D  
                      u3661 0FE8                        u3645 0FD6                        u1990 1492  
                      u2870 0C07                        u2950 0CB8                        u2790 0D73  
                      u3590 0472                        u3670 0FED                        u3727 16AF  
                      u1991 1491                        u2871 0C06                        u2951 0CB7  
                      u2791 0D72                        u3591 0471                        u3671 0FEC  
                      u2880 0C0B                        u2960 0CC7                        u3680 0FF3  
                      u3737 16D2                        u2881 0C0A                        u2961 0CC6  
                      u3681 0FF2                        _MODE 0068                        u2890 0C12  
                      u2970 0CCB                        u3747 16E4                        u2891 0C11  
                      u2971 0CCA                        u2980 0CD1                        u3757 1282  
                      u2981 0CD0                        u2990 0A3D                        u3767 162E  
                      u2991 0A3C                        u3777 1640                        u3697 03B5  
                      u3787 1663                        u3797 1675                        _Mode 006B  
                      _giay 002E                        _main 0F47                        _ngay 0064  
                      _str1 00B0                        _str2 00A0                        _phut 0030  
                      btemp 007E            __end_of_I2C_init 1272            __end_of_I2C_read 136A  
     __size_of_I2C_Send_ACK 000A            __end_of_I2C_wait 1287                        start 0000  
          __end_of_I2C_stop 11EB                  i2c_write@a 0070            LCD_init@I2C_Addr 0077  
          __end_of_BCDtoDec 12D7           ___bmul@multiplier 0073             __end_of_SetDate 13D6  
           __end_of_SetGiay 1800             __end_of_SetNgay 0DF5             __end_of_SetMode 07DE  
           __end_of_SetPhut 0B63             __end_of_SetTime 15A5            __end_of_LCD_init 1344  
          __end_of_LCD_putc 16E9            __end_of_LCD_puts 148D                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___awdiv 160C  
                     STR_10 081A                       STR_11 0871                       STR_20 09A0  
                     STR_12 0894                       STR_13 09BE                       STR_21 08D8  
                     STR_30 090B                       STR_14 098C                       STR_22 0962  
                     STR_23 082B                       STR_15 0982                       STR_31 0957  
                     STR_32 082C                       STR_16 0996                       STR_40 096D  
                     STR_24 085F                       STR_41 082C                       STR_17 09B4  
                     STR_25 092B                       STR_33 091B                       STR_26 082C  
                     STR_50 08B6                       STR_18 09AA                       STR_34 0941  
                     STR_42 08B6                       STR_35 082C                       STR_51 08A5  
                     STR_19 0978                       STR_27 090B                       STR_43 08A5  
                     STR_44 082C                       STR_28 0936                       STR_36 08C7  
                     STR_52 0883             __end_of___awmod 14E6                       STR_29 082C  
                     STR_45 09E9                       STR_37 094C                       STR_38 082C  
                     STR_46 09E9                       STR_47 09E9                       STR_39 08E9  
                     STR_48 082C                       STR_49 08FA             ___awdiv@divisor 0070  
           __end_of___lwdiv 0A37             __end_of___lwmod 1410             ___awdiv@counter 0075  
  __end_of_RTC_Set_DateTime 1542                       _TRISB 0086          Display_Alarm@Vitri 004B  
                     _giobt 002C                       _namch 0034                       _namdv 0036  
           __end_of_isdigit 124B                       _thang 0062                  SetDate@tha 0047  
              _I2C_Send_ACK 11EB            __end_of_DecToBCD 144B                       pclath 000A  
          __end_of_RTC_init 12F9        RTC_Read_DateTime@rtc 0076      __size_of_I2C_Send_NACK 000A  
                     status 0003           __end_of_I2C_start 11E2                       wtemp0 007E  
           __end_of_sprintf 0623           __end_of_I2C_write 121F         __size_of_LCD_gotoxy 0036  
           __initialization 07DE                __end_of_main 1000                 LCD_gotoxy@x 0079  
               LCD_gotoxy@y 0076            __end_of_i2c_wait 122C            __end_of_i2c_stop 11D9  
                SetTime@gia 0047                      ??_main 005E            __end_of_SetNamdv 0D4D  
          __end_of_SetThang 0E9D               ??_Select_Menu 005B                 LCD_puts@str 0076  
                 ??_LCD_int 007A        __end_of_Display_Time 0317                DecToBCD@chuc 0043  
                _SetNamchuc 0C01            ___awdiv@dividend 0072                      _SSPADD 0093  
                    _TRISD0 0440                      _TRISC3 043B                      _TRISC4 043C  
                    _SSPBUF 0013          __size_of_i2c_start 0009          __size_of_i2c_write 000B  
                 ??_SetDate 007D                   ??_SetGiay 004B                   ??_SetNgay 004B  
                 ??_SetMode 004A                   ??_SetPhut 004B                   ??_SetTime 0048  
                    _SetGio 0A37                      _SetThu 0006                      ___bmul 1287  
                    ___wmul 12F9                   ??___awdiv 0074                   ??___awmod 0074  
                 ??___lwdiv 0074                   ??___lwmod 0074                      _giaybt 0028  
                 BCDtoDec@a 0079            ___awdiv@quotient 0077             ___awmod@divisor 0070  
                    _phutbt 002A               _I2C_Send_NACK 11F5             ___awmod@counter 0075  
             ??_Setup_Alarm 004D                   ??_isdigit 0070                   ?_I2C_init 0070  
                 ?_I2C_read 0070                   ?_I2C_wait 0070                   ?_I2C_stop 0070  
                 ?_BCDtoDec 0070                   ??_sprintf 0078         __end_of_Select_Menu 0F47  
              LCD_command@n 0075     __end_of__initialization 07FC        __size_of_LCD_command 006E  
                 ?_LCD_init 0070                   ?_LCD_putc 0070                   ?_LCD_puts 0076  
              LCD_int@value 0078         ___bmul@multiplicand 0070                  _TurnOn_Led 122C  
            __pcstackCOMMON 0070                __pidataBANK0 11FF              ?_I2C_Send_NACK 0070  
                 LCD_int@a1 0043                   LCD_int@a2 0047                   ?_DecToBCD 0070  
                 ?_RTC_init 0070                   LCD_putc@n 0075           __end_of_i2c_start 11D0  
                 LCD_puts@i 007B           __end_of_i2c_write 1214                ??_LCD_gotoxy 0077  
            _OPTION_REGbits 0081                  ??_I2C_init 0070                  ??_I2C_read 0072  
                ??_I2C_wait 0070                  ??_I2C_stop 0072                  ??_BCDtoDec 0074  
               ?_SetNamchuc 0070                sprintf@width 0051                LCD_putc@data 0074  
       __end_of_Setup_Alarm 0473                  __pbssBANK0 0020                  __pbssBANK1 00A0  
                 ?_i2c_wait 0070                   ?_i2c_stop 0070                  ??_LCD_init 0076  
     __end_of_i2c_LCD_write 12B9                  ??_LCD_putc 0072                  ??_LCD_puts 0078  
                 ?_SetNamdv 0070                   ?_SetThang 0070                     ?_SetGio 0070  
                   ?_SetThu 0070       __end_of_Display_Alarm 0C01                  __pmaintext 0F47  
        __end_of_LCD_gotoxy 13A0                     ?___bmul 0070                     ?___wmul 0070  
                ??_DecToBCD 0079                  ??_RTC_init 0073       __size_of_Display_Time 0132  
         ?_RTC_Set_DateTime 0070                     _LCD_int 00E4                 _Select_Menu 0E9D  
        ??_RTC_Set_DateTime 0073                     _SSPCON2 0091                     _RTCbits 003C  
                __stringtab 0800                  ??_i2c_wait 0070                  ??_i2c_stop 0070  
                I2C_write@a 0072              Setup_Alarm@dis 0050                  ??_SetNamdv 004B  
                ??_SetThang 004B                     _SetDate 13A0                     _SetGiay 176A  
                 DecToBCD@a 0045                     _SetNgay 0D4D                     _SetMode 0623  
                   _SetPhut 0ACD                     _SetTime 1542                   _I2C_start 11D9  
               ?_TurnOn_Led 0070             __size_of_SetGio 0096                   _I2C_write 1214  
           __size_of_SetThu 00DE                _Display_Time 01E5             __size_of___bmul 0015  
           ??_I2C_Send_NACK 0072                     ___awdiv 15A5                     ___awmod 148D  
           __size_of___wmul 0025           _RTC_Read_DateTime 16E9                     ___lwdiv 09F3  
                   ___lwmod 13D6         __size_of_SetNamchuc 00A6                     _demmenu 0038  
        ?_RTC_Read_DateTime 0070                     __ptext1 122C                     __ptext2 0317  
                   __ptext3 0B63                     __ptext4 0623                     __ptext5 12B9  
                   __ptext6 0E9D                     __ptext7 0006                     __ptext8 0DF5  
                   __ptext9 0ACD                  BCDtoDec@dv 0078           __end_of_hexpowers 081A  
                   _isdigit 1239                 _Setup_Alarm 0317            ___awmod@dividend 0072  
       ??_RTC_Read_DateTime 0075                     _sprintf 0473                     clrloop0 11C0  
      end_of_initialization 07FC                  ?_I2C_start 0070                  ?_I2C_write 0070  
 __end_of_RTC_Read_DateTime 176A                I2C_read@read 0074                __pstringtext 0800  
       __size_of_TurnOn_Led 000D           __size_of_I2C_init 0014           __size_of_I2C_read 0026  
         __size_of_I2C_wait 0015           __size_of_I2C_stop 0009           __size_of_BCDtoDec 001E  
         __size_of_LCD_init 0026           __size_of_LCD_putc 006F           __size_of_LCD_puts 0042  
            __end_of_SetGio 0ACD              __end_of_SetThu 00E4              __end_of___bmul 129C  
            __end_of___wmul 131E                   SetDate@ng 0046                   SetDate@nm 0048  
                 SetDate@th 0049           __size_of_DecToBCD 003B           __size_of_RTC_init 0022  
       start_initialization 07DE                  LCD_int@dem 0049                   _i2c_start 11C7  
                 _i2c_write 1209                ??_SetNamchuc 004B                   SetTime@gi 007D  
                 SetTime@ph 0046               ??_LCD_command 0072           __size_of_i2c_wait 000D  
         __size_of_i2c_stop 0009                    ??_SetGio 004B                 ??_I2C_start 0072  
                  ??_SetThu 004A                 ??_I2C_write 0072  __size_of_RTC_Read_DateTime 0081  
         __size_of_SetNamdv 00A6                    ??___bmul 0071           __size_of_SetThang 00A8  
                  ??___wmul 0074                  init_fetch0 124B                 __pdataBANK0 0062  
        __end_of_SetNamchuc 0CA7                ?_Select_Menu 0070                    ?_LCD_int 0078  
                 ___latbits 0002               __pcstackBANK0 0043                  ?_i2c_start 0070  
                ?_i2c_write 0070                _isdigit$1090 0070               ?_I2C_Send_ACK 0070  
                  LCD_int@i 0045                 sprintf@flag 004D                 sprintf@prec 0050  
 __size_of_RTC_Set_DateTime 005C         __end_of_LCD_command 167A                    ?_SetDate 0046  
                  ?_SetGiay 0070                    ?_SetNgay 0070                    ?_SetMode 0070  
                  ?_SetPhut 0070                    ?_SetTime 0046            ___lwdiv@dividend 0072  
              ??_TurnOn_Led 0072                    ?___awdiv 0070                    ?___awmod 0070  
                  ?___lwdiv 0070                    ?___lwmod 0070                BCDtoDec@chuc 0077  
                  ?_isdigit 0070                ?_Setup_Alarm 0070      __size_of_i2c_LCD_write 001D  
                  _I2C_init 125E                    _I2C_read 1344                    _I2C_wait 1272  
                  _I2C_stop 11E2           i2c_LCD_write@data 0071              ??_I2C_Send_ACK 0072  
                 _hexpowers 0812            ___lwdiv@quotient 0075                    _BCDtoDec 12B9  
    __size_of_Display_Alarm 009E                    ?_sprintf 0043          __end_of_TurnOn_Led 1239  
            ___wmul@product 0074                    _LCD_init 131E                   clear_ram0 11BF  
                  _LCD_putc 167A                    _LCD_puts 144B                 I2C_read@ACK 0073  
     __end_of_I2C_Send_NACK 11FF                    _DecToBCD 1410                 __stringbase 0812  
                  _RTC_init 12D7           ___wmul@multiplier 0070            __size_of_LCD_int 0101  
               ??_i2c_start 0070                 ??_i2c_write 0070                 _LCD_command 160C  
                  _i2c_addr 003A                    _i2c_wait 121F                    _i2c_stop 11D0  
                DecToBCD@dv 0044               _i2c_LCD_write 129C                    _SetNamdv 0CA7  
                  _SetThang 0DF5            __size_of_SetDate 0036            __size_of_SetGiay 0096  
          __size_of_SetNgay 00A8            __size_of_SetMode 01BB            __size_of_SetPhut 0096  
          __size_of_SetTime 0063               _Display_Alarm 0B63            __size_of___awdiv 0067  
          __size_of___awmod 0059            __size_of___lwdiv 0044            __size_of___lwmod 003A  
        __end_of__stringtab 0812                  sprintf@idx 004B                  sprintf@val 004E  
          __size_of_isdigit 0012             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
                  __ptext10 0D4D                    __ptext11 0CA7                    __ptext20 148D  
                  __ptext12 0C01                    __ptext21 15A5                    __ptext13 1287  
                  __ptext30 1344                    __ptext22 00E4                    __ptext14 13A0  
                  __ptext31 11F5                    __ptext23 13D6                    __ptext15 0A37  
                  __ptext40 1272                    __ptext32 11EB                    __ptext24 01E5  
                  __ptext16 176A                    __ptext41 125E                    __ptext33 144B  
                  __ptext25 0473                    __ptext17 1542                    __ptext42 131E  
                  __ptext34 167A                    __ptext26 1239                    __ptext18 14E6  
                  __ptext43 160C                    __ptext35 136A                    __ptext27 12F9  
                  __ptext19 1410                    __ptext44 129C                    __ptext36 12D7  
                  __ptext28 09F3                    __ptext45 1209                    __ptext37 1214  
                  __ptext29 16E9                    __ptext46 11D0                    __ptext38 11E2  
                  __ptext47 11C7                    __ptext39 11D9                    __ptext48 121F  
      __size_of_Select_Menu 00AA        Setup_Alarm@BthucMode 0052            __size_of_sprintf 01B0  
           _BackLight_State 003B               __size_of_main 00B9              ?_i2c_LCD_write 0070  
          _RTC_Set_DateTime 14E6              ?_Display_Alarm 004B        __end_of_I2C_Send_ACK 11F5  
                _LCD_gotoxy 136A                    init_ram0 124F                    isdigit@c 0071  
      __size_of_Setup_Alarm 015C          LCD_command@command 0074                   sprintf@ap 004C  
                 sprintf@sp 0053            ___lwmod@dividend 0072                   stringcode 080A  
             ?_Display_Time 0070                    sprintf@c 0054                    sprintf@f 0043  
           ___lwmod@divisor 0070             ___lwmod@counter 0075                    stringtab 0800  
               _SSPCON2bits 0091             main@DangBaoThuc 0060             ??_i2c_LCD_write 0071  
                _SSPCONbits 0014             ??_Display_Alarm 007D         RTC_Set_DateTime@rtc 0073  
            ??_Display_Time 0055  
